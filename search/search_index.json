{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"FlubuCore \u00b6 \u6982\u8ff0 \u00b6 \u201cFlubuCore - Fluent Builder Core\u201d\uff0c\u8de8\u5e73\u53f0\u7684\u6784\u5efa\u4e0e\u90e8\u7f72\u81ea\u52a8\u5316\u7cfb\u7edf\uff0c\u901a\u8fc7\u76f4\u89c2\u7684 Fluent \u63a5\u53e3\uff0c\u4f7f\u7528 C# \u5b9a\u4e49\u6784\u5efa\u548c\u90e8\u7f72\u811a\u672c\u3002\u8fd9\u4f7f\u4f60\u7684\u4ee3\u7801\u83b7\u5f97\u81ea\u52a8\u5b8c\u6210\u3001IntelliSense\u3001\u8c03\u8bd5\u3001FlubuCore \u81ea\u5b9a\u4e49\u5206\u6790\u5668\uff0c\u4ee5\u53ca\u5728\u811a\u672c\u4e2d\u5bf9\u6574\u4e2a .NET \u751f\u6001\u7684\u539f\u751f\u6027\u8bbf\u95ee\u3002 \u901a\u8fc7 roslyn \u7684\u5f3a\u5927\u8d4b\u80fd\uff0cFlubuCore \u63d0\u4f9b\u6709 .NET/.NET Core \u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\u7528\u4e8e\u7f16\u8bd1\u548c\u6267\u884c\u811a\u672c\u3002\u4ee5\u4e0a\u793a\u4f8b\u5747\u53ef\u4ece\u63a7\u5236\u53f0\u8fd0\u884c\uff1a FlubuCore runner flubu.exe Default FlubuCore dotnet cli tool dotnet flubu Default FlubuCore local or global tool flubu Default \u529f\u80fd\u4e0e\u4f18\u52bf \u00b6 \u76f4\u89c2\uff0c\u6613\u5b66\u3002C#\u3001\u6d41\u7545\u7684 API \u8bbe\u8ba1\u548c IntelliSense\uff0c\u4f7f\u590d\u6742\u811a\u672c\u7684\u6784\u5efa\u53d8\u5f97\u4e3e\u91cd\u82e5\u8f7b\u3002 [FromArg(\"nugetKey\", \"Nuget api key for publishing Flubu nuget packages.\")] public string NugetApiKey { get ; set ; } protected override void ConfigureTargets ( ITaskContext context ) { var pack = context . CreateTarget ( \"Pack\" ) . SetDescription ( \"Prepare's nuget package.\" ) . AddCoreTask ( x => x . Pack () . NoBuild () . OutputDirectory ( OutputDirectory ) . WithArguments ( \"--force\" ); //you can add your own custom arguments on each task var branch = context . BuildSystems (). Travis (). Branch ; var nugetPush = context . CreateTarget ( \"Nuget.publish\" ) . SetDescription ( \"Publishes nuget package.\" ) . DependsOn ( pack ) . AddCoreTask ( x => x . NugetPush ( $ \"{OutputDirectory}/NetCoreOpenSource.nupkg\" ) . ServerUrl ( \"https://www.nuget.org/api/v2/package\" ) . ApiKey ( NugetApiKey ) ) . When (( c ) => c . BuildSystems (). RunningOn == BuildSystemType . TravisCI && ! string . IsNullOrEmpty ( branch ) && branch . EndsWith ( \"stable\" , StringComparison . OrdinalIgnoreCase )); } \u5185\u7f6e\u5927\u91cf\u5e38\u7528\u4efb\u52a1 \uff0c\u5982\u8fd0\u884c\u6d4b\u8bd5\u3001versioning\u3001\u7ba1\u7406 ISS\u3001\u521b\u5efa\u90e8\u7f72\u5305\uff08deployment packages\uff09\u3001\u53d1\u5e03 NuGet \u5305\u3001docker \u4efb\u52a1\u3001 sql tasks, git tasks, \u6267\u884c PowerShell \u811a\u672c\u7b49\u3002 context . CreateTarget ( \"build\" ) . AddTask ( x => x . GitVersionTask ()) . AddTask ( x => x . CompileSolutionTask ( \"MySolution.sln\" ). BuildConfiguration ( \"Release\" ); context . CreateTarget ( \"run.tests\" ) . AddTask ( x => x . XunitTaskByProjectName ( \"MyProject\" ). StopOnFail ()) . AddTask ( x => x . NUnitTask ( NunitCmdOptions . V3 , \"MyProject2\" ). ExcludeCategory ( \"Linux\" )) . AddCoreTask ( x => x . CoverletTask ( \"MyProject.dll\" )); \u6267\u884c\u81ea\u4e49\u5b9a\u4ee3\u7801 \u3002 context . CreateTarget ( \"DoExample\" ) . Do (( c ) => { //// write your awesome code. File . Copy ( \"NotSoAwesome.txt\" , Path . Combine ( OutputDirectory , \"JustAnExample.txt\" ) ); //// Access flubu built in tasks in DO if needed. c . Tasks (). GenerateT4Template ( \"example.TT\" ). Execute ( c ); }) . AddTask ( x => x . CompileSolutionTask ()) . Do ( NuGetPackageReferencingExample ); \u5f53\u811a\u672c\u4e0e\u9879\u76ee\u6587\u4ef6\u4e00\u8d77\u4f7f\u7528\u65f6 \u4f1a\u81ea\u52a8\u52a0\u8f7d\u7a0b\u5e8f\u96c6\u5f15\u7528\u548c NuGet \u5305 \u3002\u5f53\u811a\u672c\u5355\u72ec\u6267\u884c\uff08\u8b6c\u5982\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528 FlubuCore \u811a\u672c\u8fdb\u884c\u90e8\u7f72\uff09\u65f6\uff0c\u53ef\u5728\u7279\u6027\uff08attributes\uff09\u4e2d\u6dfb\u52a0\u5f15\u7528\uff08references\uff09\u3002 [NugetPackage(\"Newtonsoft.json\", \"11.0.2\")] [Assembly(\".\\Lib\\EntityFramework.dll\")] public class BuildScript : DefaultBuildScript { public void NuGetPackageReferencingExample ( ITaskContext context ) { JsonConvert . SerializeObject ( \"Example\" ); } } \u5728\u811a\u672c\u4e2d\u8f7b\u677e\u8fd0\u884c\u4efb\u4f55\u5916\u90e8\u7a0b\u5e8f\uff08external program\uff09\u6216\u63a7\u5236\u53f0\u547d\u4ee4\uff08console command\uff09 \u3002 public class SimpleScript : DefaultBuildScript { protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Run.Libz\" ) . AddTask ( x => x . RunProgramTask ( @\"packages\\LibZ.Tool\\1.2.0\\tools\\libz.exe\" ) . WorkingFolder ( @\".\\src\" ) . WithArguments ( \"add\" ) . WithArguments ( \"--libz\" , \"Assemblies.libz\" )); } } \u5c06\u547d\u4ee4\u884c\u53c2\u6570\uff08command line arguments\uff09\u3001json \u914d\u7f6e\u6587\u4ef6\u6216\u73af\u5883\u53d8\u91cf\uff08environment variables\uff09\u7684\u8bbe\u7f6e\u4f20\u5165\u811a\u672c \u3002 public class SimpleScript : DefaultBuildScript { [FromArg(\"c\", \"The configuration to use for building the project.\")] public string Configuration { get ; set ; } = \"Release\" [FromArg(\"sn\", \"If true app is deployed on second node. Otherwise not.\")] public bool deployOnSecondNode { get ; set ; } protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"build\" ) . AddCoreTask ( x => x . Build () . Configuration ( Configuration ) . ForMember ( x => x . Framework ( \"net462\" ), \"f\" , \"The target framework to build for.\" )); } } flubu build -c=Debug -f=netcoreapp2.0 \u901a\u8fc7\u5728 FlubuCore \u63d2\u4ef6\u4e2d\u7f16\u5199\u81ea\u5df1\u7684\u4efb\u52a1\u6765\u6269\u5c55 FlubuCore Fluent Api \u3002 public class ExampleFlubuPluginTask : TaskBase < int , ExampleFlubuPluginTask > { protected override int DoExecute ( ITaskContextInternal context ) { // Write your task logic here. return 0 ; } } \u4e0d\u65ad\u4e30\u5bcc\u4e2d\u7684 FlubuCore \u63d2\u4ef6\u8865\u5145\u7740\u5185\u7f6e\u4efb\u52a1 \u3002 \u5f02\u6b65\u6267\u884c\u4efb\u52a1\u3001\u76ee\u6807\u4f9d\u8d56\u4e0e\u81ea\u5b9a\u4e49\u4ee3\u7801 \u3002 context . CreateTarget ( \"Run.Tests\" ) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName1\" )) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName1\" )) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName3\" )); \u901a\u8fc7\u63a7\u5236\u53f0\u7a0b\u5e8f\u4e3a\u4efb\u52a1\u6dfb\u52a0\u989d\u5916\u914d\u7f6e\u9879\uff08additional options\uff09\uff0c\u6216\u5bf9\u73b0\u6709\u7684\u914d\u7f6e\u9879\u8fdb\u884c\u91cd\u5199\uff08override\uff09 context . CreateTarget ( \"Example\" ) ` . AddCoreTask ( x => x . Build ( \"MySolution.sln\" ). Configuration ( \"Release\" ); flubu example --configuration=Debug flubu \u5c06\u6267\u884c dotnet build MySolution.sln --configuration Debug \u5b8c\u6574\u7684 .NET Core \u652f\u6301\uff0c\u5305\u62ec\u5168\u5c40 CLI \u5de5\u5177 dotnet tool install --global FlubuCore.GlobalTool flubu compile \u53ef\u5bf9\u6784\u5efa\u811a\u672c\u6d4b\u8bd5\u548c\u8c03\u8bd5 context . WaitForDebugger (); \u900f\u8fc7 FlubuCore Web API \u8f7b\u677e\u5b9e\u73b0\u8fdc\u7a0b\u90e8\u7f72\u81ea\u52a8\u5316 \u53ef\u5728\u5176\u4ed6 .NET \u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528 FlubuCore \u4efb\u52a1 \u3002 FlubuCore \u4ea4\u4e92\u6a21\u5f0f\uff08interactive mode\uff09 \u63d0\u4f9b\u6709 target \u6807\u7b7e\u81ea\u52a8\u5b8c\u6210\u3001\u9009\u9879\u6807\u7b7e\u81ea\u52a8\u5b8c\u6210\u3001\u5207\u6362 target/options\uff0c\u4ee5\u53ca\u547d\u4ee4\u6267\u884c\u5386\u53f2\u3002\u8fd8\u53ef\u4ee5\u6267\u884c\u5916\u90e8\u547d\u4ee4\u548c\u53ef\u64cd\u4f5c\u7a0b\u5e8f\u3002\u5bf9\u4e8e\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff0cFlubuCore \u8fd8\u63d0\u4f9b\u4e86 Tab \u952e\u81ea\u52a8\u8865\u5168\u7684\u529f\u80fd\uff08\u6bd4\u5982 dotnet\u3001git \u7b49\uff09 \u4f7f\u7528 FlubuCore \u81ea\u5b9a\u4e49\u5206\u6790\u5668\uff08FlubuCore custom analyzers\uff09\u589e\u5f3a\u5f00\u53d1\u4f53\u9a8c\u3002 \u5165\u95e8 \u00b6 FlubuCore \u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355:-) \u800c\u4e14\u5979\u7684\u6587\u6863\u4e5f\u975e\u5e38\u5b8c\u6574\u3002 FlubuCore \u6587\u6863 \u4e2d\u7684 \u5165\u95e8 \u4e00\u7ae0\u5c06\u5e2e\u52a9\u4f60\u7acb\u5373\u8bbe\u7f6e\u4f60\u7684\u7b2c\u4e00\u4e2a FlubuCore \u6784\u5efa\u3002 \u53ef\u5728 \u6784\u5efa\u811a\u672c\u7684\u539f\u7406 \u4e00\u7ae0\u4e2d\u67e5\u9605 FlubuCore \u63d0\u4f9b\u7684\u5b8c\u6574\u529f\u80fd\u5217\u8868\u3002 \u4e00\u65e6\u4f60\u5b9a\u4e49\u4e86\u6784\u5efa\u4e0e\u90e8\u7f72\u811a\u672c\uff08build and deployment scripts\uff09\uff0c\u4ee5\u4e0b Wiki \u5f20\u6770\u5c06\u89e3\u91ca\u5982\u4f55\u8fd0\u884c\u5b83\u4eec\uff1a \u9488\u5bf9 .NET Framework \u9879\u76ee\uff0c\u8bf7\u4f7f\u7528 FlubuCore.Runner \u9488\u5bf9 .NET Core \u9879\u76ee\uff0c\u8bf7\u4f7f\u7528 FlubuCore CLI global tool \u8303\u4f8b \u00b6 \u9664\u4e86 Wiki \u7684\u8be6\u7ec6\u4ecb\u7ecd\u5916\uff0cFlubuCore \u8fd8\u63d0\u4f9b\u4e86\u5927\u91cf\u4e0e\u771f\u5b9e\u60c5\u51b5\u76f8\u82e5\u7684\u8303\u4f8b\u3002\u8fd9\u4e9b\u4f8b\u5b50\u53ef\u4ee5\u5728\u72ec\u7acb\u4ed3\u5e93 Examples repository \u4e2d\u627e\u5230\u3002 \u8fd9\u4e9b\u793a\u4f8b\u6709\u52a9\u4e8e\u4f60\u5feb\u901f\u5165\u95e8 FlubuCore\uff1a \u8fd9\u4e9b\u793a\u4f8b\u6709\u52a9\u4e8e\u4f60\u5feb\u901f\u5165\u95e8 FlubuCore\uff1a .NET Framework \u6784\u5efa\u793a\u4f8b - Example covers versioning, building the project, running tests, packaging application for deployment. .NET Core \u6784\u5efa\u793a\u4f8b - Example covers versioning, building the project, running tests, packaging application for deployment. \u90e8\u7f72\u811a\u672c\u793a\u4f8b - Example shows how to write simple deployment script. Open source library example - Example covers versioning, building the project, running tests and publishing nuget package. It also covers how to run build script on Appveyor and Travis CI. \u7591\u60d1\uff1f \u00b6 \u8d21\u732e \u00b6 \u8bf7\u79fb\u6b65\u9605\u8bfb CONTRIBUTING.md . \u5982\u4f55\u4f5c\u51fa\u8d21\u732e \u00b6 \u4e3a\u672c\u9879\u76ee\u505a\u63a8\u5e7f\u3002 \u5982\u679c\u4f60\u5bf9\u672c\u9879\u76ee\u611f\u5174\u8da3\uff0c\u8bf7\u5728\u53f3\u4e0a\u89d2\u70b9\u51fb star\uff0c\u4ee5\u4fbf\u58ee\u5927\u6211\u4eec\u7684\u793e\u533a\u3002 \u6539\u8fdb\u6587\u6863 \u53cd\u9988\u3001\u4fee\u6b63 Bug\u3002 \u5b9e\u73b0\u65b0\u529f\u80fd\u3002 \u8ba8\u8bba\u5982\u4f55\u8fdb\u4e00\u6b65\u6539\u8fdb\u9879\u76ee\u3002 \u6539\u5584\u9879\u76ee\u7684\u73b0\u6709\u5b9e\u73b0\u3001\u6027\u80fd\u7b49\u3002 Further Development \u00b6 If you find FlubuCore useful (you feel it helps you on the daily basis) you can support further development by buying us a coffee (or become a backer or sponsor). Sometimes it's hard to stay awake till midnight implementing new features, coffee helps us with that. We would really appreciate your support. Money from sponsorship will also be used for the promotion of the project. If you are a backer or a sponsor you can also request for a new feature or ask for support. These issues will be handled with highest priority. Backers and Sponsors \u00b6 \u66f4\u65b0\u65e5\u5fd7\u4e0e\u8def\u7ebf\u56fe \u00b6 \u8be6\u7ec6\u53d8\u66f4\u8bb0\u5f55\u4e0e\u793a\u4f8b\u8bf7\u53c2\u9605 \u53d8\u66f4\u65e5\u5fd7 \u3002 FlubuCore \u8def\u7ebf\u56fe\u8bf7\u7ffb\u9605\u9879\u76ee \u91cc\u7a0b\u7891 \u3002 Acknowledgements \u00b6 Special thanks to @ironcev for greatly improving readme and for giving some valuable advices. Special thanks to @alexinea for translating whole documentation to Chinese. Special thanks to @huanlin for writing blogs about FlubuCore in Traditional Chinese and for translationg them to English. .NET Foundation \u00b6 This project is supported by the .NET Foundation .","title":"FlubuCore"},{"location":"#flubucore","text":"","title":"FlubuCore"},{"location":"#_1","text":"\u201cFlubuCore - Fluent Builder Core\u201d\uff0c\u8de8\u5e73\u53f0\u7684\u6784\u5efa\u4e0e\u90e8\u7f72\u81ea\u52a8\u5316\u7cfb\u7edf\uff0c\u901a\u8fc7\u76f4\u89c2\u7684 Fluent \u63a5\u53e3\uff0c\u4f7f\u7528 C# \u5b9a\u4e49\u6784\u5efa\u548c\u90e8\u7f72\u811a\u672c\u3002\u8fd9\u4f7f\u4f60\u7684\u4ee3\u7801\u83b7\u5f97\u81ea\u52a8\u5b8c\u6210\u3001IntelliSense\u3001\u8c03\u8bd5\u3001FlubuCore \u81ea\u5b9a\u4e49\u5206\u6790\u5668\uff0c\u4ee5\u53ca\u5728\u811a\u672c\u4e2d\u5bf9\u6574\u4e2a .NET \u751f\u6001\u7684\u539f\u751f\u6027\u8bbf\u95ee\u3002 \u901a\u8fc7 roslyn \u7684\u5f3a\u5927\u8d4b\u80fd\uff0cFlubuCore \u63d0\u4f9b\u6709 .NET/.NET Core \u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\u7528\u4e8e\u7f16\u8bd1\u548c\u6267\u884c\u811a\u672c\u3002\u4ee5\u4e0a\u793a\u4f8b\u5747\u53ef\u4ece\u63a7\u5236\u53f0\u8fd0\u884c\uff1a FlubuCore runner flubu.exe Default FlubuCore dotnet cli tool dotnet flubu Default FlubuCore local or global tool flubu Default","title":"\u6982\u8ff0"},{"location":"#_2","text":"\u76f4\u89c2\uff0c\u6613\u5b66\u3002C#\u3001\u6d41\u7545\u7684 API \u8bbe\u8ba1\u548c IntelliSense\uff0c\u4f7f\u590d\u6742\u811a\u672c\u7684\u6784\u5efa\u53d8\u5f97\u4e3e\u91cd\u82e5\u8f7b\u3002 [FromArg(\"nugetKey\", \"Nuget api key for publishing Flubu nuget packages.\")] public string NugetApiKey { get ; set ; } protected override void ConfigureTargets ( ITaskContext context ) { var pack = context . CreateTarget ( \"Pack\" ) . SetDescription ( \"Prepare's nuget package.\" ) . AddCoreTask ( x => x . Pack () . NoBuild () . OutputDirectory ( OutputDirectory ) . WithArguments ( \"--force\" ); //you can add your own custom arguments on each task var branch = context . BuildSystems (). Travis (). Branch ; var nugetPush = context . CreateTarget ( \"Nuget.publish\" ) . SetDescription ( \"Publishes nuget package.\" ) . DependsOn ( pack ) . AddCoreTask ( x => x . NugetPush ( $ \"{OutputDirectory}/NetCoreOpenSource.nupkg\" ) . ServerUrl ( \"https://www.nuget.org/api/v2/package\" ) . ApiKey ( NugetApiKey ) ) . When (( c ) => c . BuildSystems (). RunningOn == BuildSystemType . TravisCI && ! string . IsNullOrEmpty ( branch ) && branch . EndsWith ( \"stable\" , StringComparison . OrdinalIgnoreCase )); } \u5185\u7f6e\u5927\u91cf\u5e38\u7528\u4efb\u52a1 \uff0c\u5982\u8fd0\u884c\u6d4b\u8bd5\u3001versioning\u3001\u7ba1\u7406 ISS\u3001\u521b\u5efa\u90e8\u7f72\u5305\uff08deployment packages\uff09\u3001\u53d1\u5e03 NuGet \u5305\u3001docker \u4efb\u52a1\u3001 sql tasks, git tasks, \u6267\u884c PowerShell \u811a\u672c\u7b49\u3002 context . CreateTarget ( \"build\" ) . AddTask ( x => x . GitVersionTask ()) . AddTask ( x => x . CompileSolutionTask ( \"MySolution.sln\" ). BuildConfiguration ( \"Release\" ); context . CreateTarget ( \"run.tests\" ) . AddTask ( x => x . XunitTaskByProjectName ( \"MyProject\" ). StopOnFail ()) . AddTask ( x => x . NUnitTask ( NunitCmdOptions . V3 , \"MyProject2\" ). ExcludeCategory ( \"Linux\" )) . AddCoreTask ( x => x . CoverletTask ( \"MyProject.dll\" )); \u6267\u884c\u81ea\u4e49\u5b9a\u4ee3\u7801 \u3002 context . CreateTarget ( \"DoExample\" ) . Do (( c ) => { //// write your awesome code. File . Copy ( \"NotSoAwesome.txt\" , Path . Combine ( OutputDirectory , \"JustAnExample.txt\" ) ); //// Access flubu built in tasks in DO if needed. c . Tasks (). GenerateT4Template ( \"example.TT\" ). Execute ( c ); }) . AddTask ( x => x . CompileSolutionTask ()) . Do ( NuGetPackageReferencingExample ); \u5f53\u811a\u672c\u4e0e\u9879\u76ee\u6587\u4ef6\u4e00\u8d77\u4f7f\u7528\u65f6 \u4f1a\u81ea\u52a8\u52a0\u8f7d\u7a0b\u5e8f\u96c6\u5f15\u7528\u548c NuGet \u5305 \u3002\u5f53\u811a\u672c\u5355\u72ec\u6267\u884c\uff08\u8b6c\u5982\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528 FlubuCore \u811a\u672c\u8fdb\u884c\u90e8\u7f72\uff09\u65f6\uff0c\u53ef\u5728\u7279\u6027\uff08attributes\uff09\u4e2d\u6dfb\u52a0\u5f15\u7528\uff08references\uff09\u3002 [NugetPackage(\"Newtonsoft.json\", \"11.0.2\")] [Assembly(\".\\Lib\\EntityFramework.dll\")] public class BuildScript : DefaultBuildScript { public void NuGetPackageReferencingExample ( ITaskContext context ) { JsonConvert . SerializeObject ( \"Example\" ); } } \u5728\u811a\u672c\u4e2d\u8f7b\u677e\u8fd0\u884c\u4efb\u4f55\u5916\u90e8\u7a0b\u5e8f\uff08external program\uff09\u6216\u63a7\u5236\u53f0\u547d\u4ee4\uff08console command\uff09 \u3002 public class SimpleScript : DefaultBuildScript { protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Run.Libz\" ) . AddTask ( x => x . RunProgramTask ( @\"packages\\LibZ.Tool\\1.2.0\\tools\\libz.exe\" ) . WorkingFolder ( @\".\\src\" ) . WithArguments ( \"add\" ) . WithArguments ( \"--libz\" , \"Assemblies.libz\" )); } } \u5c06\u547d\u4ee4\u884c\u53c2\u6570\uff08command line arguments\uff09\u3001json \u914d\u7f6e\u6587\u4ef6\u6216\u73af\u5883\u53d8\u91cf\uff08environment variables\uff09\u7684\u8bbe\u7f6e\u4f20\u5165\u811a\u672c \u3002 public class SimpleScript : DefaultBuildScript { [FromArg(\"c\", \"The configuration to use for building the project.\")] public string Configuration { get ; set ; } = \"Release\" [FromArg(\"sn\", \"If true app is deployed on second node. Otherwise not.\")] public bool deployOnSecondNode { get ; set ; } protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"build\" ) . AddCoreTask ( x => x . Build () . Configuration ( Configuration ) . ForMember ( x => x . Framework ( \"net462\" ), \"f\" , \"The target framework to build for.\" )); } } flubu build -c=Debug -f=netcoreapp2.0 \u901a\u8fc7\u5728 FlubuCore \u63d2\u4ef6\u4e2d\u7f16\u5199\u81ea\u5df1\u7684\u4efb\u52a1\u6765\u6269\u5c55 FlubuCore Fluent Api \u3002 public class ExampleFlubuPluginTask : TaskBase < int , ExampleFlubuPluginTask > { protected override int DoExecute ( ITaskContextInternal context ) { // Write your task logic here. return 0 ; } } \u4e0d\u65ad\u4e30\u5bcc\u4e2d\u7684 FlubuCore \u63d2\u4ef6\u8865\u5145\u7740\u5185\u7f6e\u4efb\u52a1 \u3002 \u5f02\u6b65\u6267\u884c\u4efb\u52a1\u3001\u76ee\u6807\u4f9d\u8d56\u4e0e\u81ea\u5b9a\u4e49\u4ee3\u7801 \u3002 context . CreateTarget ( \"Run.Tests\" ) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName1\" )) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName1\" )) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName3\" )); \u901a\u8fc7\u63a7\u5236\u53f0\u7a0b\u5e8f\u4e3a\u4efb\u52a1\u6dfb\u52a0\u989d\u5916\u914d\u7f6e\u9879\uff08additional options\uff09\uff0c\u6216\u5bf9\u73b0\u6709\u7684\u914d\u7f6e\u9879\u8fdb\u884c\u91cd\u5199\uff08override\uff09 context . CreateTarget ( \"Example\" ) ` . AddCoreTask ( x => x . Build ( \"MySolution.sln\" ). Configuration ( \"Release\" ); flubu example --configuration=Debug flubu \u5c06\u6267\u884c dotnet build MySolution.sln --configuration Debug \u5b8c\u6574\u7684 .NET Core \u652f\u6301\uff0c\u5305\u62ec\u5168\u5c40 CLI \u5de5\u5177 dotnet tool install --global FlubuCore.GlobalTool flubu compile \u53ef\u5bf9\u6784\u5efa\u811a\u672c\u6d4b\u8bd5\u548c\u8c03\u8bd5 context . WaitForDebugger (); \u900f\u8fc7 FlubuCore Web API \u8f7b\u677e\u5b9e\u73b0\u8fdc\u7a0b\u90e8\u7f72\u81ea\u52a8\u5316 \u53ef\u5728\u5176\u4ed6 .NET \u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528 FlubuCore \u4efb\u52a1 \u3002 FlubuCore \u4ea4\u4e92\u6a21\u5f0f\uff08interactive mode\uff09 \u63d0\u4f9b\u6709 target \u6807\u7b7e\u81ea\u52a8\u5b8c\u6210\u3001\u9009\u9879\u6807\u7b7e\u81ea\u52a8\u5b8c\u6210\u3001\u5207\u6362 target/options\uff0c\u4ee5\u53ca\u547d\u4ee4\u6267\u884c\u5386\u53f2\u3002\u8fd8\u53ef\u4ee5\u6267\u884c\u5916\u90e8\u547d\u4ee4\u548c\u53ef\u64cd\u4f5c\u7a0b\u5e8f\u3002\u5bf9\u4e8e\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff0cFlubuCore \u8fd8\u63d0\u4f9b\u4e86 Tab \u952e\u81ea\u52a8\u8865\u5168\u7684\u529f\u80fd\uff08\u6bd4\u5982 dotnet\u3001git \u7b49\uff09 \u4f7f\u7528 FlubuCore \u81ea\u5b9a\u4e49\u5206\u6790\u5668\uff08FlubuCore custom analyzers\uff09\u589e\u5f3a\u5f00\u53d1\u4f53\u9a8c\u3002","title":"\u529f\u80fd\u4e0e\u4f18\u52bf"},{"location":"#_3","text":"FlubuCore \u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355:-) \u800c\u4e14\u5979\u7684\u6587\u6863\u4e5f\u975e\u5e38\u5b8c\u6574\u3002 FlubuCore \u6587\u6863 \u4e2d\u7684 \u5165\u95e8 \u4e00\u7ae0\u5c06\u5e2e\u52a9\u4f60\u7acb\u5373\u8bbe\u7f6e\u4f60\u7684\u7b2c\u4e00\u4e2a FlubuCore \u6784\u5efa\u3002 \u53ef\u5728 \u6784\u5efa\u811a\u672c\u7684\u539f\u7406 \u4e00\u7ae0\u4e2d\u67e5\u9605 FlubuCore \u63d0\u4f9b\u7684\u5b8c\u6574\u529f\u80fd\u5217\u8868\u3002 \u4e00\u65e6\u4f60\u5b9a\u4e49\u4e86\u6784\u5efa\u4e0e\u90e8\u7f72\u811a\u672c\uff08build and deployment scripts\uff09\uff0c\u4ee5\u4e0b Wiki \u5f20\u6770\u5c06\u89e3\u91ca\u5982\u4f55\u8fd0\u884c\u5b83\u4eec\uff1a \u9488\u5bf9 .NET Framework \u9879\u76ee\uff0c\u8bf7\u4f7f\u7528 FlubuCore.Runner \u9488\u5bf9 .NET Core \u9879\u76ee\uff0c\u8bf7\u4f7f\u7528 FlubuCore CLI global tool","title":"\u5165\u95e8"},{"location":"#_4","text":"\u9664\u4e86 Wiki \u7684\u8be6\u7ec6\u4ecb\u7ecd\u5916\uff0cFlubuCore \u8fd8\u63d0\u4f9b\u4e86\u5927\u91cf\u4e0e\u771f\u5b9e\u60c5\u51b5\u76f8\u82e5\u7684\u8303\u4f8b\u3002\u8fd9\u4e9b\u4f8b\u5b50\u53ef\u4ee5\u5728\u72ec\u7acb\u4ed3\u5e93 Examples repository \u4e2d\u627e\u5230\u3002 \u8fd9\u4e9b\u793a\u4f8b\u6709\u52a9\u4e8e\u4f60\u5feb\u901f\u5165\u95e8 FlubuCore\uff1a \u8fd9\u4e9b\u793a\u4f8b\u6709\u52a9\u4e8e\u4f60\u5feb\u901f\u5165\u95e8 FlubuCore\uff1a .NET Framework \u6784\u5efa\u793a\u4f8b - Example covers versioning, building the project, running tests, packaging application for deployment. .NET Core \u6784\u5efa\u793a\u4f8b - Example covers versioning, building the project, running tests, packaging application for deployment. \u90e8\u7f72\u811a\u672c\u793a\u4f8b - Example shows how to write simple deployment script. Open source library example - Example covers versioning, building the project, running tests and publishing nuget package. It also covers how to run build script on Appveyor and Travis CI.","title":"\u8303\u4f8b"},{"location":"#_5","text":"","title":"\u7591\u60d1\uff1f"},{"location":"#_6","text":"\u8bf7\u79fb\u6b65\u9605\u8bfb CONTRIBUTING.md .","title":"\u8d21\u732e"},{"location":"#_7","text":"\u4e3a\u672c\u9879\u76ee\u505a\u63a8\u5e7f\u3002 \u5982\u679c\u4f60\u5bf9\u672c\u9879\u76ee\u611f\u5174\u8da3\uff0c\u8bf7\u5728\u53f3\u4e0a\u89d2\u70b9\u51fb star\uff0c\u4ee5\u4fbf\u58ee\u5927\u6211\u4eec\u7684\u793e\u533a\u3002 \u6539\u8fdb\u6587\u6863 \u53cd\u9988\u3001\u4fee\u6b63 Bug\u3002 \u5b9e\u73b0\u65b0\u529f\u80fd\u3002 \u8ba8\u8bba\u5982\u4f55\u8fdb\u4e00\u6b65\u6539\u8fdb\u9879\u76ee\u3002 \u6539\u5584\u9879\u76ee\u7684\u73b0\u6709\u5b9e\u73b0\u3001\u6027\u80fd\u7b49\u3002","title":"\u5982\u4f55\u4f5c\u51fa\u8d21\u732e"},{"location":"#further-development","text":"If you find FlubuCore useful (you feel it helps you on the daily basis) you can support further development by buying us a coffee (or become a backer or sponsor). Sometimes it's hard to stay awake till midnight implementing new features, coffee helps us with that. We would really appreciate your support. Money from sponsorship will also be used for the promotion of the project. If you are a backer or a sponsor you can also request for a new feature or ask for support. These issues will be handled with highest priority.","title":"Further Development"},{"location":"#backers-and-sponsors","text":"","title":"Backers and Sponsors"},{"location":"#_8","text":"\u8be6\u7ec6\u53d8\u66f4\u8bb0\u5f55\u4e0e\u793a\u4f8b\u8bf7\u53c2\u9605 \u53d8\u66f4\u65e5\u5fd7 \u3002 FlubuCore \u8def\u7ebf\u56fe\u8bf7\u7ffb\u9605\u9879\u76ee \u91cc\u7a0b\u7891 \u3002","title":"\u66f4\u65b0\u65e5\u5fd7\u4e0e\u8def\u7ebf\u56fe"},{"location":"#acknowledgements","text":"Special thanks to @ironcev for greatly improving readme and for giving some valuable advices. Special thanks to @alexinea for translating whole documentation to Chinese. Special thanks to @huanlin for writing blogs about FlubuCore in Traditional Chinese and for translationg them to English.","title":"Acknowledgements"},{"location":"#net-foundation","text":"This project is supported by the .NET Foundation .","title":".NET Foundation"},{"location":"Tests-debugging/","text":"Debug script through .net core console application \u00b6 The easiest way to debug your script is that you place your script in a console application and execute it in console application. After that you can debug your script as any other application. How to execute scripts through console application can be found here. \u7f16\u5199\u6d4b\u8bd5\u6784\u5efa\u811a\u672c\u4e0e\u901a\u8fc7\u6d4b\u8bd5\u8c03\u8bd5\u6784\u5efa\u811a\u672c \u00b6 Wiki \u6587\u6863\u5373\u5c06\u63a8\u51fa\u3002\u5148\u901a\u8fc7\u7b80\u5355\u7684\u6d4b\u8bd5\u6765\u4e0a\u624b\uff1a https://github.com/dotnetcore/FlubuCore.Examples/blob/master/NetCore_csproj/BuildScript/BuildScriptTests.cs \u5982\u6709\u9700\u8981\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\u8c03\u8bd5\u6784\u5efa\u811a\u672c\u3002 \u4f60\u4e5f\u53ef\u4ee5\u5728\u5176\u5b83 .NET \u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528 flub \u4efb\u52a1\uff0c\u5c31\u50cf\u4e0a\u9762\u7684\u6d4b\u8bd5\u793a\u4f8b\u4e00\u6837\u3002 \u901a\u8fc7\u9644\u52a0\u5230\u8fd0\u884c\u4e2d\u7684\u8fdb\u7a0b\u6765\u8c03\u8bd5\u6784\u5efa\u811a\u672c \u00b6 \u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u8bd5\u5668\uff08debugger\uff09\u9644\u52a0\u5230 Flubu \u8fdb\u7a0b\u6765\u8c03\u8bd5\u6784\u5efa\u811a\u672c\u3002 \u7531\u4e8e Flubu \u4f1a\u7a0d\u5fae\u6539\u53d8\u6784\u5efa\u811a\u672c\uff0c\u6240\u4ee5\u4f60\u5fc5\u987b\u5c06 Visual Studio \u7684\u300c\u8981\u6c42\u6e90\u6587\u4ef6\u4e0e\u539f\u59cb\u7248\u672c\u5b8c\u5168\u5339\u914d\u300d\u7684\u9009\u9879\u7981\u7528\u6389\u3002 \u8fd9\u4e2a\u9009\u9879\u7684\u4f4d\u7f6e\u5728\u300c\u5de5\u5177\u300d\u2192\u300c\u9009\u9879\u300d\u2192\u300c\u8c03\u8bd5\u300d\u2192\u300c\u5e38\u89c4\u300d\u2192\u300c\u8981\u6c42\u6e90\u6587\u4ef6\u4e0e\u539f\u59cb\u7248\u672c\u5b8c\u5168\u5339\u914d\u300d\u3002\u5bf9\u4e8e VS Code \u6765\u8bf4\u5219\u4e0d\u80fd\u786e\u5b9a\u3002 \u5efa\u8bae\u5728\u7b2c\u4e00\u4e2a\u65ad\u70b9\uff08break point\uff09\u4e4b\u524d\uff0c\u5728 ITaskContext \u4e0a\u4f7f\u7528 WaitForDebugger \u6269\u5c55\u65b9\u6cd5\uff1a 1 2 3 4 protected override void ConfigureTargets(ITaskContext context) { context.WaitForDebugger(); } \u8fd0\u884c\u6784\u5efa\u811a\u672c\uff0c\u5e76\u5c06\u8c03\u8bd5\u5668\uff08debugger\uff09\u9644\u52a0\u5230 FlubuCore \u8fdb\u7a0b\u3002FlubuCore \u8fdb\u7a0b\u540d\u53d6\u51b3\u4e8e\u4f60\u6240\u4f7f\u7528 FlubuCore Runner\u3002 FlubuCore.Runner - \u4f60\u9700\u8981\u5c06\u8c03\u8bd5\u5668\u9644\u52a0\u5230\u540d\u4e3a flubu.exe \u7684\u8fdb\u7a0b dotnet-flubu Cli \u5de5\u5177 - \u4f60\u9700\u8981\u5c06\u8c03\u8bd5\u5668\u9644\u52a0\u5230\u540d\u4e3a dotnet \u7684\u786e\u5207\u7684\u8fdb\u7a0b\u4e2d FlubuCore.GlobalTool - \u4f60\u9700\u8981\u5c06\u8c03\u8bd5\u5668\u9644\u52a0\u5230\u540d\u4e3a Flubu \u7684\u8fdb\u7a0b\u4e2d","title":"\u6d4b\u8bd5\u4e0e\u8c03\u8bd5"},{"location":"Tests-debugging/#debug-script-through-net-core-console-application","text":"The easiest way to debug your script is that you place your script in a console application and execute it in console application. After that you can debug your script as any other application. How to execute scripts through console application can be found here.","title":"Debug script through .net core console application"},{"location":"Tests-debugging/#_1","text":"Wiki \u6587\u6863\u5373\u5c06\u63a8\u51fa\u3002\u5148\u901a\u8fc7\u7b80\u5355\u7684\u6d4b\u8bd5\u6765\u4e0a\u624b\uff1a https://github.com/dotnetcore/FlubuCore.Examples/blob/master/NetCore_csproj/BuildScript/BuildScriptTests.cs \u5982\u6709\u9700\u8981\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\u8c03\u8bd5\u6784\u5efa\u811a\u672c\u3002 \u4f60\u4e5f\u53ef\u4ee5\u5728\u5176\u5b83 .NET \u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528 flub \u4efb\u52a1\uff0c\u5c31\u50cf\u4e0a\u9762\u7684\u6d4b\u8bd5\u793a\u4f8b\u4e00\u6837\u3002","title":"\u7f16\u5199\u6d4b\u8bd5\u6784\u5efa\u811a\u672c\u4e0e\u901a\u8fc7\u6d4b\u8bd5\u8c03\u8bd5\u6784\u5efa\u811a\u672c"},{"location":"Tests-debugging/#_2","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u8bd5\u5668\uff08debugger\uff09\u9644\u52a0\u5230 Flubu \u8fdb\u7a0b\u6765\u8c03\u8bd5\u6784\u5efa\u811a\u672c\u3002 \u7531\u4e8e Flubu \u4f1a\u7a0d\u5fae\u6539\u53d8\u6784\u5efa\u811a\u672c\uff0c\u6240\u4ee5\u4f60\u5fc5\u987b\u5c06 Visual Studio \u7684\u300c\u8981\u6c42\u6e90\u6587\u4ef6\u4e0e\u539f\u59cb\u7248\u672c\u5b8c\u5168\u5339\u914d\u300d\u7684\u9009\u9879\u7981\u7528\u6389\u3002 \u8fd9\u4e2a\u9009\u9879\u7684\u4f4d\u7f6e\u5728\u300c\u5de5\u5177\u300d\u2192\u300c\u9009\u9879\u300d\u2192\u300c\u8c03\u8bd5\u300d\u2192\u300c\u5e38\u89c4\u300d\u2192\u300c\u8981\u6c42\u6e90\u6587\u4ef6\u4e0e\u539f\u59cb\u7248\u672c\u5b8c\u5168\u5339\u914d\u300d\u3002\u5bf9\u4e8e VS Code \u6765\u8bf4\u5219\u4e0d\u80fd\u786e\u5b9a\u3002 \u5efa\u8bae\u5728\u7b2c\u4e00\u4e2a\u65ad\u70b9\uff08break point\uff09\u4e4b\u524d\uff0c\u5728 ITaskContext \u4e0a\u4f7f\u7528 WaitForDebugger \u6269\u5c55\u65b9\u6cd5\uff1a 1 2 3 4 protected override void ConfigureTargets(ITaskContext context) { context.WaitForDebugger(); } \u8fd0\u884c\u6784\u5efa\u811a\u672c\uff0c\u5e76\u5c06\u8c03\u8bd5\u5668\uff08debugger\uff09\u9644\u52a0\u5230 FlubuCore \u8fdb\u7a0b\u3002FlubuCore \u8fdb\u7a0b\u540d\u53d6\u51b3\u4e8e\u4f60\u6240\u4f7f\u7528 FlubuCore Runner\u3002 FlubuCore.Runner - \u4f60\u9700\u8981\u5c06\u8c03\u8bd5\u5668\u9644\u52a0\u5230\u540d\u4e3a flubu.exe \u7684\u8fdb\u7a0b dotnet-flubu Cli \u5de5\u5177 - \u4f60\u9700\u8981\u5c06\u8c03\u8bd5\u5668\u9644\u52a0\u5230\u540d\u4e3a dotnet \u7684\u786e\u5207\u7684\u8fdb\u7a0b\u4e2d FlubuCore.GlobalTool - \u4f60\u9700\u8981\u5c06\u8c03\u8bd5\u5668\u9644\u52a0\u5230\u540d\u4e3a Flubu \u7684\u8fdb\u7a0b\u4e2d","title":"\u901a\u8fc7\u9644\u52a0\u5230\u8fd0\u884c\u4e2d\u7684\u8fdb\u7a0b\u6765\u8c03\u8bd5\u6784\u5efa\u811a\u672c"},{"location":"build-script-runner-interactive/","text":"\u6321\u5728\u63a7\u5236\u53f0\u4e2d\u6267\u884c FlubuCore \u811a\u672c\u6216\u5176\u4ed6\u672c\u5730\u7a0b\u5e8f\u65f6\uff0c\u5efa\u8bae\u5728 FlubuCore \u4ea4\u4e92\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff0c\u5b83\u5c06\u5e26\u7ed9\u4f60\u4e00\u4e9b\u975e\u5e38\u6709\u610f\u601d\u7684\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u5df2\u5728 \u529f\u80fd\u4e00\u8282 \u4e2d\u5217\u660e\u3002\u53ea\u9700\u8981\u5728\u4f60\u5e38\u7528\u7684\u63a7\u5236\u53f0\u7a0b\u5e8f\u4e2d\u8fd0\u884c flubu -i \u4fbf\u53ef\u8fdb\u5165 FlubuCore \u4ea4\u4e92\u6a21\u5f0f\u3002 \u6f14\u793a \u00b6 \u5728\u6f14\u793a\u4e2d \u6784\u5efa\u811a\u672c \u3002 \u529f\u80fd \u00b6 \u4ea4\u4e92\u6a21\u5f0f\u4e0b\u7684\u529f\u80fd \u4f7f\u7528\u300ctab \u952e\u300d\u6765\u5b8c\u6210 Target \u9009\u9879\u5361 \u4f7f\u7528\u300ctab \u952e\u300d\u6765\u5b8c\u6210 Option \u9009\u9879\u5361 Option's (parameter) value tab completition with tab key for enum types \u5728\u63a7\u5236\u53f0\u5e95\u90e8\u663e\u793a Target \u5e2e\u52a9 \u5728\u63a7\u5236\u53f0\u5e95\u90e8\u663e\u793a Option \u5e2e\u52a9 \u6267\u884c\u5916\u90e8\u547d\u4ee4\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u5728 PowerShell \u4e2d\u8fd0\u884c FlubuCore \u4ea4\u4e92\u6a21\u5f0f\uff0c\u5219\u6240\u6709 PowerShell \u547d\u4ee4\u90fd\u53ef\u4ee5\u5728 FlubuCore \u7684\u4ea4\u4e92\u6a21\u5f0f\u4e2d\u4f7f\u7528\u3002 \u6267\u884c\u5916\u90e8\u7a0b\u5e8f\u3002\u5bf9\u4e8e\u5176\u4e2d\u90e8\u5206\u7a0b\u5e8f\uff0cFlubuCore \u4ea4\u4e92\u6a21\u5f0f\u63d0\u4f9b Tab \u952e\u81ea\u52a8\u8865\u5168\uff08\u6bd4\u5982 dotnet\u3001git \u7b49\uff0c \u67e5\u770b\u5b8c\u6574\u5217\u8868 \uff09 \u4f7f\u7528\u300c\u2191 \u952e\u300d\u548c\u300c\u2193 \u952e\u300d\u6765\u5207\u6362 Target \u9009\u9879\u5361 \u4f7f\u7528\u300c\u2191 \u952e\u300d\u548c\u300c\u2193 \u952e\u300d\u6765\u5207\u6362 Option \u9009\u9879\u5361 Next / previos target or option with tab key \u4f7f\u7528\u300c\u2191 \u952e\u300d\u548c\u300c\u2193 \u952e\u300d\u6765\u5207\u6362\u547d\u4ee4\u7684\u5386\u53f2\u8bb0\u5f55 \u65e0\u9700\u4e3a\u6bcf\u4e2a\u547d\u4ee4\u52a0\u8f7d\u811a\u672c \u91cd\u65b0\u52a0\u8f7d\u5f53\u524d\u811a\u672c\uff0c\u6216\u52a0\u8f7d\u53e6\u4e00\u4e2a\u811a\u672c \u5728\u6587\u4ef6\u5939\u95f4\u5207\u6362 \u5185\u90e8\u547d\u4ee4 \u00b6 cd \u53d8\u66f4\u76ee\u5f55\u3002 dir \u5217\u51fa\u6587\u4ef6\u548c\u76ee\u5f55\u3002 l|load -s={script} \u52a0\u8f7d\u53e6\u4e00\u4e2a FlubuCore \u811a\u672c\u3002 r|reload \u91cd\u65b0\u52a0\u8f7d\u5f53\u524d\u811a\u672c\u3002 e|q|exit|quit \u9000\u51fa FlubuCore \u4ea4\u4e92\u6a21\u5f0f\u3002 \u70ed\u952e \u00b6 FlubuCore \u652f\u6301\u4ee5\u4e0b\u70ed\u952e\uff1a \u300c\u56de\u8f66\u952e\u300d\u6267\u884c\u547d\u4ee4 \u300cTab \u952e\u300d\u63d0\u793a\u7528\u6237\u5b8c\u6210 target/option \u8f93\u5165 \u300c\u2191 \u952e\u300d\u5728\u5386\u53f2\u8bb0\u5f55\u4e2d\u9009\u62e9\u4e0a\u4e00\u6761\u547d\u4ee4 \u300c\u2193 \u952e\u300d\u5728\u5386\u53f2\u8bb0\u5f55\u4e2d\u9009\u62e9\u4e0b\u4e00\u6761\u547d\u4ee4 \u300c\u2190 \u952e\u300d\u5149\u6807\u5de6\u79fb \u300c\u2192 \u952e\u300d\u5149\u6807\u53f3\u79fb \u300cBackspace \u952e\u300d\u5220\u9664\u5149\u6807\u524d\u7684\u4e00\u4e2a\u5b57\u7b26 \u300cDelete \u952e\u300d\u5220\u9664\u5149\u6807\u540e\u7684\u4e00\u4e2a\u5b57\u7b26 \u300cHome \u952e\u300d\u5149\u6807\u8df3\u8f6c\u5230\u7528\u6237\u8f93\u5165\u7684\u5f00\u5934\u5904 \u300cEnd \u952e\u300d\u5149\u6807\u8df3\u8f6c\u5230\u7528\u6237\u8f93\u5165\u7684\u7ed3\u5c3e\u5904 \u901a\u8fc7 Tab \u952e\u8865\u5168\u5b8c\u6210\u7684\u5916\u90e8\u7a0b\u5e8f\u5217\u8868 \u00b6 \u5728 FlubuCore \u4ea4\u4e92\u6a21\u5f0f\u4e2d\u901a\u8fc7 Tab \u952e\u6765\u8865\u5168\u5b8c\u6210 options/switches \u7684\u5916\u90e8\u7a0b\u5e8f\u5217\u8868\u3002\u8ba1\u5212\u5728\u8fd1\u671f\u6dfb\u52a0\u5bf9 docker\u3001octopus\u3001azure\u3001npm \u548c chocolatey \u547d\u4ee4\u7684\u652f\u6301\u3002 dotnet build dotnet test dotnet pack dotnet publish dotnet nuget push dotnet restore dotnet tool install dotnet tool update dotnet tool uniinstall git add git commit git push git checkout git clone git submodule git rm git tag gitversion coverlet sqlcmd.exe","title":"\u6784\u5efa\u811a\u672c\u8fd0\u884c\u5668\u4ea4\u4e92\u6a21\u5f0f"},{"location":"build-script-runner-interactive/#_1","text":"\u5728\u6f14\u793a\u4e2d \u6784\u5efa\u811a\u672c \u3002","title":"\u6f14\u793a"},{"location":"build-script-runner-interactive/#_2","text":"\u4ea4\u4e92\u6a21\u5f0f\u4e0b\u7684\u529f\u80fd \u4f7f\u7528\u300ctab \u952e\u300d\u6765\u5b8c\u6210 Target \u9009\u9879\u5361 \u4f7f\u7528\u300ctab \u952e\u300d\u6765\u5b8c\u6210 Option \u9009\u9879\u5361 Option's (parameter) value tab completition with tab key for enum types \u5728\u63a7\u5236\u53f0\u5e95\u90e8\u663e\u793a Target \u5e2e\u52a9 \u5728\u63a7\u5236\u53f0\u5e95\u90e8\u663e\u793a Option \u5e2e\u52a9 \u6267\u884c\u5916\u90e8\u547d\u4ee4\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u5728 PowerShell \u4e2d\u8fd0\u884c FlubuCore \u4ea4\u4e92\u6a21\u5f0f\uff0c\u5219\u6240\u6709 PowerShell \u547d\u4ee4\u90fd\u53ef\u4ee5\u5728 FlubuCore \u7684\u4ea4\u4e92\u6a21\u5f0f\u4e2d\u4f7f\u7528\u3002 \u6267\u884c\u5916\u90e8\u7a0b\u5e8f\u3002\u5bf9\u4e8e\u5176\u4e2d\u90e8\u5206\u7a0b\u5e8f\uff0cFlubuCore \u4ea4\u4e92\u6a21\u5f0f\u63d0\u4f9b Tab \u952e\u81ea\u52a8\u8865\u5168\uff08\u6bd4\u5982 dotnet\u3001git \u7b49\uff0c \u67e5\u770b\u5b8c\u6574\u5217\u8868 \uff09 \u4f7f\u7528\u300c\u2191 \u952e\u300d\u548c\u300c\u2193 \u952e\u300d\u6765\u5207\u6362 Target \u9009\u9879\u5361 \u4f7f\u7528\u300c\u2191 \u952e\u300d\u548c\u300c\u2193 \u952e\u300d\u6765\u5207\u6362 Option \u9009\u9879\u5361 Next / previos target or option with tab key \u4f7f\u7528\u300c\u2191 \u952e\u300d\u548c\u300c\u2193 \u952e\u300d\u6765\u5207\u6362\u547d\u4ee4\u7684\u5386\u53f2\u8bb0\u5f55 \u65e0\u9700\u4e3a\u6bcf\u4e2a\u547d\u4ee4\u52a0\u8f7d\u811a\u672c \u91cd\u65b0\u52a0\u8f7d\u5f53\u524d\u811a\u672c\uff0c\u6216\u52a0\u8f7d\u53e6\u4e00\u4e2a\u811a\u672c \u5728\u6587\u4ef6\u5939\u95f4\u5207\u6362","title":"\u529f\u80fd"},{"location":"build-script-runner-interactive/#_3","text":"cd \u53d8\u66f4\u76ee\u5f55\u3002 dir \u5217\u51fa\u6587\u4ef6\u548c\u76ee\u5f55\u3002 l|load -s={script} \u52a0\u8f7d\u53e6\u4e00\u4e2a FlubuCore \u811a\u672c\u3002 r|reload \u91cd\u65b0\u52a0\u8f7d\u5f53\u524d\u811a\u672c\u3002 e|q|exit|quit \u9000\u51fa FlubuCore \u4ea4\u4e92\u6a21\u5f0f\u3002","title":"\u5185\u90e8\u547d\u4ee4"},{"location":"build-script-runner-interactive/#_4","text":"FlubuCore \u652f\u6301\u4ee5\u4e0b\u70ed\u952e\uff1a \u300c\u56de\u8f66\u952e\u300d\u6267\u884c\u547d\u4ee4 \u300cTab \u952e\u300d\u63d0\u793a\u7528\u6237\u5b8c\u6210 target/option \u8f93\u5165 \u300c\u2191 \u952e\u300d\u5728\u5386\u53f2\u8bb0\u5f55\u4e2d\u9009\u62e9\u4e0a\u4e00\u6761\u547d\u4ee4 \u300c\u2193 \u952e\u300d\u5728\u5386\u53f2\u8bb0\u5f55\u4e2d\u9009\u62e9\u4e0b\u4e00\u6761\u547d\u4ee4 \u300c\u2190 \u952e\u300d\u5149\u6807\u5de6\u79fb \u300c\u2192 \u952e\u300d\u5149\u6807\u53f3\u79fb \u300cBackspace \u952e\u300d\u5220\u9664\u5149\u6807\u524d\u7684\u4e00\u4e2a\u5b57\u7b26 \u300cDelete \u952e\u300d\u5220\u9664\u5149\u6807\u540e\u7684\u4e00\u4e2a\u5b57\u7b26 \u300cHome \u952e\u300d\u5149\u6807\u8df3\u8f6c\u5230\u7528\u6237\u8f93\u5165\u7684\u5f00\u5934\u5904 \u300cEnd \u952e\u300d\u5149\u6807\u8df3\u8f6c\u5230\u7528\u6237\u8f93\u5165\u7684\u7ed3\u5c3e\u5904","title":"\u70ed\u952e"},{"location":"build-script-runner-interactive/#tab","text":"\u5728 FlubuCore \u4ea4\u4e92\u6a21\u5f0f\u4e2d\u901a\u8fc7 Tab \u952e\u6765\u8865\u5168\u5b8c\u6210 options/switches \u7684\u5916\u90e8\u7a0b\u5e8f\u5217\u8868\u3002\u8ba1\u5212\u5728\u8fd1\u671f\u6dfb\u52a0\u5bf9 docker\u3001octopus\u3001azure\u3001npm \u548c chocolatey \u547d\u4ee4\u7684\u652f\u6301\u3002 dotnet build dotnet test dotnet pack dotnet publish dotnet nuget push dotnet restore dotnet tool install dotnet tool update dotnet tool uniinstall git add git commit git push git checkout git clone git submodule git rm git tag gitversion coverlet sqlcmd.exe","title":"\u901a\u8fc7 Tab \u952e\u8865\u5168\u5b8c\u6210\u7684\u5916\u90e8\u7a0b\u5e8f\u5217\u8868"},{"location":"build-script-runner/","text":"\u5728 .NET \u4e2d\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f flubu.exe \u8fd0\u884c flubu \u6784\u5efa\u811a\u672c\u3002\u53ef\u4ee5\u901a\u8fc7 nuget \u6dfb\u52a0 Flubu.Runner \u4ee5\u4fbf\u83b7\u53d6\u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\u3002 \u5728 .NET Core \u4e2d\u53ef\u4ee5\u7528 dotnet \u547d\u4ee4\u6216\u5168\u5c40\u5de5\u5177\u6765\u8fd0\u884c flubu \u6784\u5efa\u811a\u672c\u3002\u901a\u8fc7 nuget \u6dfb\u52a0 FlubuCore\uff0c\u5c06 dotnet-flubu \u4f5c\u4e3a dotnet cli \u5de5\u5177\u5f15\u5165\u9879\u76ee\u3002\u81f3\u4e8e\u5982\u4f55\u5c06\u5176\u6dfb\u52a0\u4e3a dotnet cli \u5de5\u5177\u8bf7\u79fb\u6b65 \u5165\u95e8 \u4e00\u8282\u3002 \u5982\u4f55\u4f7f\u7528 \u00b6 .NET core \u7528\u6cd5\uff1a dotnet flubu {TargetToExecute} {Flubu options} {build script arguments} .NET core \u5168\u5c40\u5de5\u5177\u7684\u7528\u6cd5\uff1a flubu {TargetToExecute} {Flubu options} {build script arguments} .NET \u7528\u6cd5\uff1aflubu.exe {TargetToExecute} {Flubu options} {build script arguments} \u591a\u76ee\u6807\u6267\u884c \u00b6 .NET core \u7528\u6cd5\uff1adotnet flubu {TargetToExecute} {TargetToExecute2} {TargetToExecute3...} {Options} .NET \u7528\u6cd5\uff1aflubu.exe {TargetToExecute} {TargetToExecute2} {TargetToExecute3...} {Options} Target \u53ef\u4ee5\u548c\u6dfb\u52a0\u6709 -parallel \u9009\u9879\u7684\u4efb\u52a1\u4e00\u540c\u6267\u884c\u3002 Flubu \u9009\u9879 \u00b6 \u5e2e\u52a9 \u00b6 \u5217\u51fa\u6240\u6709\u53ef\u7528\u76ee\u6807\uff1a flubu help dotnet flubu help \u5bf9\u7279\u5b9a\u76ee\u6807\u7684\u5e2e\u52a9\uff1a flubu {TargetName} help dotnet flubu {TargetName} help \u8fd9\u6761\u547d\u4ee4\u5c06\u5217\u51fa\u6240\u6709\u63cf\u8ff0\u6709\u6267\u884c\u76ee\u6807\u7684\u4efb\u52a1\uff0c\u4ee5\u53ca\u54ea\u4e9b\u53c2\u6570\u53ef\u4ee5\u4f20\u9012\u7ed9\u76ee\u6807\uff08target\uff09\u4e2d\u7684\u7279\u5b9a\u4efb\u52a1\u3002 \u5e94\u89c4\u8303 Flubu \u7684\u811a\u672c\u8fd0\u884c\u3002 \u00b6 \u6700\u7b80\u5355\u7684\u529e\u6cd5\u5c31\u662f\u628a\u6784\u5efa\u811a\u672c\u653e\u5728\u9ed8\u8ba4\u4f4d\u7f6e\uff08\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230\u9ed8\u8ba4\u4f4d\u7f6e\u7684\u5217\u8868\uff09\u4e4b\u4e00\u3002\u5982\u679c\u5b83\u4f4d\u4e8e\u9ed8\u8ba4\u4f4d\u7f6e\uff0c\u90a3\u4e48 FlubuCore \u5c06\u81ea\u52a8\u6267\u884c\u811a\u672c flubu {TargetName} \u3002 \u7b2c\u4e8c\u4e2a\u9009\u9879\u662f\u4f7f\u7528 -s \u6765\u6307\u5b9a\u811a\u672c\u4f4d\u7f6e flubu {TargetName} -s={pathToScriptFile} \u7b2c\u4e09\u4e2a\u9009\u62e9\u662f\u8fd0\u884c flubu setup \u5e76\u4ee5\u4ea4\u4e92\u6a21\u5f0f\uff08interactive mode\uff09\u6307\u5b9a\u811a\u672c\u548c csproj \u6587\u4ef6\uff08\u53ef\u9009\uff09\u7684\u4f4d\u7f6e\u3002Flubu \u4f1a\u5c06\u811a\u672c\u548c csproj \u6587\u4ef6\u7684\u4f4d\u7f6e\u4fdd\u5b58\u5728 .flubu \u6587\u4ef6\u4e2d\u3002\u5982\u679c .flubu \u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u90a3\u4e48 FlubuCore \u5c06\u4ece\u8be5\u6587\u4ef6\u4e2d\u8bfb\u53d6\u811a\u672c\u548c csproj \u6587\u4ef6\u7684\u4f4d\u7f6e\u3002\u628a\u5b58\u50a8\u4f4d\u7f6e\u4fdd\u5b58\u5728 .flubu \u6587\u4ef6\u7684\u53e6\u4e00\u4e2a\u597d\u5904\u662f\u4e0d\u9700\u8981\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u811a\u672c\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5373\u4f7f\u4f60\u7684\u9879\u76ee\u4f4d\u4e8e \"c:_git\\myproject\" \u4f60\u4e5f\u53ef\u4ee5\u5728\u8be5\u76ee\u5f55\u4e0b\u7684\u4efb\u610f\u4e00\u4e2a\u5b50\u76ee\u5f55\u4e2d\u6267\u884c\u811a\u672c\u3002 .flubu \u6587\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e\u5728\u6784\u5efa\u8fc7\u7a0b\uff08build process\uff09\u4e2d\u4f1a\u88ab\u89c6\u4f5c\u300c\u5de5\u4f5c\u76ee\u5f55\uff08work directory\uff09\u300d,\u300c\u5de5\u4f5c\u76ee\u5f55\u300d\u4f1a\u4f7f\u7528\u57fa\u4e8e\u6784\u5efa\u811a\u672c\u7684\u76f8\u5bf9\u8def\u5f84\u3002 \u9ed8\u8ba4\u6784\u5efa\u811a\u672c\u7684\u4f4d\u7f6e* \u00b6 \"Build.cs\" \"BuildScript.cs\" \"DeployScript.cs\" \"DeploymentScript.cs\" \"_Build/Build.cs\" \"_Build/BuildScript.cs\" \"Build/Build.cs\" \"Build/BuildScript.cs\" \"_BuildScript/BuildScript.cs\" \"_BuildScripts/BuildScript.cs\" \"BuildScript/BuildScript.cs\" \"buildscript/deployscript.cs\" \"buildscripts/buildscript.cs\" \"buildscripts/deployscript.cs\" \"BuildScript/DeploymentScript.cs\" \"BuildScripts/DeploymentScript.cs\"","title":"\u6784\u5efa\u811a\u672c\u8fd0\u884c\u5668"},{"location":"build-script-runner/#_1","text":".NET core \u7528\u6cd5\uff1a dotnet flubu {TargetToExecute} {Flubu options} {build script arguments} .NET core \u5168\u5c40\u5de5\u5177\u7684\u7528\u6cd5\uff1a flubu {TargetToExecute} {Flubu options} {build script arguments} .NET \u7528\u6cd5\uff1aflubu.exe {TargetToExecute} {Flubu options} {build script arguments}","title":"\u5982\u4f55\u4f7f\u7528"},{"location":"build-script-runner/#_2","text":".NET core \u7528\u6cd5\uff1adotnet flubu {TargetToExecute} {TargetToExecute2} {TargetToExecute3...} {Options} .NET \u7528\u6cd5\uff1aflubu.exe {TargetToExecute} {TargetToExecute2} {TargetToExecute3...} {Options} Target \u53ef\u4ee5\u548c\u6dfb\u52a0\u6709 -parallel \u9009\u9879\u7684\u4efb\u52a1\u4e00\u540c\u6267\u884c\u3002","title":"\u591a\u76ee\u6807\u6267\u884c"},{"location":"build-script-runner/#flubu","text":"","title":"Flubu \u9009\u9879"},{"location":"build-script-runner/#_3","text":"\u5217\u51fa\u6240\u6709\u53ef\u7528\u76ee\u6807\uff1a flubu help dotnet flubu help \u5bf9\u7279\u5b9a\u76ee\u6807\u7684\u5e2e\u52a9\uff1a flubu {TargetName} help dotnet flubu {TargetName} help \u8fd9\u6761\u547d\u4ee4\u5c06\u5217\u51fa\u6240\u6709\u63cf\u8ff0\u6709\u6267\u884c\u76ee\u6807\u7684\u4efb\u52a1\uff0c\u4ee5\u53ca\u54ea\u4e9b\u53c2\u6570\u53ef\u4ee5\u4f20\u9012\u7ed9\u76ee\u6807\uff08target\uff09\u4e2d\u7684\u7279\u5b9a\u4efb\u52a1\u3002","title":"\u5e2e\u52a9"},{"location":"build-script-runner/#flubu_1","text":"\u6700\u7b80\u5355\u7684\u529e\u6cd5\u5c31\u662f\u628a\u6784\u5efa\u811a\u672c\u653e\u5728\u9ed8\u8ba4\u4f4d\u7f6e\uff08\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230\u9ed8\u8ba4\u4f4d\u7f6e\u7684\u5217\u8868\uff09\u4e4b\u4e00\u3002\u5982\u679c\u5b83\u4f4d\u4e8e\u9ed8\u8ba4\u4f4d\u7f6e\uff0c\u90a3\u4e48 FlubuCore \u5c06\u81ea\u52a8\u6267\u884c\u811a\u672c flubu {TargetName} \u3002 \u7b2c\u4e8c\u4e2a\u9009\u9879\u662f\u4f7f\u7528 -s \u6765\u6307\u5b9a\u811a\u672c\u4f4d\u7f6e flubu {TargetName} -s={pathToScriptFile} \u7b2c\u4e09\u4e2a\u9009\u62e9\u662f\u8fd0\u884c flubu setup \u5e76\u4ee5\u4ea4\u4e92\u6a21\u5f0f\uff08interactive mode\uff09\u6307\u5b9a\u811a\u672c\u548c csproj \u6587\u4ef6\uff08\u53ef\u9009\uff09\u7684\u4f4d\u7f6e\u3002Flubu \u4f1a\u5c06\u811a\u672c\u548c csproj \u6587\u4ef6\u7684\u4f4d\u7f6e\u4fdd\u5b58\u5728 .flubu \u6587\u4ef6\u4e2d\u3002\u5982\u679c .flubu \u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u90a3\u4e48 FlubuCore \u5c06\u4ece\u8be5\u6587\u4ef6\u4e2d\u8bfb\u53d6\u811a\u672c\u548c csproj \u6587\u4ef6\u7684\u4f4d\u7f6e\u3002\u628a\u5b58\u50a8\u4f4d\u7f6e\u4fdd\u5b58\u5728 .flubu \u6587\u4ef6\u7684\u53e6\u4e00\u4e2a\u597d\u5904\u662f\u4e0d\u9700\u8981\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u811a\u672c\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5373\u4f7f\u4f60\u7684\u9879\u76ee\u4f4d\u4e8e \"c:_git\\myproject\" \u4f60\u4e5f\u53ef\u4ee5\u5728\u8be5\u76ee\u5f55\u4e0b\u7684\u4efb\u610f\u4e00\u4e2a\u5b50\u76ee\u5f55\u4e2d\u6267\u884c\u811a\u672c\u3002 .flubu \u6587\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e\u5728\u6784\u5efa\u8fc7\u7a0b\uff08build process\uff09\u4e2d\u4f1a\u88ab\u89c6\u4f5c\u300c\u5de5\u4f5c\u76ee\u5f55\uff08work directory\uff09\u300d,\u300c\u5de5\u4f5c\u76ee\u5f55\u300d\u4f1a\u4f7f\u7528\u57fa\u4e8e\u6784\u5efa\u811a\u672c\u7684\u76f8\u5bf9\u8def\u5f84\u3002","title":"\u5e94\u89c4\u8303 Flubu \u7684\u811a\u672c\u8fd0\u884c\u3002"},{"location":"build-script-runner/#_4","text":"\"Build.cs\" \"BuildScript.cs\" \"DeployScript.cs\" \"DeploymentScript.cs\" \"_Build/Build.cs\" \"_Build/BuildScript.cs\" \"Build/Build.cs\" \"Build/BuildScript.cs\" \"_BuildScript/BuildScript.cs\" \"_BuildScripts/BuildScript.cs\" \"BuildScript/BuildScript.cs\" \"buildscript/deployscript.cs\" \"buildscripts/buildscript.cs\" \"buildscripts/deployscript.cs\" \"BuildScript/DeploymentScript.cs\" \"BuildScripts/DeploymentScript.cs\"","title":"\u9ed8\u8ba4\u6784\u5efa\u811a\u672c\u7684\u4f4d\u7f6e*"},{"location":"buildscript-fundamentals/","text":"\u6784\u5efa\u811a\u672c \u00b6 \u6bcf\u4e2a\u6784\u5efa\u811a\u672c\uff08build script\uff09\u90fd\u7ee7\u627f\u81ea DefaulBuildScript \u7c7b\uff0c\u56e0\u6b64\u5fc5\u987b\u5b9e\u73b0 DefaulBuildScript \u4e2d\u7684\u4e24\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff08abstract method\uff09\u3002 ConfigureTargets\uff1a\u7528\u4e8e\u521b\u5efa\u5c06\u6267\u884c\u7279\u5b9a\u5de5\u4f5c\u7684\u65b0\u76ee\u6807\uff08targets\uff09\u3002 \u7a7a\u6784\u5efa\u811a\u672c\u793a\u4f8b\uff1a public class BuildScript : DefaultBuildScript { protected override void ConfigureTargets ( ITaskContext session ) { } } \u76ee\u6807 \u00b6 \u76ee\u6807\uff08target\uff09\u7528\u4e8e\u6309\u7279\u5b9a\u987a\u5e8f\u6267\u884c\u7279\u5b9a\u5de5\u4f5c\u3002\u76ee\u6807\u53ef\u6267\u884c\u8bf8\u5982 FlubuCore \u5185\u7f6e\u4efb\u52a1\uff08\u5982\u7f16\u8bd1\u89e3\u51b3\u65b9\u6848\u7684\u4efb\u52a1\uff09\u548c\u4e00\u4e9b\u81ea\u5b9a\u4e49 C# \u4ee3\u7801\u3002\u76ee\u6807\u4e5f\u53ef\u4ee5\u4f9d\u8d56\u4e8e\u5176\u4ed6\u76ee\u6807\uff08other targets\uff09\u3002 \u521b\u5efa\u65b0\u76ee\u6807 \u00b6 \u4e0b\u4f8b\u5c06\u521b\u5efa\u5728\u4efb\u52a1\u4e2d\u6267\u884c\u4e00\u6b21\u6784\u5efa\u7684\u65b0\u76ee\u6807\u3002 protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Compile\" ) . SetDescription ( \"Compiles the solution\" ) . AddTask ( x => x . CompileSolutionTask ()); } \u76ee\u6807\u4e5f\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u4e0a\u7684\u7279\u6027\u6765\u8fdb\u884c\u5b9a\u4e49\u3002 [Target(\"targetName\", \"a\", \"b\")] [Target(\"targetName2\", \"c\", \"d\")] [Target(\"targetName3\", \"e\", \"f\")] public void Example ( ITarget target , string source , string destination ) { target . AddTask ( x => x . CopyFileTask ( source , destination , true )); } \u4f60\u8fd8\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236\u53f0\u53c2\u6570\uff08console arguments\uff09\u6216 FlubuCore \u914d\u7f6e\u6587\u4ef6\u5411\u53c2\u6570\uff08parameter\uff09\u4f20\u9012\u503c\u3002 Flubu targetName2 -destination=SomeOtherDestination \u4efb\u52a1 \u00b6 \u4efb\u52a1\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a\uff08\u4e00\u822c\uff09\u4efb\u52a1\uff08task\uff09\u548c Core \u4efb\u52a1\u3002\uff08\u4e00\u822c\uff09\u4efb\u52a1\u53ef\u4ee5\u5728 .NET \u548c .NET Core \u9879\u76ee\u4e2d\u6267\u884c\uff0c\u800c Core \u4efb\u52a1\u53ea\u80fd\u5728 .NET Core \u9879\u76ee\u4e2d\u6267\u884c\u3002 \u4e0b\u4f8b\u4ee3\u7801\uff0c\u5728\u76ee\u6807\u4e2d\u6267\u884c\u4e86\u4e24\u4e2a Core \u4efb\u52a1\uff0c\u6267\u884c\u987a\u5e8f\u4e0e\u4ee3\u7801\u4e2d\u6307\u5b9a\u7684\u987a\u5e8f\u4e00\u81f4\u3002 context . CreateTarget ( \"Build\" ) . AddCoreTask ( x => x . Restore ()) . AddCoreTask ( x => x . Build ()); \u6240\u6709\u4efb\u52a1\u90fd\u6709\u4ee5\u4e0b\u65b9\u6cd5\uff1a .OnError((c, ex) => { c.LogInfo(\"Example\");})) - onError \u53ef\u5728\u6307\u5b9a\u4efb\u52a1\u53d1\u751f\u9519\u8bef\u65f6\u6267\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\u64cd\u4f5c\uff1b .Retry(5, 1000) - \u91cd\u8bd5\u673a\u5236\uff08Retry Mechanism\uff09\u3002\u53ef\u5728\u8be5\u673a\u5236\u91cd\u8bd5\u4efb\u52a1\u671f\u95f4\u5e94\u7528\u7279\u5b9a\u6761\u4ef6\uff08specific condition\uff09\uff1b .Finally(c => { c.LogInfo(\"Example\");})) - Finally \u5c31\u50cf try-cache-finally \u91cc\u7684 finally \u5757\uff1b .DoNotFailOnError() - \u811a\u672c\u4e0d\u4f1a\u56e0\u53d1\u751f\u5f02\u5e38\u800c\u5931\u8d25\uff0c\u4f60\u53ef\u4e3a\u4efb\u52a1\u4e0d\u5931\u8d25\u65f6\u5e94\u7528\u7279\u5b9a\u6761\u4ef6\uff1b - .NoLog() - \u4efb\u52a1\u65e5\u5fd7\u5c06\u4e0d\u4f1a\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff1b \u00b6 .SetDescription() - \u8986\u76d6\uff08overrides\uff09\u4efb\u52a1\u7684\u9ed8\u8ba4\u63cf\u8ff0\uff1b .ForMember() - \u5c06\u63a7\u5236\u53f0\u53c2\u6570\u4f20\u9012\u7ed9\u65b9\u6cd5\u6216\u5c5e\u6027\uff0c\u76f8\u5173\u8be6\u7ec6\u4fe1\u606f\u8bf7\u67e5\u9605 \u5411\u4efb\u52a1\u4f20\u9012\u63a7\u5236\u53f0\u53c2\u6570\u3001JSON \u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e\uff0c\u4ee5\u53ca\u57fa\u4e8e ForMember \u7684\u73af\u5883\u53d8\u91cf ; \u5728\u5355\u4e2a\u4efb\u52a1\u4e0a\u4f7f\u7528 When \u4ece\u53e5\uff08when cluase\uff09\uff0c\u4f7f\u4efb\u52a1\u6709\u6761\u4ef6\u5730\u6267\u884c\uff08\u53c2\u9605\u4e0b\u9762\u7684\u4efb\u52a1\u7ec4\uff09\uff1a context . CreateTarget ( \"Example\" ) . AddTask ( x => x . CompileSolutionTask ()) . AddTask ( x => x . PublishNuGetPackageTask ( \"packageId\" , \"pathToNuspec\" )) . When ( c => c . BuildSystems (). Jenkins (). IsRunningOnJenkins ); \u5f53\u4e14\u4ec5\u5f53\u6ee1\u8db3\u6307\u5b9a\u6761\u4ef6\u65f6\u8bbe\u7f6e\u4efb\u52a1\u53c2\u6570\uff1a var compile = context . CreateTarget ( \"compile\" ) . SetDescription ( \"Compiles the VS solution\" ) . AddCoreTask ( x => x . Build (). Configuration ( \"Release\" ) . When ( () => { return context . BuildSystems (). IsLocalBuild ; }, task => { task . Configuration ( \"Debug\" ); })); .Interactive() - \u4ea4\u4e92\u5730\u5c06\u53c2\u6570\u4ece\u63a7\u5236\u53f0\u4f20\u9012\u7ed9\u4efb\u52a1\u7684\u65b9\u6cd5\u6216\u53c2\u6570\u3002 \u4efb\u52a1\u7279\u6027\uff08\u7248\u672c\u63a7\u5236\uff09 \u00b6 \u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u4e0a\u7684\u7279\u5b9a\uff08Attribute\uff09\u6765\u6267\u884c\u67d0\u4e9b\u4efb\u52a1\u3002 Flubu \u5c06\u4f1a\u628a\u4efb\u52a1\u7684\u8fd4\u56de\u503c\u6ce8\u5165\u5230\u5c5e\u6027\u4e2d\u3002\u8fd9\u5bf9\u6240\u6709\u7248\u672c\u63a7\u5236\u4efb\u52a1\u3001\u5c24\u5176\u662f\u6709\u8fd4\u56de\u503c\u7684\u4efb\u52a1\u7279\u522b\u6709\u7528\u3002\u6709\u5173\u6240\u6709\u53ef\u7528\u7684\u7279\u6027\uff0c\u8bf7\u53c2\u9605 FlubuCore.Tasks.Attributes \u547d\u540d\u7a7a\u95f4\u3002 [FetchBuildVersionFromFile] public BuildVersion BuildVersion { get ; } [GitVersion] public GitVersion GitVersion { get ; } \u4f60\u53ef\u4ee5\u901a\u8fc7 ConfigureTarget \u83b7\u53d6\u7248\u672c\u4fe1\u606f\uff0c\u800c\u8fd9\u4e9b\u5728\u7248\u672c\u63a7\u5236\u4efb\u52a1\u5df2\u6267\u884c\u540e\u662f\u4e0d\u53ef\u83b7\u5f97\u7684\uff08\u6bd4\u5982\u76ee\u6807\u4f9d\u8d56\u9879\u7b49\uff09\u3002 protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Build\" ) . AddCoreTask ( x => x . Build (). Version ( BuildVersion . Version . ToString ())); } \u81ea\u5b9a\u4e49 C# \u4ee3\u7801/\u4efb\u52a1 \u00b6 \u4e0b\u4f8b\u5c06\u6267\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\u4ee3\u7801\u3002\u4f60\u53ef\u4ee5\u5728\u81ea\u5b9a\u4e49\u4ee3\u7801\u4e2d\u4f7f\u7528 FlubuCore \u7684\u5185\u7f6e\u4efb\u52a1\uff1a protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Example\" ) . Do ( CustomCodeExample ); } private static void CustomCodeExample ( ITaskContext context ) { //// You can put any c# code here and use any .net libraries. Console . WriteLine ( \"Dummy custom code\" ); context . Tasks (). NUnitTaskForNunitV3 ( \"project name\" ). Execute ( context ); } \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e26\u53c2\u65b9\u6cd5\uff1a protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Example\" ) . Do ( CustomCodeExample , \"some value\" , 1 ); } private static void CustomCodeExample ( ITaskContext context , string arg1 , int arg2 ) { Console . WriteLine ( \"Dummy custom code\" ); context . Tasks (). NUnitTaskForNunitV3 ( \"project name\" ). Execute ( context ); } \u76ee\u6807\u4f9d\u8d56 \u00b6 \u76ee\u6807\u53ef\u4f9d\u8d56\u4e8e\u5176\u4ed6\u76ee\u6807\u3002\u6240\u6709\u4f9d\u8d56\u9879\u5c06\u6309\u6307\u5b9a\u987a\u5e8f\u5728\u76ee\u6807\u6267\u884c\u524d\u6267\u884c\u3002 \u5f53 targetC \u6267\u884c\u65f6\uff0c\u76ee\u6807\u7684\u6267\u884c\u987a\u5e8f\u5c06\u662f\uff1aTargetB\u3001TargetA \u548c TargetC\u3002 var targetA = context . CreateTarget ( \"TargetA\" ); var targetB = context . CreateTarget ( \"TargetB\" ); var targetC = context . CreateTarget ( \"TargetC\" ). DependsOn ( targetB , targetA ); \u4e5f\u53ef\u4ee5\u53cd\u8f6c\u4f9d\u8d56\u5173\u7cfb\uff1a var targetC = context . CreateTarget ( \"TargetC\" ). DependenceOf ( targetA ); \u5728\u76ee\u6807\u4e2d\u6dfb\u52a0\u76ee\u6807 \u00b6 \u901a\u8fc7 AddTarget\uff0c\u4e00\u4e2a\u76ee\u6807\u53ef\u5728\u53e6\u4e00\u4e2a\u76ee\u6807\u5185\u90e8\u6267\u884c\u3002\u76ee\u6807\u5c06\u6309\u6dfb\u52a0\u987a\u5e8f\u6267\u884c\u3002 \u793a\u4f8b\uff1a protected override void ConfigureTargets ( ITaskContext context ) { var exampleB = context . CreateTarget ( \"TargetB\" ) . Do ( Something ); context . CreateTarget ( \"TargetA\" ) . AddCoreTask ( x => x . Build ()) . AddTarget ( exampleB ) . Do ( JustAnExample ); } public void JustAnExample ( ITaskContext context ) { ... } TargetA \u6267\u884c\u987a\u5e8f\u4e3a\uff1a \u6784\u5efa\u4efb\u52a1\uff1b TargetB \u76ee\u6807\uff1b JustAnExample \u65b9\u6cd5\u3002 \u5728\u4e0d\u540c\u76ee\u6807\u4e2d\u590d\u7528\u4efb\u52a1\u96c6 \u00b6 \u4e0b\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5728\u4e0d\u540c\u76ee\u6807\u4e2d\u590d\u7528\u4efb\u52a1\u96c6\uff08reuse set of tasks\uff09\uff1a protected override void ConfigureTargets ( ITaskContext session ) { session . CreateTarget ( \"deploy.local\" ). AddTasks ( Deploy , \"c:\\\\ExamplaApp\" ). SetAsDefault (); session . CreateTarget ( \"deploy.test\" ). AddTasks ( Deploy , \"d:\\\\ExamplaApp\" ); session . CreateTarget ( \"deploy.prod\" ). AddTasks ( Deploy , \"e:\\\\ExamplaApp\" ); } private void Deploy ( ITarget target , string deployPath ) { target . AddTask ( x => x . IisTasks (). CreateAppPoolTask ( \"Example app pool\" ). Mode ( CreateApplicationPoolMode . DoNothingIfExists )) . AddTask ( x => x . IisTasks (). ControlAppPoolTask ( \"Example app pool\" , ControlApplicationPoolAction . Stop ). DoNotFailOnError ()) . Do ( UnzipPackage ) . AddTask ( x => x . CopyDirectoryStructureTask ( @\"Packages\\ExampleApp\" , @\"C:\\ExampleApp\" , true ). Retry ( 20 , 5000 )) . Do ( CreateWebSite ) } \u5728 foreach \u5faa\u73af\u4e2d\u4e3a\u76ee\u6807\u6dfb\u52a0\u4efb\u52a1 \u00b6 \u4e0b\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5728 foreach \u5faa\u73af\u4e2d\u4e3a\u76ee\u6807\u6dfb\u52a0\u591a\u4e2a\u4efb\u52a1\uff1a protected override void ConfigureTargets ( ITaskContext context ) { var solution = context . GetVsSolution (); context . CreateTarget ( \"Pack\" ) . ForEach ( solution . Projects , ( item , target ) => { target . AddCoreTask ( x => x . Pack (). Project ( item . ProjectName )) . Do ( JustAnExample , item ); }); } private void JustAnExample ( ITaskContext context , VSProjectInfo vsProjectInfo ) { //// Do something. } \u4f8b\u4e2d\uff0c\u793a\u4f8b\u7a0b\u5e8f\u5c06\u4e3a\u6bcf\u4e2a\u9879\u76ee\u6267\u884c Pack \u4efb\u52a1\u3002 \u5206\u7ec4\u4efb\u52a1\uff0c\u5e76\u5e94\u7528 When\u3001OnError \u548c Finally \u00b6 \u5728\u4efb\u52a1\u7ec4\u4e0a\u4f7f\u7528 When \u5b50\u53e5\u6709\u6761\u4ef6\u5730\u6267\u884c\u4efb\u52a1\u3002 protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Example\" ) . AddCoreTask ( x => x . Build ()) . Group ( target => { target . AddCoreTask ( x => x . Pack ()); target . AddCoreTask ( x => x . NugetPush ( \"pathToPackage\" )); }, when : c => ! c . BuildSystems (). Jenkins (). IsRunningOnJenkins ); } \u5728\u4efb\u52a1\u7ec4\u4e2d\u4f7f\u7528 Finally\uff1aonFinally \u7684\u884c\u4e3a\u4e0e try-catch-finally \u4e2d\u7684 Finally \u76f8\u540c\u3002 context . CreateTarget ( \"Example\" ) . AddCoreTask ( x => x . Build ()) . Group ( target => { target . AddCoreTask ( x => x . Pack ()); target . AddCoreTask ( x => x . NugetPush ( \"pathToPackage\" )); }, onFinally : c => { c . Tasks (). DeleteFilesTask ( \"pathToNupkg\" , \"*.*\" , true ). Execute ( c ); }); \u5728\u4efb\u52a1\u7ec4\u4e2d\u4f7f\u7528 OnError\uff1a\u53ef\u4ee5\u5728\u7ec4\u4e2d\u4efb\u610f\u4e00\u4e2a\u4efb\u52a1\u53d1\u751f\u9519\u8bef\u65f6\u6267\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\u64cd\u4f5c\u3002 context . CreateTarget ( \"Example\" ) . AddCoreTask ( x => x . Build ()) . Group ( target => { target . AddCoreTask ( x => x . Pack ()); target . AddCoreTask ( x => x . NugetPush ( \"pathToPackage\" )); }, onError : ( c , error ) => { //// some custom action when error occures in any of the task in group. }); \u4efb\u52a1\u3001\u81ea\u5b9a\u4e49\u4ee3\u7801\u4e0e\u4f9d\u8d56\u9879\u7684\u5f02\u6b65\u6267\u884c\u4e0e\u5e76\u884c\u6267\u884c \u00b6 \u53ef\u901a\u8fc7 AddTaskAsync \u6216 AddCoreTaskAsync \u65b9\u6cd5\u5f02\u6b65\u6267\u884c\u4efb\u52a1\u3002 \u53ef\u4f7f\u7528 DoAsync \u65b9\u6cd5\u5f02\u6b65\u6267\u884c\u81ea\u5b9a\u4e49\u4ee3\u7801\u3002 \u53ef\u901a\u8fc7 DependsOnAsync \u65b9\u6cd5\u5f02\u6b65\u6267\u884c\u4f9d\u8d56\u9879\u3002 \u5728\u4e0b\u4f8b\u76ee\u6807\u4e2d\u5e76\u884c\u6267\u884c\u4e09\u4e2a\u4efb\u52a1\u3002 session . CreateTarget ( \"run.tests\" ) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName1\" )) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName1\" )) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName3\" )); \u5f02\u6b65\u65b9\u6cd5\u548c\u540c\u6b65\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\u3002 session . CreateTarget ( \"async.example\" ) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName1\" )) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName1\" )) . Do ( SomeCustomMethod ) . DoAsync ( SomeCustomAsyncMethod2 ) . DoAsync ( SomeCustomAsyncMethod3 ); \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u5c06\u9996\u5148\u5f02\u6b65\u6267\u884c\u4e24\u4e2a nunit \u4efb\u52a1\uff0c\u5e76\u7b49\u5f85\u4e24\u4e2a\u4efb\u52a1\u5b8c\u6210\uff1b\u968f\u540e\u5c06\u540c\u6b65\u6267\u884c SOmeCustomMethod\uff0c\u6267\u884c\u5b8c\u540e\u518d\u5e76\u884c\u6267\u884c SomeCustomAsyncMethod2 \u548c SomeCustomAsyncMethod3\u3002 \u5728\u5f02\u6b65\u6267\u884c\u7684\u4efb\u52a1\u548c\u76ee\u6807\u4e2d\u987a\u5e8f\u6253\u65e5\u5fd7 \u00b6 \u901a\u5e38\u6765\u8bb2\uff0c\u5728\u5f02\u6b65\u6216\u5e76\u884c\u6267\u884c\u591a\u4e2a\u4efb\u52a1\u65f6\uff0c\u65e5\u5fd7\u662f\u4e0d\u53ef\u8bfb\uff08not readable\uff09\u7684\u3002\u8fd9\u5c31\u662f\u4e3a\u5565 FlubuCore \u5728\u5f02\u6b65\u4efb\u52a1\u4e2d\u63d0\u4f9b\u987a\u5e8f\u8bb0\u5f55\uff08sequential logging\uff09\u7684\u539f\u56e0\u3002\u4f60\u53ef\u4ee5\u5728\u76ee\u6807\u4e0a\u4f7f\u7528 .SequentialLogging(true) \u6765\u542f\u7528\uff0c\u4e14\u5fc5\u987b\u653e\u5728\u5f02\u6b65\u4efb\u52a1/\u76ee\u6807\u4f9d\u8d56\u9879\u4e4b\u524d\uff0c\u5426\u5219\u65e5\u5fd7\u5c31\u4e0d\u662f\u987a\u5e8f\u7684\u4e86\u3002 context . CreateTarget ( \"Test\" ) . SetAsDefault () . SequentialLogging ( true ) . AddCoreTaskAsync ( x => x . Pack ()) . AddCoreTaskAsync ( x => x . Pack ()) . DependsOnAsync ( test2 , test3 ); \u5728 FlubuCore runner \u4e2d\u5e76\u884c\u6267\u884c\u7684\u76ee\u6807\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u987a\u5e8f\u8bb0\u5f55\u65e5\u5fd7\u7684\u3002 flubu target1 target2 --parallel \u5176\u5b83\u529f\u80fd \u00b6 \u76ee\u6807\u529f\u80fd \u00b6 SetAsDefault \u65b9\u6cd5\uff1a\u5f53\u5e94\u7528\u4e8e\u76ee\u6807\u65f6\uff0c\u5982\u679c\u5728\u4f7f\u7528 runner \u8fd0\u884c\u811a\u672c\u65f6\u6ca1\u6709\u6307\u5b9a\u76ee\u6807\uff0c\u5219\u9ed8\u8ba4\u8fd0\u884c\u8be5\u76ee\u6807\uff1b SetAsHidden \u65b9\u6cd5\uff1a\u5f53\u5e94\u7528\u4e8e\u76ee\u6807\u65f6\uff0c\u76ee\u6807\u5c06\u4e0d\u4f1a\u88ab\u663e\u793a\u5728\u5e2e\u52a9\u4fe1\u606f\u4e2d\uff0c\u5e76\u4e14\u5b83\u53ea\u80fd\u4f5c\u4e3a\u5176\u5b83\u76ee\u6807\u7684\u4f9d\u8d56\u9879\u6765\u8fd0\u884c\uff1b Must \u65b9\u6cd5\uff1a\u8bbe\u7f6e\u5fc5\u8981\u6761\u4ef6\uff0c\u8be5\u6761\u4ef6\u5fc5\u987b\u6ee1\u8db3\uff0c\u4e0d\u7136\u5728\u4efb\u52a1\u6267\u884c\u4e4b\u524d\u76ee\u6807\u5c31\u4f1a\u6267\u884c\u5931\u8d25\u3002 Requires \u65b9\u6cd5\uff1a\u5728 required \u65b9\u6cd5\u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a null \uff0c\u5426\u5219\u5728\u6267\u884c\u4efb\u52a1\u524d\u5c31\u4f1a\u5931\u8d25\u3002 \u4e0a\u4e0b\u6587\u529f\u80fd \u00b6 Log\uff1a context.LogInfo(\"Some Text2\", ConsoleColor.Blue); \uff1b GetVsSolution\uff1a\u83b7\u53d6\u89e3\u51b3\u65b9\u6848\u548c\u9879\u76ee\u4fe1\u606f context.GetVsSolution(); \u3002 GetFiles: \u5728\u9009\u9879\u4e2d\u4f7f\u7528 Glob Pattern \u6a21\u5f0f\u7b5b\u9009\u6307\u5b9a\u76ee\u5f55\u83b7\u5f97\u6587\u4ef6 context.GetFiles(OutputDirectory, \"*.nupkg\"); \uff1b GetDirectories: \u5728\u9009\u9879\u4e2d\u4f7f\u7528 Glob Pattern \u6a21\u5f0f\u4ece\u5236\u5b9a\u76ee\u5f55\u4e2d\u83b7\u53d6\u76ee\u5f55 context.GetFiles(OutputDirectory, \"*.nupkg\"); \uff1b GetEnviromentVariable \u65b9\u6cd5\uff1a\u6839\u636e\u540d\u79f0\uff08name\uff09\u83b7\u53d6\u73af\u5883\u53d8\u91cf context.GetEnvironmentVariable(\"someVariable\"); \uff1b \u4f7f\u7528 RunProgramTask \u5728\u6784\u5efa\u811a\u672c\u4e2d\u8fd0\u884c\u7a0b\u5e8f\u6216\u547d\u4ee4 \u00b6 protected override void ConfigureTargets ( ITaskContext session ) { var runExternalProgramExample = session . CreateTarget ( \"run.libz\" ) . AddTask ( x => x . RunProgramTask ( @\"packages\\LibZ.Tool\\1.2.0\\tools\\libz.exe\" ) . WorkingFolder ( @\".\\src\" ) . WithArguments ( \"add\" ) . WithArguments ( \"--libz\" , \"Assemblies.libz\" )); } Linux \u7684\u4f8b\u5b50\uff1a protected override void ConfigureTargets ( ITaskContext session ) { var runExternalProgramExample = session . CreateTarget ( \"systemctl.example\" ) AddTask ( x => x . RunProgramTask ( @\"systemctl\" ) . WithArguments ( \"start\" ) . WithArguments ( \"nginx.service\" )); } \u6784\u5efa\u5c5e\u6027 \u00b6 \u4f60\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u4e0a\u7684\u7279\u6027\uff08attribute\uff09\u6216 ConfigureBuildProperties \u65b9\u6cd5\uff08\u4ee5\u524d\u7684\u65b9\u6cd5\uff09\u5b9a\u4e49\u591a\u4e2a\u6784\u4ef6\u5c5e\u6027\uff0c\u5728\u4e0d\u540c\u7684\u4efb\u52a1\u548c\u81ea\u5b9a\u4e49\u4ee3\u7801\u4e2d\u5171\u4eab\u5b83\u4eec\u3002 \u4e0b\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5728\u5404\u79cd\u76ee\u6807\uff08Target\uff09/\u4efb\u52a1\uff08Task\uff09\u95f4\u5171\u4eab\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\u540d\u548c\u914d\u7f6e\u3002 [SolutionFileName] public string SolutionFileName { get ; set ; } = \"FlubuExample.sln\" ; [BuildConfiguration] public string BuildConfiguration { get ; set ; } = \"Release\" ; protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"build\" ) . AddCoreTask ( x => x . Build ()); context . CreateTarget ( \"pack\" ) . AddCoreTask ( x => x . Pack ()); } \u53e6\u5916\uff1a [BuildProperty(BuildProps.BuildConfiguration)] public string BuildConfiguration { get ; set ; } = \"Release\" ; \u5982\u679c\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\u540d\u548c\u8def\u5f84\u4e0d\u80fd\u901a\u8fc7\u6784\u5efa\u5c5e\u6027\u7279\u6027\uff08build property attributes\uff09\u6765\u8bbe\u7f6e\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u5728\u6bcf\u4e2a\u4efb\u52a1\u4e2d\u5206\u522b\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5c31\u50cf\u662f\uff1a protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"build\" ) . AddCoreTask ( x => x . Build () . Project ( \"FlubuExample.sln\" ) . Configuration ( \"Release\" )); context . CreateTarget ( \"pack\" ) . AddCoreTask ( x => x . Pack () . Project ( \"FlubuExample.sln\" ) . Configuration ( \"Release\" )); } \u9884\u5b9a\u4e49\u7684\u6784\u5efa\u5c5e\u6027 \u00b6 \u4e00\u4e9b\u6784\u4ef6\u5c5e\u6027\u5df2\u88ab\u9884\u5b9a\u4e49\uff0c\u53ef\u4ee5\u901a\u8fc7\u63a5\u53e3\u83b7\u53d6\uff1a context.Properties.Get(PredefinedBuildProperties.OsPlatform); \u53ef\u7528\u7684\u9884\u5b9a\u4e49\u6784\u4ef6\u5c5e\u6027\u6709\uff1a OsPlatform PathToDotnetExecutable UserProfileFolder OutputDir ProductRootDir \u6240\u6709\u8fd9\u4e9b\u6784\u5efa\u53c2\u6570\u90fd\u53ef\u88ab\u8986\u76d6\u3002 \u5411\u6784\u5efa\u811a\u672c\u5c5e\u6027\u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570\u3001JSON \u914d\u7f6e\u6587\u4ef6\u8bbe\u7f6e\u6216\u73af\u5883\u53d8\u91cf \u00b6 \u53ef\u901a\u8fc7\u5728\u5c5e\u6027\u4e0a\u6253 FromArg \u7279\u6027\u7684\u65b9\u5f0f\u5411\u6784\u5efa\u811a\u672c\u5c5e\u6027\u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570\u3001JSON \u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e\u6216\u73af\u5883\u53d8\u91cf\u3002 public class SimpleScript : DefaultBuildScript { [FromArg(\"sn\", \"If true app is deployed on second node. Otherwise not.\")] public bool deployOnSecondNode { get ; set ; } protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Deploy.Exapmle\" ) . AddTask ( x => x . FlubuWebApiTasks (). GetTokenTask ( \"user\" , \"pass\" ). SetWebApiBaseUrl ( \"noade1Url\" )) . AddTask ( x => x . FlubuWebApiTasks (). UploadPackageTask ( \"packageDir\" , \"*.zip\" )) . AddTask ( x => x . FlubuWebApiTasks (). ExecuteScriptTask ( \"Deploy\" , \"DeployScript.cs\" )) . Group ( target => { target . AddTask ( x => x . FlubuWebApiTasks (). GetTokenTask ( \"user\" , \"pass\" ). SetWebApiBaseUrl ( \"noade2Url\" )) . AddTask ( x => x . FlubuWebApiTasks (). UploadPackageTask ( \"packageDir\" , \"*.zip\" )) . AddTask ( x => x . FlubuWebApiTasks (). ExecuteScriptTask ( \"Deploy\" , \"DeployScript.cs\" )); }, when : c => deployOnSecondNode ); } } FromArg \u7279\u6027\u7b2c\u4e00\u4e2a\u53c2\u6570\uff08parameter\uff09\u662f\u53c2\u6570\u952e\uff08argument key\uff09\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7528\u4e8e\u5728 flubu runner \u4e2d\u663e\u793a\u5c5e\u6027\u7684\u5e2e\u52a9\u63cf\u8ff0\u3002\u5b9e\u9645\u4e0a\u5728\u5c5e\u6027\u4e0a\u6253\u7279\u6027\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u6dfb\u52a0\u8fd9\u4e2a\u7279\u6027\uff0c\u90a3\u4e48\u53c2\u6570\u952e\uff08\u7b2c\u4e00\u4e2a\u53c2\u6570\uff09\u4f1a\u4e0e\u5c5e\u6027\u540c\u540d\uff0c\u5c5e\u6027\u7684\u5e2e\u52a9\u4fe1\u606f\u4e0d\u4f1a\u663e\u793a\u5728\u6784\u5efa\u811a\u672c\u7684 runner \u4e0a\u3002 \u652f\u6301\u7684\u5c5e\u6027\u7c7b\u578b\u6709\uff1astring\u3001boolean\u3001int\u3001long\u3001decimal\u3001double \u548c DateTime\u3002 \u5411\u6784\u5efa\u811a\u672c\u53c2\u6570\u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570\u3002 \u00b6 Dotnet flubu Deploy.Example -sn=true \u5411\u6784\u5efa\u811a\u672c\u4f20\u9012 JSON \u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e \u00b6 \u5728 FLubu runner \u6240\u5728\u7684\u76ee\u5f55\u4e0b\u521b\u5efa FlubuSettings.json \u6587\u4ef6\uff1b \u4ee5 JSON \u683c\u5f0f\u7684\u65b9\u5f0f\u5411\u6587\u4ef6\u4e2d\u6dfb\u52a0\u53c2\u6570\u7684\u952e\u548c\u503c\uff1b \u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0cJSON \u6587\u4ef6\u5c06\u770b\u4e0a\u53bb\u662f\u8fd9\u6837\u5b50\u7684\uff1a json {\u201csn\u201d\uff1atrue\uff0c\u201cSomeOtherKey\u201d\uff1a\u201cSomeOtherValue\u201d} \u5bf9\u4e8e\u4e0d\u540c\u7684\u73af\u5883\uff08\u5982\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u751f\u4ea7\u73af\u5883\uff09\uff0c\u901a\u5e38\u6709\u4e0d\u540c\u7684\u914d\u7f6e\u3002\u53ea\u9700\u521b\u5efa\u4e0d\u540c\u7684 JSON \u6587\u4ef6 FlubuSettings.{Environment}.Json \uff0c\u5e76\u5728\u9700\u8981\u7684\u673a\u5668\u4e0a \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf 'ASPNETCORE_ENVIRONMENT' \u5373\u53ef\uff1b \u8fd8\u53ef\u4ee5\u6309\u673a\u5668\u540d FlubuSettings.{MachineName}.Json \u521b\u5efa JSON \u914d\u7f6e\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e2d\u7684 MachineName \u4e0e\u672c\u673a\u673a\u5668\u540d\u5339\u914d\uff0cFlubu \u5c06\u81ea\u52a8\u4ece\u8be5\u6587\u4ef6\u4e2d\u8bfb\u53d6\u8bbe\u7f6e\u3002 \u5411\u6784\u5efa\u811a\u672c\u4f20\u9012\u73af\u5883\u53d8\u91cf \u00b6 \u8fd8\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u811a\u672c\u53c2\u6570\u3002\u73af\u5883\u53d8\u91cf\u524d\u5fc5\u987b\u6709\u524d\u7f00 flubu_ \u3002 \u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 Windows \u547d\u4ee4\u884c\u5de5\u5177\u6dfb\u52a0\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff1a set flubu_sn = true \u3002 \u5411\u4efb\u52a1\u4f20\u9012\u63a7\u5236\u53f0\u53c2\u6570\u3001JSON \u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e\uff0c\u4ee5\u53ca\u57fa\u4e8e ForMember \u7684\u73af\u5883\u53d8\u91cf\u3002 \u00b6 \u8fd8\u6709\u4e00\u79cd\u66f4\u4e3a\u590d\u6742\u7684\u65b9\u6cd5\u6765\u7ed9\u4efb\u52a1\u4f20\u9012\u63a7\u5236\u53f0\u53c2\u6570\u3001\u8bbe\u7f6e\u548c\u73af\u5883\u53d8\u91cf\uff1a protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"compile\" ) . AddTask ( x => x . CompileSolutionTask () . ForMember ( y => y . SolutionFileName ( \"someSolution.sln\" ), \"solution\" , \"The solution to build.\" )); } \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u9700\u8981\u4f20\u9012\u7684\u65b9\u6cd5\u6216\u5c5e\u6027\u7684\u53c2\u6570\uff0c\u5982\u679c\u5728\u8fd0\u884c\u6784\u5efa\u811a\u672c\u65f6\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\uff1b \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u53c2\u6570\u952e\uff08argument key\uff09\uff1b \u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u53ef\u9009\u7684\uff0c\u5728\u76ee\u6807\u7684\u5e2e\u52a9\u4e2d\u663e\u5f0f\u5e2e\u52a9\u4fe1\u606f\u3002\u5982\u679c\u53c2\u6570\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u663e\u793a\u9ed8\u8ba4\u751f\u6210\u7684\u5e2e\u52a9\u3002 Dotnet flubu compile -solution=someothersolution.sln \u6784\u5efa\u7cfb\u7edf\u63d0\u4f9b\u8005\u7a0b\u5e8f \u00b6 \u4f60\u53ef\u4ee5\u83b7\u53d6\u4e0d\u540c\u7684\u6784\u5efa\u7cfb\u7edf\uff08\u5982 Jenkins\u3001TeamCity\u3001AppVeyor\u3001Travis \u7b49\uff09\u7684\u591a\u79cd\u4fe1\u606f\uff0c\u5982\u6784\u5efa\u3002\u63d0\u4ea4\u7b49\u3002 protected override void ConfigureTargets ( ITaskContext context ) { bool isLocalBuild = context . BuildSystems (). IsLocalBuild ; var gitCommitId = context . BuildSystems (). Jenkins (). GitCommitId ; } \u6784\u5efa\u4e8b\u4ef6 \u00b6 OnBuildFailed \u4e8b\u4ef6\uff1a public class BuildScript : DefaultBuildScript { protected override void OnBuildFailed ( ITaskSession session , Exception ex ) { } } \u5728\u76ee\u6807\u6267\u884c\u524d\u540e\u6267\u884c\u7684\u4e8b\u4ef6\uff1a protected override void BeforeTargetExecution ( ITaskContext context ) { } protected override void AfterTargetExecution ( ITaskContext context ) { } \u5728\u6784\u5efa\u6267\u884c\u524d\u540e\u6267\u884c\u7684\u4e8b\u4ef6\uff1a protected override void BeforeBuildExecution ( ITaskContext context ) { } protected override void AfterBuildExecution ( ITaskSession session ) { } \u811a\u672c\u4e2d\u7684\u90e8\u5206\u7c7b\u548c\u57fa\u7c7b \u00b6 \u5982\u679c\u90e8\u5206\u7c7b\uff08partial classes\uff09\u548c\u57fa\u7c7b\uff08base classes\uff09\u4f4d\u4e8e\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b\uff0c\u5219\u4f1a\u81ea\u52a8\u52a0\u8f7d\u5b83\u4eec\uff1b\u5426\u5219\uff0c\u5fc5\u987b\u4f7f\u7528 Include \u7279\u6027 \u6765\u6dfb\u52a0\u3002","title":"\u6784\u5efa\u811a\u672c\u57fa\u7840"},{"location":"buildscript-fundamentals/#_1","text":"\u6bcf\u4e2a\u6784\u5efa\u811a\u672c\uff08build script\uff09\u90fd\u7ee7\u627f\u81ea DefaulBuildScript \u7c7b\uff0c\u56e0\u6b64\u5fc5\u987b\u5b9e\u73b0 DefaulBuildScript \u4e2d\u7684\u4e24\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff08abstract method\uff09\u3002 ConfigureTargets\uff1a\u7528\u4e8e\u521b\u5efa\u5c06\u6267\u884c\u7279\u5b9a\u5de5\u4f5c\u7684\u65b0\u76ee\u6807\uff08targets\uff09\u3002 \u7a7a\u6784\u5efa\u811a\u672c\u793a\u4f8b\uff1a public class BuildScript : DefaultBuildScript { protected override void ConfigureTargets ( ITaskContext session ) { } }","title":"\u6784\u5efa\u811a\u672c"},{"location":"buildscript-fundamentals/#_2","text":"\u76ee\u6807\uff08target\uff09\u7528\u4e8e\u6309\u7279\u5b9a\u987a\u5e8f\u6267\u884c\u7279\u5b9a\u5de5\u4f5c\u3002\u76ee\u6807\u53ef\u6267\u884c\u8bf8\u5982 FlubuCore \u5185\u7f6e\u4efb\u52a1\uff08\u5982\u7f16\u8bd1\u89e3\u51b3\u65b9\u6848\u7684\u4efb\u52a1\uff09\u548c\u4e00\u4e9b\u81ea\u5b9a\u4e49 C# \u4ee3\u7801\u3002\u76ee\u6807\u4e5f\u53ef\u4ee5\u4f9d\u8d56\u4e8e\u5176\u4ed6\u76ee\u6807\uff08other targets\uff09\u3002","title":"\u76ee\u6807"},{"location":"buildscript-fundamentals/#_3","text":"\u4e0b\u4f8b\u5c06\u521b\u5efa\u5728\u4efb\u52a1\u4e2d\u6267\u884c\u4e00\u6b21\u6784\u5efa\u7684\u65b0\u76ee\u6807\u3002 protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Compile\" ) . SetDescription ( \"Compiles the solution\" ) . AddTask ( x => x . CompileSolutionTask ()); } \u76ee\u6807\u4e5f\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u4e0a\u7684\u7279\u6027\u6765\u8fdb\u884c\u5b9a\u4e49\u3002 [Target(\"targetName\", \"a\", \"b\")] [Target(\"targetName2\", \"c\", \"d\")] [Target(\"targetName3\", \"e\", \"f\")] public void Example ( ITarget target , string source , string destination ) { target . AddTask ( x => x . CopyFileTask ( source , destination , true )); } \u4f60\u8fd8\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236\u53f0\u53c2\u6570\uff08console arguments\uff09\u6216 FlubuCore \u914d\u7f6e\u6587\u4ef6\u5411\u53c2\u6570\uff08parameter\uff09\u4f20\u9012\u503c\u3002 Flubu targetName2 -destination=SomeOtherDestination","title":"\u521b\u5efa\u65b0\u76ee\u6807"},{"location":"buildscript-fundamentals/#_4","text":"\u4efb\u52a1\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a\uff08\u4e00\u822c\uff09\u4efb\u52a1\uff08task\uff09\u548c Core \u4efb\u52a1\u3002\uff08\u4e00\u822c\uff09\u4efb\u52a1\u53ef\u4ee5\u5728 .NET \u548c .NET Core \u9879\u76ee\u4e2d\u6267\u884c\uff0c\u800c Core \u4efb\u52a1\u53ea\u80fd\u5728 .NET Core \u9879\u76ee\u4e2d\u6267\u884c\u3002 \u4e0b\u4f8b\u4ee3\u7801\uff0c\u5728\u76ee\u6807\u4e2d\u6267\u884c\u4e86\u4e24\u4e2a Core \u4efb\u52a1\uff0c\u6267\u884c\u987a\u5e8f\u4e0e\u4ee3\u7801\u4e2d\u6307\u5b9a\u7684\u987a\u5e8f\u4e00\u81f4\u3002 context . CreateTarget ( \"Build\" ) . AddCoreTask ( x => x . Restore ()) . AddCoreTask ( x => x . Build ()); \u6240\u6709\u4efb\u52a1\u90fd\u6709\u4ee5\u4e0b\u65b9\u6cd5\uff1a .OnError((c, ex) => { c.LogInfo(\"Example\");})) - onError \u53ef\u5728\u6307\u5b9a\u4efb\u52a1\u53d1\u751f\u9519\u8bef\u65f6\u6267\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\u64cd\u4f5c\uff1b .Retry(5, 1000) - \u91cd\u8bd5\u673a\u5236\uff08Retry Mechanism\uff09\u3002\u53ef\u5728\u8be5\u673a\u5236\u91cd\u8bd5\u4efb\u52a1\u671f\u95f4\u5e94\u7528\u7279\u5b9a\u6761\u4ef6\uff08specific condition\uff09\uff1b .Finally(c => { c.LogInfo(\"Example\");})) - Finally \u5c31\u50cf try-cache-finally \u91cc\u7684 finally \u5757\uff1b .DoNotFailOnError() - \u811a\u672c\u4e0d\u4f1a\u56e0\u53d1\u751f\u5f02\u5e38\u800c\u5931\u8d25\uff0c\u4f60\u53ef\u4e3a\u4efb\u52a1\u4e0d\u5931\u8d25\u65f6\u5e94\u7528\u7279\u5b9a\u6761\u4ef6\uff1b","title":"\u4efb\u52a1"},{"location":"buildscript-fundamentals/#-nolog-","text":".SetDescription() - \u8986\u76d6\uff08overrides\uff09\u4efb\u52a1\u7684\u9ed8\u8ba4\u63cf\u8ff0\uff1b .ForMember() - \u5c06\u63a7\u5236\u53f0\u53c2\u6570\u4f20\u9012\u7ed9\u65b9\u6cd5\u6216\u5c5e\u6027\uff0c\u76f8\u5173\u8be6\u7ec6\u4fe1\u606f\u8bf7\u67e5\u9605 \u5411\u4efb\u52a1\u4f20\u9012\u63a7\u5236\u53f0\u53c2\u6570\u3001JSON \u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e\uff0c\u4ee5\u53ca\u57fa\u4e8e ForMember \u7684\u73af\u5883\u53d8\u91cf ; \u5728\u5355\u4e2a\u4efb\u52a1\u4e0a\u4f7f\u7528 When \u4ece\u53e5\uff08when cluase\uff09\uff0c\u4f7f\u4efb\u52a1\u6709\u6761\u4ef6\u5730\u6267\u884c\uff08\u53c2\u9605\u4e0b\u9762\u7684\u4efb\u52a1\u7ec4\uff09\uff1a context . CreateTarget ( \"Example\" ) . AddTask ( x => x . CompileSolutionTask ()) . AddTask ( x => x . PublishNuGetPackageTask ( \"packageId\" , \"pathToNuspec\" )) . When ( c => c . BuildSystems (). Jenkins (). IsRunningOnJenkins ); \u5f53\u4e14\u4ec5\u5f53\u6ee1\u8db3\u6307\u5b9a\u6761\u4ef6\u65f6\u8bbe\u7f6e\u4efb\u52a1\u53c2\u6570\uff1a var compile = context . CreateTarget ( \"compile\" ) . SetDescription ( \"Compiles the VS solution\" ) . AddCoreTask ( x => x . Build (). Configuration ( \"Release\" ) . When ( () => { return context . BuildSystems (). IsLocalBuild ; }, task => { task . Configuration ( \"Debug\" ); })); .Interactive() - \u4ea4\u4e92\u5730\u5c06\u53c2\u6570\u4ece\u63a7\u5236\u53f0\u4f20\u9012\u7ed9\u4efb\u52a1\u7684\u65b9\u6cd5\u6216\u53c2\u6570\u3002","title":"- .NoLog() - \u4efb\u52a1\u65e5\u5fd7\u5c06\u4e0d\u4f1a\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff1b"},{"location":"buildscript-fundamentals/#_5","text":"\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u4e0a\u7684\u7279\u5b9a\uff08Attribute\uff09\u6765\u6267\u884c\u67d0\u4e9b\u4efb\u52a1\u3002 Flubu \u5c06\u4f1a\u628a\u4efb\u52a1\u7684\u8fd4\u56de\u503c\u6ce8\u5165\u5230\u5c5e\u6027\u4e2d\u3002\u8fd9\u5bf9\u6240\u6709\u7248\u672c\u63a7\u5236\u4efb\u52a1\u3001\u5c24\u5176\u662f\u6709\u8fd4\u56de\u503c\u7684\u4efb\u52a1\u7279\u522b\u6709\u7528\u3002\u6709\u5173\u6240\u6709\u53ef\u7528\u7684\u7279\u6027\uff0c\u8bf7\u53c2\u9605 FlubuCore.Tasks.Attributes \u547d\u540d\u7a7a\u95f4\u3002 [FetchBuildVersionFromFile] public BuildVersion BuildVersion { get ; } [GitVersion] public GitVersion GitVersion { get ; } \u4f60\u53ef\u4ee5\u901a\u8fc7 ConfigureTarget \u83b7\u53d6\u7248\u672c\u4fe1\u606f\uff0c\u800c\u8fd9\u4e9b\u5728\u7248\u672c\u63a7\u5236\u4efb\u52a1\u5df2\u6267\u884c\u540e\u662f\u4e0d\u53ef\u83b7\u5f97\u7684\uff08\u6bd4\u5982\u76ee\u6807\u4f9d\u8d56\u9879\u7b49\uff09\u3002 protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Build\" ) . AddCoreTask ( x => x . Build (). Version ( BuildVersion . Version . ToString ())); }","title":"\u4efb\u52a1\u7279\u6027\uff08\u7248\u672c\u63a7\u5236\uff09"},{"location":"buildscript-fundamentals/#c","text":"\u4e0b\u4f8b\u5c06\u6267\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\u4ee3\u7801\u3002\u4f60\u53ef\u4ee5\u5728\u81ea\u5b9a\u4e49\u4ee3\u7801\u4e2d\u4f7f\u7528 FlubuCore \u7684\u5185\u7f6e\u4efb\u52a1\uff1a protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Example\" ) . Do ( CustomCodeExample ); } private static void CustomCodeExample ( ITaskContext context ) { //// You can put any c# code here and use any .net libraries. Console . WriteLine ( \"Dummy custom code\" ); context . Tasks (). NUnitTaskForNunitV3 ( \"project name\" ). Execute ( context ); } \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e26\u53c2\u65b9\u6cd5\uff1a protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Example\" ) . Do ( CustomCodeExample , \"some value\" , 1 ); } private static void CustomCodeExample ( ITaskContext context , string arg1 , int arg2 ) { Console . WriteLine ( \"Dummy custom code\" ); context . Tasks (). NUnitTaskForNunitV3 ( \"project name\" ). Execute ( context ); }","title":"\u81ea\u5b9a\u4e49 C# \u4ee3\u7801/\u4efb\u52a1"},{"location":"buildscript-fundamentals/#_6","text":"\u76ee\u6807\u53ef\u4f9d\u8d56\u4e8e\u5176\u4ed6\u76ee\u6807\u3002\u6240\u6709\u4f9d\u8d56\u9879\u5c06\u6309\u6307\u5b9a\u987a\u5e8f\u5728\u76ee\u6807\u6267\u884c\u524d\u6267\u884c\u3002 \u5f53 targetC \u6267\u884c\u65f6\uff0c\u76ee\u6807\u7684\u6267\u884c\u987a\u5e8f\u5c06\u662f\uff1aTargetB\u3001TargetA \u548c TargetC\u3002 var targetA = context . CreateTarget ( \"TargetA\" ); var targetB = context . CreateTarget ( \"TargetB\" ); var targetC = context . CreateTarget ( \"TargetC\" ). DependsOn ( targetB , targetA ); \u4e5f\u53ef\u4ee5\u53cd\u8f6c\u4f9d\u8d56\u5173\u7cfb\uff1a var targetC = context . CreateTarget ( \"TargetC\" ). DependenceOf ( targetA );","title":"\u76ee\u6807\u4f9d\u8d56"},{"location":"buildscript-fundamentals/#_7","text":"\u901a\u8fc7 AddTarget\uff0c\u4e00\u4e2a\u76ee\u6807\u53ef\u5728\u53e6\u4e00\u4e2a\u76ee\u6807\u5185\u90e8\u6267\u884c\u3002\u76ee\u6807\u5c06\u6309\u6dfb\u52a0\u987a\u5e8f\u6267\u884c\u3002 \u793a\u4f8b\uff1a protected override void ConfigureTargets ( ITaskContext context ) { var exampleB = context . CreateTarget ( \"TargetB\" ) . Do ( Something ); context . CreateTarget ( \"TargetA\" ) . AddCoreTask ( x => x . Build ()) . AddTarget ( exampleB ) . Do ( JustAnExample ); } public void JustAnExample ( ITaskContext context ) { ... } TargetA \u6267\u884c\u987a\u5e8f\u4e3a\uff1a \u6784\u5efa\u4efb\u52a1\uff1b TargetB \u76ee\u6807\uff1b JustAnExample \u65b9\u6cd5\u3002","title":"\u5728\u76ee\u6807\u4e2d\u6dfb\u52a0\u76ee\u6807"},{"location":"buildscript-fundamentals/#_8","text":"\u4e0b\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5728\u4e0d\u540c\u76ee\u6807\u4e2d\u590d\u7528\u4efb\u52a1\u96c6\uff08reuse set of tasks\uff09\uff1a protected override void ConfigureTargets ( ITaskContext session ) { session . CreateTarget ( \"deploy.local\" ). AddTasks ( Deploy , \"c:\\\\ExamplaApp\" ). SetAsDefault (); session . CreateTarget ( \"deploy.test\" ). AddTasks ( Deploy , \"d:\\\\ExamplaApp\" ); session . CreateTarget ( \"deploy.prod\" ). AddTasks ( Deploy , \"e:\\\\ExamplaApp\" ); } private void Deploy ( ITarget target , string deployPath ) { target . AddTask ( x => x . IisTasks (). CreateAppPoolTask ( \"Example app pool\" ). Mode ( CreateApplicationPoolMode . DoNothingIfExists )) . AddTask ( x => x . IisTasks (). ControlAppPoolTask ( \"Example app pool\" , ControlApplicationPoolAction . Stop ). DoNotFailOnError ()) . Do ( UnzipPackage ) . AddTask ( x => x . CopyDirectoryStructureTask ( @\"Packages\\ExampleApp\" , @\"C:\\ExampleApp\" , true ). Retry ( 20 , 5000 )) . Do ( CreateWebSite ) }","title":"\u5728\u4e0d\u540c\u76ee\u6807\u4e2d\u590d\u7528\u4efb\u52a1\u96c6"},{"location":"buildscript-fundamentals/#foreach","text":"\u4e0b\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5728 foreach \u5faa\u73af\u4e2d\u4e3a\u76ee\u6807\u6dfb\u52a0\u591a\u4e2a\u4efb\u52a1\uff1a protected override void ConfigureTargets ( ITaskContext context ) { var solution = context . GetVsSolution (); context . CreateTarget ( \"Pack\" ) . ForEach ( solution . Projects , ( item , target ) => { target . AddCoreTask ( x => x . Pack (). Project ( item . ProjectName )) . Do ( JustAnExample , item ); }); } private void JustAnExample ( ITaskContext context , VSProjectInfo vsProjectInfo ) { //// Do something. } \u4f8b\u4e2d\uff0c\u793a\u4f8b\u7a0b\u5e8f\u5c06\u4e3a\u6bcf\u4e2a\u9879\u76ee\u6267\u884c Pack \u4efb\u52a1\u3002","title":"\u5728 foreach \u5faa\u73af\u4e2d\u4e3a\u76ee\u6807\u6dfb\u52a0\u4efb\u52a1"},{"location":"buildscript-fundamentals/#whenonerror-finally","text":"\u5728\u4efb\u52a1\u7ec4\u4e0a\u4f7f\u7528 When \u5b50\u53e5\u6709\u6761\u4ef6\u5730\u6267\u884c\u4efb\u52a1\u3002 protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Example\" ) . AddCoreTask ( x => x . Build ()) . Group ( target => { target . AddCoreTask ( x => x . Pack ()); target . AddCoreTask ( x => x . NugetPush ( \"pathToPackage\" )); }, when : c => ! c . BuildSystems (). Jenkins (). IsRunningOnJenkins ); } \u5728\u4efb\u52a1\u7ec4\u4e2d\u4f7f\u7528 Finally\uff1aonFinally \u7684\u884c\u4e3a\u4e0e try-catch-finally \u4e2d\u7684 Finally \u76f8\u540c\u3002 context . CreateTarget ( \"Example\" ) . AddCoreTask ( x => x . Build ()) . Group ( target => { target . AddCoreTask ( x => x . Pack ()); target . AddCoreTask ( x => x . NugetPush ( \"pathToPackage\" )); }, onFinally : c => { c . Tasks (). DeleteFilesTask ( \"pathToNupkg\" , \"*.*\" , true ). Execute ( c ); }); \u5728\u4efb\u52a1\u7ec4\u4e2d\u4f7f\u7528 OnError\uff1a\u53ef\u4ee5\u5728\u7ec4\u4e2d\u4efb\u610f\u4e00\u4e2a\u4efb\u52a1\u53d1\u751f\u9519\u8bef\u65f6\u6267\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\u64cd\u4f5c\u3002 context . CreateTarget ( \"Example\" ) . AddCoreTask ( x => x . Build ()) . Group ( target => { target . AddCoreTask ( x => x . Pack ()); target . AddCoreTask ( x => x . NugetPush ( \"pathToPackage\" )); }, onError : ( c , error ) => { //// some custom action when error occures in any of the task in group. });","title":"\u5206\u7ec4\u4efb\u52a1\uff0c\u5e76\u5e94\u7528 When\u3001OnError \u548c Finally"},{"location":"buildscript-fundamentals/#_9","text":"\u53ef\u901a\u8fc7 AddTaskAsync \u6216 AddCoreTaskAsync \u65b9\u6cd5\u5f02\u6b65\u6267\u884c\u4efb\u52a1\u3002 \u53ef\u4f7f\u7528 DoAsync \u65b9\u6cd5\u5f02\u6b65\u6267\u884c\u81ea\u5b9a\u4e49\u4ee3\u7801\u3002 \u53ef\u901a\u8fc7 DependsOnAsync \u65b9\u6cd5\u5f02\u6b65\u6267\u884c\u4f9d\u8d56\u9879\u3002 \u5728\u4e0b\u4f8b\u76ee\u6807\u4e2d\u5e76\u884c\u6267\u884c\u4e09\u4e2a\u4efb\u52a1\u3002 session . CreateTarget ( \"run.tests\" ) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName1\" )) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName1\" )) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName3\" )); \u5f02\u6b65\u65b9\u6cd5\u548c\u540c\u6b65\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\u3002 session . CreateTarget ( \"async.example\" ) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName1\" )) . AddTaskAsync ( x => x . NUnitTaskForNunitV3 ( \"TestProjectName1\" )) . Do ( SomeCustomMethod ) . DoAsync ( SomeCustomAsyncMethod2 ) . DoAsync ( SomeCustomAsyncMethod3 ); \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u5c06\u9996\u5148\u5f02\u6b65\u6267\u884c\u4e24\u4e2a nunit \u4efb\u52a1\uff0c\u5e76\u7b49\u5f85\u4e24\u4e2a\u4efb\u52a1\u5b8c\u6210\uff1b\u968f\u540e\u5c06\u540c\u6b65\u6267\u884c SOmeCustomMethod\uff0c\u6267\u884c\u5b8c\u540e\u518d\u5e76\u884c\u6267\u884c SomeCustomAsyncMethod2 \u548c SomeCustomAsyncMethod3\u3002","title":"\u4efb\u52a1\u3001\u81ea\u5b9a\u4e49\u4ee3\u7801\u4e0e\u4f9d\u8d56\u9879\u7684\u5f02\u6b65\u6267\u884c\u4e0e\u5e76\u884c\u6267\u884c"},{"location":"buildscript-fundamentals/#_10","text":"\u901a\u5e38\u6765\u8bb2\uff0c\u5728\u5f02\u6b65\u6216\u5e76\u884c\u6267\u884c\u591a\u4e2a\u4efb\u52a1\u65f6\uff0c\u65e5\u5fd7\u662f\u4e0d\u53ef\u8bfb\uff08not readable\uff09\u7684\u3002\u8fd9\u5c31\u662f\u4e3a\u5565 FlubuCore \u5728\u5f02\u6b65\u4efb\u52a1\u4e2d\u63d0\u4f9b\u987a\u5e8f\u8bb0\u5f55\uff08sequential logging\uff09\u7684\u539f\u56e0\u3002\u4f60\u53ef\u4ee5\u5728\u76ee\u6807\u4e0a\u4f7f\u7528 .SequentialLogging(true) \u6765\u542f\u7528\uff0c\u4e14\u5fc5\u987b\u653e\u5728\u5f02\u6b65\u4efb\u52a1/\u76ee\u6807\u4f9d\u8d56\u9879\u4e4b\u524d\uff0c\u5426\u5219\u65e5\u5fd7\u5c31\u4e0d\u662f\u987a\u5e8f\u7684\u4e86\u3002 context . CreateTarget ( \"Test\" ) . SetAsDefault () . SequentialLogging ( true ) . AddCoreTaskAsync ( x => x . Pack ()) . AddCoreTaskAsync ( x => x . Pack ()) . DependsOnAsync ( test2 , test3 ); \u5728 FlubuCore runner \u4e2d\u5e76\u884c\u6267\u884c\u7684\u76ee\u6807\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u987a\u5e8f\u8bb0\u5f55\u65e5\u5fd7\u7684\u3002 flubu target1 target2 --parallel","title":"\u5728\u5f02\u6b65\u6267\u884c\u7684\u4efb\u52a1\u548c\u76ee\u6807\u4e2d\u987a\u5e8f\u6253\u65e5\u5fd7"},{"location":"buildscript-fundamentals/#_11","text":"","title":"\u5176\u5b83\u529f\u80fd"},{"location":"buildscript-fundamentals/#_12","text":"SetAsDefault \u65b9\u6cd5\uff1a\u5f53\u5e94\u7528\u4e8e\u76ee\u6807\u65f6\uff0c\u5982\u679c\u5728\u4f7f\u7528 runner \u8fd0\u884c\u811a\u672c\u65f6\u6ca1\u6709\u6307\u5b9a\u76ee\u6807\uff0c\u5219\u9ed8\u8ba4\u8fd0\u884c\u8be5\u76ee\u6807\uff1b SetAsHidden \u65b9\u6cd5\uff1a\u5f53\u5e94\u7528\u4e8e\u76ee\u6807\u65f6\uff0c\u76ee\u6807\u5c06\u4e0d\u4f1a\u88ab\u663e\u793a\u5728\u5e2e\u52a9\u4fe1\u606f\u4e2d\uff0c\u5e76\u4e14\u5b83\u53ea\u80fd\u4f5c\u4e3a\u5176\u5b83\u76ee\u6807\u7684\u4f9d\u8d56\u9879\u6765\u8fd0\u884c\uff1b Must \u65b9\u6cd5\uff1a\u8bbe\u7f6e\u5fc5\u8981\u6761\u4ef6\uff0c\u8be5\u6761\u4ef6\u5fc5\u987b\u6ee1\u8db3\uff0c\u4e0d\u7136\u5728\u4efb\u52a1\u6267\u884c\u4e4b\u524d\u76ee\u6807\u5c31\u4f1a\u6267\u884c\u5931\u8d25\u3002 Requires \u65b9\u6cd5\uff1a\u5728 required \u65b9\u6cd5\u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a null \uff0c\u5426\u5219\u5728\u6267\u884c\u4efb\u52a1\u524d\u5c31\u4f1a\u5931\u8d25\u3002","title":"\u76ee\u6807\u529f\u80fd"},{"location":"buildscript-fundamentals/#_13","text":"Log\uff1a context.LogInfo(\"Some Text2\", ConsoleColor.Blue); \uff1b GetVsSolution\uff1a\u83b7\u53d6\u89e3\u51b3\u65b9\u6848\u548c\u9879\u76ee\u4fe1\u606f context.GetVsSolution(); \u3002 GetFiles: \u5728\u9009\u9879\u4e2d\u4f7f\u7528 Glob Pattern \u6a21\u5f0f\u7b5b\u9009\u6307\u5b9a\u76ee\u5f55\u83b7\u5f97\u6587\u4ef6 context.GetFiles(OutputDirectory, \"*.nupkg\"); \uff1b GetDirectories: \u5728\u9009\u9879\u4e2d\u4f7f\u7528 Glob Pattern \u6a21\u5f0f\u4ece\u5236\u5b9a\u76ee\u5f55\u4e2d\u83b7\u53d6\u76ee\u5f55 context.GetFiles(OutputDirectory, \"*.nupkg\"); \uff1b GetEnviromentVariable \u65b9\u6cd5\uff1a\u6839\u636e\u540d\u79f0\uff08name\uff09\u83b7\u53d6\u73af\u5883\u53d8\u91cf context.GetEnvironmentVariable(\"someVariable\"); \uff1b","title":"\u4e0a\u4e0b\u6587\u529f\u80fd"},{"location":"buildscript-fundamentals/#runprogramtask","text":"protected override void ConfigureTargets ( ITaskContext session ) { var runExternalProgramExample = session . CreateTarget ( \"run.libz\" ) . AddTask ( x => x . RunProgramTask ( @\"packages\\LibZ.Tool\\1.2.0\\tools\\libz.exe\" ) . WorkingFolder ( @\".\\src\" ) . WithArguments ( \"add\" ) . WithArguments ( \"--libz\" , \"Assemblies.libz\" )); } Linux \u7684\u4f8b\u5b50\uff1a protected override void ConfigureTargets ( ITaskContext session ) { var runExternalProgramExample = session . CreateTarget ( \"systemctl.example\" ) AddTask ( x => x . RunProgramTask ( @\"systemctl\" ) . WithArguments ( \"start\" ) . WithArguments ( \"nginx.service\" )); }","title":"\u4f7f\u7528 RunProgramTask \u5728\u6784\u5efa\u811a\u672c\u4e2d\u8fd0\u884c\u7a0b\u5e8f\u6216\u547d\u4ee4"},{"location":"buildscript-fundamentals/#_14","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u4e0a\u7684\u7279\u6027\uff08attribute\uff09\u6216 ConfigureBuildProperties \u65b9\u6cd5\uff08\u4ee5\u524d\u7684\u65b9\u6cd5\uff09\u5b9a\u4e49\u591a\u4e2a\u6784\u4ef6\u5c5e\u6027\uff0c\u5728\u4e0d\u540c\u7684\u4efb\u52a1\u548c\u81ea\u5b9a\u4e49\u4ee3\u7801\u4e2d\u5171\u4eab\u5b83\u4eec\u3002 \u4e0b\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5728\u5404\u79cd\u76ee\u6807\uff08Target\uff09/\u4efb\u52a1\uff08Task\uff09\u95f4\u5171\u4eab\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\u540d\u548c\u914d\u7f6e\u3002 [SolutionFileName] public string SolutionFileName { get ; set ; } = \"FlubuExample.sln\" ; [BuildConfiguration] public string BuildConfiguration { get ; set ; } = \"Release\" ; protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"build\" ) . AddCoreTask ( x => x . Build ()); context . CreateTarget ( \"pack\" ) . AddCoreTask ( x => x . Pack ()); } \u53e6\u5916\uff1a [BuildProperty(BuildProps.BuildConfiguration)] public string BuildConfiguration { get ; set ; } = \"Release\" ; \u5982\u679c\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\u540d\u548c\u8def\u5f84\u4e0d\u80fd\u901a\u8fc7\u6784\u5efa\u5c5e\u6027\u7279\u6027\uff08build property attributes\uff09\u6765\u8bbe\u7f6e\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u5728\u6bcf\u4e2a\u4efb\u52a1\u4e2d\u5206\u522b\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5c31\u50cf\u662f\uff1a protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"build\" ) . AddCoreTask ( x => x . Build () . Project ( \"FlubuExample.sln\" ) . Configuration ( \"Release\" )); context . CreateTarget ( \"pack\" ) . AddCoreTask ( x => x . Pack () . Project ( \"FlubuExample.sln\" ) . Configuration ( \"Release\" )); }","title":"\u6784\u5efa\u5c5e\u6027"},{"location":"buildscript-fundamentals/#_15","text":"\u4e00\u4e9b\u6784\u4ef6\u5c5e\u6027\u5df2\u88ab\u9884\u5b9a\u4e49\uff0c\u53ef\u4ee5\u901a\u8fc7\u63a5\u53e3\u83b7\u53d6\uff1a context.Properties.Get(PredefinedBuildProperties.OsPlatform); \u53ef\u7528\u7684\u9884\u5b9a\u4e49\u6784\u4ef6\u5c5e\u6027\u6709\uff1a OsPlatform PathToDotnetExecutable UserProfileFolder OutputDir ProductRootDir \u6240\u6709\u8fd9\u4e9b\u6784\u5efa\u53c2\u6570\u90fd\u53ef\u88ab\u8986\u76d6\u3002","title":"\u9884\u5b9a\u4e49\u7684\u6784\u5efa\u5c5e\u6027"},{"location":"buildscript-fundamentals/#json","text":"\u53ef\u901a\u8fc7\u5728\u5c5e\u6027\u4e0a\u6253 FromArg \u7279\u6027\u7684\u65b9\u5f0f\u5411\u6784\u5efa\u811a\u672c\u5c5e\u6027\u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570\u3001JSON \u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e\u6216\u73af\u5883\u53d8\u91cf\u3002 public class SimpleScript : DefaultBuildScript { [FromArg(\"sn\", \"If true app is deployed on second node. Otherwise not.\")] public bool deployOnSecondNode { get ; set ; } protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Deploy.Exapmle\" ) . AddTask ( x => x . FlubuWebApiTasks (). GetTokenTask ( \"user\" , \"pass\" ). SetWebApiBaseUrl ( \"noade1Url\" )) . AddTask ( x => x . FlubuWebApiTasks (). UploadPackageTask ( \"packageDir\" , \"*.zip\" )) . AddTask ( x => x . FlubuWebApiTasks (). ExecuteScriptTask ( \"Deploy\" , \"DeployScript.cs\" )) . Group ( target => { target . AddTask ( x => x . FlubuWebApiTasks (). GetTokenTask ( \"user\" , \"pass\" ). SetWebApiBaseUrl ( \"noade2Url\" )) . AddTask ( x => x . FlubuWebApiTasks (). UploadPackageTask ( \"packageDir\" , \"*.zip\" )) . AddTask ( x => x . FlubuWebApiTasks (). ExecuteScriptTask ( \"Deploy\" , \"DeployScript.cs\" )); }, when : c => deployOnSecondNode ); } } FromArg \u7279\u6027\u7b2c\u4e00\u4e2a\u53c2\u6570\uff08parameter\uff09\u662f\u53c2\u6570\u952e\uff08argument key\uff09\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7528\u4e8e\u5728 flubu runner \u4e2d\u663e\u793a\u5c5e\u6027\u7684\u5e2e\u52a9\u63cf\u8ff0\u3002\u5b9e\u9645\u4e0a\u5728\u5c5e\u6027\u4e0a\u6253\u7279\u6027\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u6dfb\u52a0\u8fd9\u4e2a\u7279\u6027\uff0c\u90a3\u4e48\u53c2\u6570\u952e\uff08\u7b2c\u4e00\u4e2a\u53c2\u6570\uff09\u4f1a\u4e0e\u5c5e\u6027\u540c\u540d\uff0c\u5c5e\u6027\u7684\u5e2e\u52a9\u4fe1\u606f\u4e0d\u4f1a\u663e\u793a\u5728\u6784\u5efa\u811a\u672c\u7684 runner \u4e0a\u3002 \u652f\u6301\u7684\u5c5e\u6027\u7c7b\u578b\u6709\uff1astring\u3001boolean\u3001int\u3001long\u3001decimal\u3001double \u548c DateTime\u3002","title":"\u5411\u6784\u5efa\u811a\u672c\u5c5e\u6027\u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570\u3001JSON \u914d\u7f6e\u6587\u4ef6\u8bbe\u7f6e\u6216\u73af\u5883\u53d8\u91cf"},{"location":"buildscript-fundamentals/#_16","text":"Dotnet flubu Deploy.Example -sn=true","title":"\u5411\u6784\u5efa\u811a\u672c\u53c2\u6570\u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570\u3002"},{"location":"buildscript-fundamentals/#json_1","text":"\u5728 FLubu runner \u6240\u5728\u7684\u76ee\u5f55\u4e0b\u521b\u5efa FlubuSettings.json \u6587\u4ef6\uff1b \u4ee5 JSON \u683c\u5f0f\u7684\u65b9\u5f0f\u5411\u6587\u4ef6\u4e2d\u6dfb\u52a0\u53c2\u6570\u7684\u952e\u548c\u503c\uff1b \u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0cJSON \u6587\u4ef6\u5c06\u770b\u4e0a\u53bb\u662f\u8fd9\u6837\u5b50\u7684\uff1a json {\u201csn\u201d\uff1atrue\uff0c\u201cSomeOtherKey\u201d\uff1a\u201cSomeOtherValue\u201d} \u5bf9\u4e8e\u4e0d\u540c\u7684\u73af\u5883\uff08\u5982\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u751f\u4ea7\u73af\u5883\uff09\uff0c\u901a\u5e38\u6709\u4e0d\u540c\u7684\u914d\u7f6e\u3002\u53ea\u9700\u521b\u5efa\u4e0d\u540c\u7684 JSON \u6587\u4ef6 FlubuSettings.{Environment}.Json \uff0c\u5e76\u5728\u9700\u8981\u7684\u673a\u5668\u4e0a \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf 'ASPNETCORE_ENVIRONMENT' \u5373\u53ef\uff1b \u8fd8\u53ef\u4ee5\u6309\u673a\u5668\u540d FlubuSettings.{MachineName}.Json \u521b\u5efa JSON \u914d\u7f6e\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e2d\u7684 MachineName \u4e0e\u672c\u673a\u673a\u5668\u540d\u5339\u914d\uff0cFlubu \u5c06\u81ea\u52a8\u4ece\u8be5\u6587\u4ef6\u4e2d\u8bfb\u53d6\u8bbe\u7f6e\u3002","title":"\u5411\u6784\u5efa\u811a\u672c\u4f20\u9012 JSON \u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e"},{"location":"buildscript-fundamentals/#_17","text":"\u8fd8\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u811a\u672c\u53c2\u6570\u3002\u73af\u5883\u53d8\u91cf\u524d\u5fc5\u987b\u6709\u524d\u7f00 flubu_ \u3002 \u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 Windows \u547d\u4ee4\u884c\u5de5\u5177\u6dfb\u52a0\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff1a set flubu_sn = true \u3002","title":"\u5411\u6784\u5efa\u811a\u672c\u4f20\u9012\u73af\u5883\u53d8\u91cf"},{"location":"buildscript-fundamentals/#json-formember","text":"\u8fd8\u6709\u4e00\u79cd\u66f4\u4e3a\u590d\u6742\u7684\u65b9\u6cd5\u6765\u7ed9\u4efb\u52a1\u4f20\u9012\u63a7\u5236\u53f0\u53c2\u6570\u3001\u8bbe\u7f6e\u548c\u73af\u5883\u53d8\u91cf\uff1a protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"compile\" ) . AddTask ( x => x . CompileSolutionTask () . ForMember ( y => y . SolutionFileName ( \"someSolution.sln\" ), \"solution\" , \"The solution to build.\" )); } \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u9700\u8981\u4f20\u9012\u7684\u65b9\u6cd5\u6216\u5c5e\u6027\u7684\u53c2\u6570\uff0c\u5982\u679c\u5728\u8fd0\u884c\u6784\u5efa\u811a\u672c\u65f6\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\uff1b \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u53c2\u6570\u952e\uff08argument key\uff09\uff1b \u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u53ef\u9009\u7684\uff0c\u5728\u76ee\u6807\u7684\u5e2e\u52a9\u4e2d\u663e\u5f0f\u5e2e\u52a9\u4fe1\u606f\u3002\u5982\u679c\u53c2\u6570\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u663e\u793a\u9ed8\u8ba4\u751f\u6210\u7684\u5e2e\u52a9\u3002 Dotnet flubu compile -solution=someothersolution.sln","title":"\u5411\u4efb\u52a1\u4f20\u9012\u63a7\u5236\u53f0\u53c2\u6570\u3001JSON \u914d\u7f6e\u6587\u4ef6\u7684\u8bbe\u7f6e\uff0c\u4ee5\u53ca\u57fa\u4e8e ForMember \u7684\u73af\u5883\u53d8\u91cf\u3002"},{"location":"buildscript-fundamentals/#_18","text":"\u4f60\u53ef\u4ee5\u83b7\u53d6\u4e0d\u540c\u7684\u6784\u5efa\u7cfb\u7edf\uff08\u5982 Jenkins\u3001TeamCity\u3001AppVeyor\u3001Travis \u7b49\uff09\u7684\u591a\u79cd\u4fe1\u606f\uff0c\u5982\u6784\u5efa\u3002\u63d0\u4ea4\u7b49\u3002 protected override void ConfigureTargets ( ITaskContext context ) { bool isLocalBuild = context . BuildSystems (). IsLocalBuild ; var gitCommitId = context . BuildSystems (). Jenkins (). GitCommitId ; }","title":"\u6784\u5efa\u7cfb\u7edf\u63d0\u4f9b\u8005\u7a0b\u5e8f"},{"location":"buildscript-fundamentals/#_19","text":"OnBuildFailed \u4e8b\u4ef6\uff1a public class BuildScript : DefaultBuildScript { protected override void OnBuildFailed ( ITaskSession session , Exception ex ) { } } \u5728\u76ee\u6807\u6267\u884c\u524d\u540e\u6267\u884c\u7684\u4e8b\u4ef6\uff1a protected override void BeforeTargetExecution ( ITaskContext context ) { } protected override void AfterTargetExecution ( ITaskContext context ) { } \u5728\u6784\u5efa\u6267\u884c\u524d\u540e\u6267\u884c\u7684\u4e8b\u4ef6\uff1a protected override void BeforeBuildExecution ( ITaskContext context ) { } protected override void AfterBuildExecution ( ITaskSession session ) { }","title":"\u6784\u5efa\u4e8b\u4ef6"},{"location":"buildscript-fundamentals/#_20","text":"\u5982\u679c\u90e8\u5206\u7c7b\uff08partial classes\uff09\u548c\u57fa\u7c7b\uff08base classes\uff09\u4f4d\u4e8e\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b\uff0c\u5219\u4f1a\u81ea\u52a8\u52a0\u8f7d\u5b83\u4eec\uff1b\u5426\u5219\uff0c\u5fc5\u987b\u4f7f\u7528 Include \u7279\u6027 \u6765\u6dfb\u52a0\u3002","title":"\u811a\u672c\u4e2d\u7684\u90e8\u5206\u7c7b\u548c\u57fa\u7c7b"},{"location":"execute-script-in-console-app-or-pack-as-global-tool/","text":"You can create global tool by adding below code into your console application. It can just be used as normal console application ofcourse. Debuging your build script is also easier with console application. Add the following code to Program.cs in your console application: public class Program { public static void Main ( string [] args ) { var engine = new FlubuEngine (); engine . RunScript < MyScript >( args ); } } How to create a global tool If you want to execute script directly in a console application it is also recomended to add .flubu file to the root of your repository because when you execute script through console application working folder of the script will be /bin/{BuildConfiguration} and some target's might fail of that because working folder is not correct. When FlubuCore starts to run a build script, it searches .flubu file automatically, and it keeps searching it all the way up through parent directories until that file is found or reached the root directory of current drive. The location where a .flubu file is found will be used as the \"work directory\" during a build process, and a correct \"work directory\" is crucial for us to use relative path in our build scripts. FlubuCore command line tool has an option to help you create .flubu file, simply type flubu setup and answer questions.","title":"Execute script in console app or pack as global tool"},{"location":"flubu-modules/","text":"It is possible to change FlubuCore internal logic by replacing FlubuCore modules through DI. For example logging, target runner, task context etc.. could be changed. public class BuildScript : DefaultBuildScript { public override void ConfigureServices ( IServiceCollection services ) { services . Replace < IFlubuSession , MyFlubuSession >(); } public override void Configure ( ILoggerFactory loggerFactory ) { loggerFactory . AddProvider ( new MyLoggerProvider ()); } }","title":"FlubuCore modules"},{"location":"getting-started/","text":"FlubuCore \u5165\u95e8 \u00b6 .NET core \u7bc7 \u00b6 \u5b89\u88c5 \u00b6 \u6dfb\u52a0\u65b0\u9879\u76ee\u5230\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u5982\uff1aBuildScript\uff1b \u5728\u9879\u76ee\u4e2d\u7528 NuGet \u6dfb\u52a0\u5bf9 FlubuCore \u7684\u5f15\u7528\u3002 \u6216\u4ece FlubuCore \u6a21\u677f\u5b89\u88c5 \u00b6 \u5728\u63a7\u5236\u53f0\u4e2d\u5c06\u5f53\u524d\u76ee\u5f55\u5207\u6362\u5230\u89e3\u51b3\u65b9\u6848\u6240\u5728\u4e4b\u5904\u3002 \u8fd0\u884c dotnet new -i FlubuCore.Template \u8fd0\u884c dotnet new FlubuCore \u8fd9\u4e00\u6b65\u5c06\u4ece FlubuCore \u5f15\u7528\u548c FlubuCore \u811a\u672c\u6a21\u677f\u4e2d\u6dfb\u52a0 BuildScript.csproj \u7528 .NET Core \u7f16\u5199\u5e76\u8fd0\u884c\u7b2c\u4e00\u4e2a\u6784\u5efa\u811a\u672c \u00b6 \u5c06 BuildScript.cs \u6587\u4ef6\u6dfb\u52a0\u5230\u6784\u5efa\u811a\u672c\u9879\u76ee\u4e4b\u4e2d\uff0c\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\u3002 \u4ee5\u4e0b\u4ee3\u7801\u5c06\u7f16\u8bd1\u76ee\u6807\uff08compile target\uff09\u6dfb\u52a0\u5230 flubu \u547d\u4ee4\u4e2d\uff0c\u7f16\u8bd1\u76ee\u6807\u5c06\u7f16\u8bd1\u89e3\u51b3\u65b9\u6848\u3002 public class MyBuildScript : DefaultBuildScript { protected override void ConfigureTargets ( ITaskContext context ) { var compile = context . CreateTarget ( \"compile\" ) . SetDescription ( \"Compiles the solution.\" ) . AddCoreTask ( x => x . Build ( \"FlubuExample.sln\" )); } } \u7528 dotnet CLI \u5de5\u5177\u8fd0\u884c\u6784\u5efa\u811a\u672c \u00b6 \u5c06 dotnet-flubu \u4f5c\u4e3a dotnet \u5de5\u5177\u6dfb\u52a0\u5230 csproj \u6587\u4ef6\u6216 xproj\uff08project.json\uff09\u6587\u4ef6\u4e2d\u3002\u5982\u679c\u4f60\u662f\u4ece\u6a21\u677f\u5b89\u88c5\u7684 FlubuCore\uff0c\u5219\u4e0d\u9700\u8981\u8fd9\u4e2a\u6b65\u9aa4\u3002 csproj: <ItemGroup> <DotNetCliToolReference Include= \"dotnet-flubu\" Version= \"1.7.0\" /> </ItemGroup> project.json: \"tools\" : { \"dotnet-flubu\" : { \"version\" : \"1.7.0\" } } \u8fd0\u884c dotnet restore \u3002\u8fd9\u6761\u547d\u4ee4\u5c06\u8fd8\u539f\uff08restore\uff09 dotnet-flubu \u5305\uff0c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230 dotnet \u5de5\u5177\u547d\u4ee4\u4e2d\u3002 \u8fd0\u884c dotnet flubu help \u3002\u9664\u4e86\u9ed8\u8ba4\u547d\u4ee4\u5916\uff0c\u4f60\u8fd8\u80fd\u770b\u5230\u521a\u624d\u6211\u4eec\u6dfb\u52a0\u8fdb\u53bb\u7684\u7f16\u8bd1\u547d\u4ee4\u3002 \u8fd0\u884c dotnet flubu compile \uff0c\u8fd9\u6761\u547d\u4ee4\u5c06\u7f16\u8bd1\u4f60\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u5728\u5168\u5c40\u5de5\u5177\u4e2d\u8fd0\u884c\u6784\u5efa\u811a\u672c \u00b6 \u5fc5\u987b\u5148\u5b89\u88c5 .net core sdk 2.1.300 \u6216\u66f4\u9ad8\u7248\u672c\uff1b \u5b89\u88c5 FlubuCore \u5168\u5c40\u5de5\u5177\uff1a dotnet tool install --global FlubuCore.Tool \uff1b \u5728\u6784\u5efa\u811a\u672c\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u8fd0\u884c flubu compile \uff0c\u672c\u547d\u4ee4\u5c06\u7f16\u8bd1\u4f60\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u8fd9\u662f\u4e2a\u975e\u5e38\u57fa\u7840\u7684\u6784\u5efa\u811a\u672c\uff0c\u76ee\u7684\u662f\u5e2e\u4f60\u5feb\u901f\u5165\u95e8\u3002FlubuCore \u5df2\u4e3a\u4f60\u63d0\u4f9b\u4e86\u8bb8\u591a\u68d2\u6781\u4e86\u7684\u529f\u80fd\u3002\u4f60\u53ef\u4ee5\u5230 Build script fundamentals \u9605\u8bfb\u66f4\u591a\uff0c\u6216\u8005\u79fb\u6b65 .net core examples \u67e5\u770b\u5927\u591a\u6570\u4e3b\u8981\u529f\u80fd\u7684\u7528\u6cd5\u3002\u540c\u65f6\u5efa\u8bae\u4f60\u67e5\u770b FlubuCore \u4ea4\u4e92\u6a21\u5f0f \u548c \u8986\u76d6\u73b0\u6709\u9009\u9879\u6216\u901a\u8fc7\u63a7\u5236\u53f0\u5411\u4efb\u52a1\u6dfb\u52a0\u5176\u4ed6\u9009\u9879 \u4e00\u8282\u3002 .NET \u7bc7 \u00b6 \u8981\u6c42 \u00b6 \u5f15\u7528 FlubuCore \u7684\u6784\u5efa\u811a\u672c\u9879\u76ee\u5fc5\u987b\u662f .NET Framework 4.6.2 \u6216\u66f4\u9ad8\u3002\u5982\u679c\u8fd9\u4e00\u70b9\u65e0\u6cd5\u505a\u5230\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u4f4e\u4e8e Flubu 2.64 \u7684\u7248\u672c\uff0c\u53ea\u8981\u4f60\u5b89\u88c5\u4e86 .NET Framework 4.0 \u73af\u5883\u3002\u4e3a\u4e86\u8fd0\u884c FlubuCore Runner\uff0c\u4f60\u9700\u8981\u5b89\u88c5 .NET \u8fd0\u884c\u65f6 4.0 \u6216\u66f4\u9ad8\u7684\u7248\u672c\u3002 \u5b89\u88c5 \u00b6 \u6dfb\u52a0\u65b0\u9879\u76ee\u5230\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u5982\uff1aBuildScript\uff1b \u5728\u9879\u76ee\u4e2d\u7528 NuGet \u6dfb\u52a0\u5bf9 FlubuCore.Runner \u7684\u5f15\u7528\u3002\u8fd9\u4e00\u6b65\u5c06\u4f1a\u5f15\u7528 FlubuCore.dll \u5e76\u4f1a\u5c06 BuildScript.cs \u6587\u4ef6\uff08\u6784\u5efa\u811a\u672c\u6a21\u677f\uff09\u6dfb\u52a0\u5230\u9879\u76ee\u4e4b\u4e2d\uff0c\u4e3a\u8fd0\u884c\u811a\u672c\u6dfb\u52a0 flubu.exe\u3002 \u7528 .NET \u7f16\u5199\u5e76\u8fd0\u884c\u7b2c\u4e00\u4e2a\u6784\u5efa\u811a\u672c \u00b6 \u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u4fee\u6539 BuildScript.cs \u6587\u4ef6\uff0c\u5c06\u89e3\u51b3\u65b9\u6848\u7684\u540d\u5b57\u6362\u6210\u4f60\u7684\u3002 \u4ee5\u4e0b\u4ee3\u7801\u5c06\u7f16\u8bd1\u76ee\u6807\uff08compile target\uff09\u6dfb\u52a0\u5230 flubu \u5bc6\u4ee4\u4e2d\uff0c\u7f16\u8bd1\u76ee\u6807\u5c06\u7f16\u8bd1\u89e3\u51b3\u65b9\u6848\u3002 using FlubuCore.Context ; using FlubuCore.Scripting ; public class BuildScript : DefaultBuildScript { protected override void ConfigureBuildProperties ( IBuildPropertiesContext context ) { context . Properties . Set ( BuildProps . ProductId , \"FlubuExample\" ); context . Properties . Set ( BuildProps . ProductName , \"FlubuExample\" ); context . Properties . Set ( BuildProps . SolutionFileName , \"FlubuExample.sln\" ); context . Properties . Set ( BuildProps . BuildConfiguration , \"Release\" ); } protected override void ConfigureTargets ( ITaskContext session ) { var compile = session . CreateTarget ( \"compile\" ) . SetDescription ( \"Compiles the solution.\" ) . AddTask ( x => x . CompileSolutionTask ()); } } \u8fd0\u884c\u6784\u5efa\u811a\u672c \u00b6 \u6253\u5f00\u63a7\u5236\u53f0\u7a0b\u5e8f\uff08cmd\uff09\u5e76\u5c06\u5f53\u524d\u76ee\u5f55\u5bfc\u822a\u5230\u6784\u5efa\u811a\u672c\u9879\u76ee\u6240\u5728\u4e4b\u5904\uff1b \u8fd0\u884c flubu.exe help\u3002\u9664\u4e86\u9ed8\u8ba4\u547d\u4ee4\u5916\uff0c\u4f60\u8fd8\u80fd\u770b\u5230\u521a\u624d\u6211\u4eec\u6dfb\u52a0\u8fdb\u53bb\u7684\u7f16\u8bd1\u547d\u4ee4\u3002 \u8fd0\u884c flubu.exe compile\uff0c\u8be5\u547d\u4ee4\u5c06\u7f16\u8bd1\u4f60\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u8fd9\u662f\u4e2a\u975e\u5e38\u57fa\u7840\u7684\u6784\u5efa\u811a\u672c\uff0c\u76ee\u7684\u662f\u5e2e\u4f60\u5feb\u901f\u5165\u95e8\u3002FlubuCore \u5df2\u4e3a\u4f60\u63d0\u4f9b\u4e86\u8bb8\u591a\u68d2\u6781\u4e86\u7684\u529f\u80fd\u3002\u4f60\u53ef\u4ee5\u5230 Build script fundamentals \u9605\u8bfb\u66f4\u591a\uff0c\u6216\u8005\u79fb\u6b65 .net examples \u67e5\u770b\u5927\u591a\u6570\u4e3b\u8981\u529f\u80fd\u7684\u7528\u6cd5\u3002","title":"\u5165\u95e8"},{"location":"getting-started/#flubucore","text":"","title":"FlubuCore \u5165\u95e8"},{"location":"getting-started/#net-core","text":"","title":".NET core \u7bc7"},{"location":"getting-started/#_1","text":"\u6dfb\u52a0\u65b0\u9879\u76ee\u5230\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u5982\uff1aBuildScript\uff1b \u5728\u9879\u76ee\u4e2d\u7528 NuGet \u6dfb\u52a0\u5bf9 FlubuCore \u7684\u5f15\u7528\u3002","title":"\u5b89\u88c5"},{"location":"getting-started/#flubucore_1","text":"\u5728\u63a7\u5236\u53f0\u4e2d\u5c06\u5f53\u524d\u76ee\u5f55\u5207\u6362\u5230\u89e3\u51b3\u65b9\u6848\u6240\u5728\u4e4b\u5904\u3002 \u8fd0\u884c dotnet new -i FlubuCore.Template \u8fd0\u884c dotnet new FlubuCore \u8fd9\u4e00\u6b65\u5c06\u4ece FlubuCore \u5f15\u7528\u548c FlubuCore \u811a\u672c\u6a21\u677f\u4e2d\u6dfb\u52a0 BuildScript.csproj","title":"\u6216\u4ece FlubuCore \u6a21\u677f\u5b89\u88c5"},{"location":"getting-started/#net-core_1","text":"\u5c06 BuildScript.cs \u6587\u4ef6\u6dfb\u52a0\u5230\u6784\u5efa\u811a\u672c\u9879\u76ee\u4e4b\u4e2d\uff0c\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\u3002 \u4ee5\u4e0b\u4ee3\u7801\u5c06\u7f16\u8bd1\u76ee\u6807\uff08compile target\uff09\u6dfb\u52a0\u5230 flubu \u547d\u4ee4\u4e2d\uff0c\u7f16\u8bd1\u76ee\u6807\u5c06\u7f16\u8bd1\u89e3\u51b3\u65b9\u6848\u3002 public class MyBuildScript : DefaultBuildScript { protected override void ConfigureTargets ( ITaskContext context ) { var compile = context . CreateTarget ( \"compile\" ) . SetDescription ( \"Compiles the solution.\" ) . AddCoreTask ( x => x . Build ( \"FlubuExample.sln\" )); } }","title":"\u7528 .NET Core \u7f16\u5199\u5e76\u8fd0\u884c\u7b2c\u4e00\u4e2a\u6784\u5efa\u811a\u672c"},{"location":"getting-started/#dotnet-cli","text":"\u5c06 dotnet-flubu \u4f5c\u4e3a dotnet \u5de5\u5177\u6dfb\u52a0\u5230 csproj \u6587\u4ef6\u6216 xproj\uff08project.json\uff09\u6587\u4ef6\u4e2d\u3002\u5982\u679c\u4f60\u662f\u4ece\u6a21\u677f\u5b89\u88c5\u7684 FlubuCore\uff0c\u5219\u4e0d\u9700\u8981\u8fd9\u4e2a\u6b65\u9aa4\u3002 csproj: <ItemGroup> <DotNetCliToolReference Include= \"dotnet-flubu\" Version= \"1.7.0\" /> </ItemGroup> project.json: \"tools\" : { \"dotnet-flubu\" : { \"version\" : \"1.7.0\" } } \u8fd0\u884c dotnet restore \u3002\u8fd9\u6761\u547d\u4ee4\u5c06\u8fd8\u539f\uff08restore\uff09 dotnet-flubu \u5305\uff0c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230 dotnet \u5de5\u5177\u547d\u4ee4\u4e2d\u3002 \u8fd0\u884c dotnet flubu help \u3002\u9664\u4e86\u9ed8\u8ba4\u547d\u4ee4\u5916\uff0c\u4f60\u8fd8\u80fd\u770b\u5230\u521a\u624d\u6211\u4eec\u6dfb\u52a0\u8fdb\u53bb\u7684\u7f16\u8bd1\u547d\u4ee4\u3002 \u8fd0\u884c dotnet flubu compile \uff0c\u8fd9\u6761\u547d\u4ee4\u5c06\u7f16\u8bd1\u4f60\u7684\u89e3\u51b3\u65b9\u6848\u3002","title":"\u7528 dotnet CLI \u5de5\u5177\u8fd0\u884c\u6784\u5efa\u811a\u672c"},{"location":"getting-started/#_2","text":"\u5fc5\u987b\u5148\u5b89\u88c5 .net core sdk 2.1.300 \u6216\u66f4\u9ad8\u7248\u672c\uff1b \u5b89\u88c5 FlubuCore \u5168\u5c40\u5de5\u5177\uff1a dotnet tool install --global FlubuCore.Tool \uff1b \u5728\u6784\u5efa\u811a\u672c\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u8fd0\u884c flubu compile \uff0c\u672c\u547d\u4ee4\u5c06\u7f16\u8bd1\u4f60\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u8fd9\u662f\u4e2a\u975e\u5e38\u57fa\u7840\u7684\u6784\u5efa\u811a\u672c\uff0c\u76ee\u7684\u662f\u5e2e\u4f60\u5feb\u901f\u5165\u95e8\u3002FlubuCore \u5df2\u4e3a\u4f60\u63d0\u4f9b\u4e86\u8bb8\u591a\u68d2\u6781\u4e86\u7684\u529f\u80fd\u3002\u4f60\u53ef\u4ee5\u5230 Build script fundamentals \u9605\u8bfb\u66f4\u591a\uff0c\u6216\u8005\u79fb\u6b65 .net core examples \u67e5\u770b\u5927\u591a\u6570\u4e3b\u8981\u529f\u80fd\u7684\u7528\u6cd5\u3002\u540c\u65f6\u5efa\u8bae\u4f60\u67e5\u770b FlubuCore \u4ea4\u4e92\u6a21\u5f0f \u548c \u8986\u76d6\u73b0\u6709\u9009\u9879\u6216\u901a\u8fc7\u63a7\u5236\u53f0\u5411\u4efb\u52a1\u6dfb\u52a0\u5176\u4ed6\u9009\u9879 \u4e00\u8282\u3002","title":"\u5728\u5168\u5c40\u5de5\u5177\u4e2d\u8fd0\u884c\u6784\u5efa\u811a\u672c"},{"location":"getting-started/#net","text":"","title":".NET \u7bc7"},{"location":"getting-started/#_3","text":"\u5f15\u7528 FlubuCore \u7684\u6784\u5efa\u811a\u672c\u9879\u76ee\u5fc5\u987b\u662f .NET Framework 4.6.2 \u6216\u66f4\u9ad8\u3002\u5982\u679c\u8fd9\u4e00\u70b9\u65e0\u6cd5\u505a\u5230\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u4f4e\u4e8e Flubu 2.64 \u7684\u7248\u672c\uff0c\u53ea\u8981\u4f60\u5b89\u88c5\u4e86 .NET Framework 4.0 \u73af\u5883\u3002\u4e3a\u4e86\u8fd0\u884c FlubuCore Runner\uff0c\u4f60\u9700\u8981\u5b89\u88c5 .NET \u8fd0\u884c\u65f6 4.0 \u6216\u66f4\u9ad8\u7684\u7248\u672c\u3002","title":"\u8981\u6c42"},{"location":"getting-started/#_4","text":"\u6dfb\u52a0\u65b0\u9879\u76ee\u5230\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u5982\uff1aBuildScript\uff1b \u5728\u9879\u76ee\u4e2d\u7528 NuGet \u6dfb\u52a0\u5bf9 FlubuCore.Runner \u7684\u5f15\u7528\u3002\u8fd9\u4e00\u6b65\u5c06\u4f1a\u5f15\u7528 FlubuCore.dll \u5e76\u4f1a\u5c06 BuildScript.cs \u6587\u4ef6\uff08\u6784\u5efa\u811a\u672c\u6a21\u677f\uff09\u6dfb\u52a0\u5230\u9879\u76ee\u4e4b\u4e2d\uff0c\u4e3a\u8fd0\u884c\u811a\u672c\u6dfb\u52a0 flubu.exe\u3002","title":"\u5b89\u88c5"},{"location":"getting-started/#net_1","text":"\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u4fee\u6539 BuildScript.cs \u6587\u4ef6\uff0c\u5c06\u89e3\u51b3\u65b9\u6848\u7684\u540d\u5b57\u6362\u6210\u4f60\u7684\u3002 \u4ee5\u4e0b\u4ee3\u7801\u5c06\u7f16\u8bd1\u76ee\u6807\uff08compile target\uff09\u6dfb\u52a0\u5230 flubu \u5bc6\u4ee4\u4e2d\uff0c\u7f16\u8bd1\u76ee\u6807\u5c06\u7f16\u8bd1\u89e3\u51b3\u65b9\u6848\u3002 using FlubuCore.Context ; using FlubuCore.Scripting ; public class BuildScript : DefaultBuildScript { protected override void ConfigureBuildProperties ( IBuildPropertiesContext context ) { context . Properties . Set ( BuildProps . ProductId , \"FlubuExample\" ); context . Properties . Set ( BuildProps . ProductName , \"FlubuExample\" ); context . Properties . Set ( BuildProps . SolutionFileName , \"FlubuExample.sln\" ); context . Properties . Set ( BuildProps . BuildConfiguration , \"Release\" ); } protected override void ConfigureTargets ( ITaskContext session ) { var compile = session . CreateTarget ( \"compile\" ) . SetDescription ( \"Compiles the solution.\" ) . AddTask ( x => x . CompileSolutionTask ()); } }","title":"\u7528 .NET \u7f16\u5199\u5e76\u8fd0\u884c\u7b2c\u4e00\u4e2a\u6784\u5efa\u811a\u672c"},{"location":"getting-started/#_5","text":"\u6253\u5f00\u63a7\u5236\u53f0\u7a0b\u5e8f\uff08cmd\uff09\u5e76\u5c06\u5f53\u524d\u76ee\u5f55\u5bfc\u822a\u5230\u6784\u5efa\u811a\u672c\u9879\u76ee\u6240\u5728\u4e4b\u5904\uff1b \u8fd0\u884c flubu.exe help\u3002\u9664\u4e86\u9ed8\u8ba4\u547d\u4ee4\u5916\uff0c\u4f60\u8fd8\u80fd\u770b\u5230\u521a\u624d\u6211\u4eec\u6dfb\u52a0\u8fdb\u53bb\u7684\u7f16\u8bd1\u547d\u4ee4\u3002 \u8fd0\u884c flubu.exe compile\uff0c\u8be5\u547d\u4ee4\u5c06\u7f16\u8bd1\u4f60\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u8fd9\u662f\u4e2a\u975e\u5e38\u57fa\u7840\u7684\u6784\u5efa\u811a\u672c\uff0c\u76ee\u7684\u662f\u5e2e\u4f60\u5feb\u901f\u5165\u95e8\u3002FlubuCore \u5df2\u4e3a\u4f60\u63d0\u4f9b\u4e86\u8bb8\u591a\u68d2\u6781\u4e86\u7684\u529f\u80fd\u3002\u4f60\u53ef\u4ee5\u5230 Build script fundamentals \u9605\u8bfb\u66f4\u591a\uff0c\u6216\u8005\u79fb\u6b65 .net examples \u67e5\u770b\u5927\u591a\u6570\u4e3b\u8981\u529f\u80fd\u7684\u7528\u6cd5\u3002","title":"\u8fd0\u884c\u6784\u5efa\u811a\u672c"},{"location":"override-add-options/","text":"FlubuCore \u5141\u8bb8\u5728\u8fd0\u884c\u5916\u90e8\u7a0b\u5e8f\uff08external processes\uff09\u7684**\u6240\u6709**\u4efb\u52a1\u4e2d\u6dfb\u52a0\u6216\u8986\u76d6\u9009\u9879\u3002 \u5047\u8bbe\u4f60\u6709\u4e00\u4e2a target context . CreateTarget ( \"Example\" ) ` . AddCoreTask ( x => x . Build ( \"MySolution.sln\" ). Configuration ( \"Release\" ); \u5e76\u4e14\u4f60\u4e0d\u60f3\u5728\u8c03\u8bd5\u914d\u7f6e\u4e2d\u6784\u5efa\u89e3\u51b3\u65b9\u6848\u3002 \u4f60\u53ef\u4ee5\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u4e2d\u8f93\u5165\uff1a flubu example --configuration=Debug FlubuCore \u5c06\u6267\u884c\uff1a dotnet build MySolution.sln --configuration Debug Note \u5982\u679c\u9009\u9879\u7684 key \u4e0e\u5916\u90e8\u7a0b\u5e8f\u7684\u4e00\u6837\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u5bf9\u5e94\u7684\u7b80\u77ed\u7248\u672c\u7684 key\u3002\u56e0\u6b64\u5728\u4e0a\u4f8b\u4e2d\uff0c -c = debug \u4e5f\u662f\u53ef\u4ee5\u7684\u3002 FlubuCore \u8fd8\u652f\u6301\u5728 \u4ea4\u4e92\u6a21\u5f0f \u4e2d\u901a\u8fc7 Tab \u952e\u6765\u81ea\u52a8\u8865\u5168\u4fe1\u606f\u3002 Tasks in FlubuCore plugins that does not support overriding of options out of the box can still be overriden with special prefix before option key /o: /o:{external_process_option}={value} /o: \u4f1a\u4e3a FlubuCore \u76ee\u6807\u4e2d\u6240\u6709\u4efb\u52a1\u6dfb\u52a0\u7f6e\u9876\u9009\u9879\u3002\u5982\u679c\u76ee\u6807\u6267\u884c\u591a\u4e2a\u4efb\u52a1\uff0c\u90a3\u4e48\u8fd9\u53ef\u80fd\u662f\u4e2a\u95ee\u9898\uff0c\u6240\u4ee5 /{taskName}:{external_process_option}={value} \u4f60\u4e5f\u53ef\u4ee5\u4fee\u6539\u4efb\u52a1\u7684\u9ed8\u8ba4\u524d\u7f00\uff08default prefix\uff09\uff1a context . CreateTarget ( \"Publish\" ) AddCoreTask ( x => x . Publish () . ChangeDefaultAdditionalOptionPrefix ( \"/p:\" )); \u793a\u4f8b \u00b6 \u5047\u8bbe\u521b\u5efa\u4e86\u76ee\u6807\uff08target\uff09\uff1a context . CreateTarget ( \"Example\" ) ` . AddCoreTask ( x => x . Build ( \"MySolution.sln\" ). Configuration ( \"Release\" ); \u4f60\u4e0d\u60f3\u5728\u8c03\u8bd5\u914d\u7f6e\uff08debug configuration\uff09\u4e2d\u6784\u5efa\u89e3\u51b3\u65b9\u6848, \u4f60\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u4e2d\u5199 flubu build /o:configuration=Debug \u6216 flubu build /o:c=Debug \u6216 flubu build /build:c=Debug flubu \u5c06\u6267\u884c dotnet build MySolution.sln -c Debug","title":"\u8986\u76d6\u73b0\u6709\u9009\u9879\u6216\u901a\u8fc7\u63a7\u5236\u53f0\u5411\u4efb\u52a1\u6dfb\u52a0\u5176\u4ed6\u9009\u9879"},{"location":"override-add-options/#_1","text":"\u5047\u8bbe\u521b\u5efa\u4e86\u76ee\u6807\uff08target\uff09\uff1a context . CreateTarget ( \"Example\" ) ` . AddCoreTask ( x => x . Build ( \"MySolution.sln\" ). Configuration ( \"Release\" ); \u4f60\u4e0d\u60f3\u5728\u8c03\u8bd5\u914d\u7f6e\uff08debug configuration\uff09\u4e2d\u6784\u5efa\u89e3\u51b3\u65b9\u6848, \u4f60\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u4e2d\u5199 flubu build /o:configuration=Debug \u6216 flubu build /o:c=Debug \u6216 flubu build /build:c=Debug flubu \u5c06\u6267\u884c dotnet build MySolution.sln -c Debug","title":"\u793a\u4f8b"},{"location":"referencing-external-assemblies/","text":"\u5728\u6784\u5efa\u811a\u672c\u4e2d\u5f15\u7528\u5916\u90e8\u7a0b\u5e8f\u96c6 \u00b6 FlubuCore \u4f1a\u81ea\u52a8\u4ece\u6784\u5efa\u811a\u672c\u7684 csproj \u6587\u4ef6\u4e2d\u52a0\u8f7d\u6240\u6709\u7a0b\u5e8f\u96c6\u5f15\u7528\uff08assemblies references\uff09\u548c nuget \u5305\u3002csproj \u6587\u4ef6\u5fc5\u987b\u4f4d\u4e8e \u6307\u5b9a\u4f4d\u7f6e \u3002\u5982\u679c\u4e0d\u662f\u7a0b\u5e8f\u96c6\u5f15\u7528\u548c nuget \u5f15\u7528\u7684\u8bdd\uff0cFlubuCore \u5c31\u4e0d\u4f1a\u5728\u6267\u884c\u65f6\u81ea\u52a8\u52a0\u8f7d\u5b83\u4eec\u3002 Note \u4f60\u53ef\u4ee5\u5728\u6784\u5efa\u811a\u672c\u4e2d\u901a\u8fc7\u6dfb\u52a0\u7279\u6027\uff08attribute\uff09\u7684\u65b9\u5f0f\u7981\u7528\u5f15\u7528\u7a0b\u5e8f\u96c6\u548c nuget \u5305\u3002 [DisableLoadScriptReferencesAutomatically] public class BuildScript : DefaultBuildScript { } \u6216\u8005\uff0c\u5f53\u4f60\u8fd0\u884c\u65e0 csproj \u7684\u811a\u672c\uff08\u6bd4\u5982\u90e8\u7f72\u811a\u672c\uff09\u65f6\uff0c\u5916\u90e8\u5f15\u7528\uff08external references\uff09\u53ef\u4ee5\u901a\u8fc7\u4e09\u79cd\u65b9\u5f0f\u7528\u6307\u4ee4\u6765\u6dfb\u52a0\uff1a \u901a\u8fc7\u7a0b\u5e8f\u96c6\u7684\u76f8\u5bf9\u8def\u5f84\u6216\u5b8c\u6574\u8def\u5f84 \u00b6 \u5728\u6784\u5efa\u811a\u672c\u7c7b\u4e0a\uff0c\u4f60\u5f97\u6dfb\u52a0\u7279\u6027\uff08attribute\uff09\uff1a [Assembly(@\".\\packages\\Newtonsoft.Json.9.0.1\\lib\\net45\\Newtonsoft.Json.dll\")] public class BuildScript : DefaultBuildScript { public void ReferencedAssemlby ( ITaskContext context ) { JsonConvert . SerializeObject ( \"Example\" ); } } FlubuCore \u8fd8\u53ef\u4ee5\u4ece\u6307\u5b9a\u7684\u76ee\u5f55\u4ef7\u5728\u6240\u6709\u7a0b\u5e8f\u96c6\uff0c\u4e5f\u53ef\u4ee5\u4ece\u5176\u5b50\u76ee\u5f55\uff08subdirectories\uff09\u4e2d\u52a0\u8f7d [AssemblyFromDirectory(@\".\\Packages\", true)] public class BuildScript : DefaultBuildScript { } \u5f15\u7528 NuGet \u5305 \u00b6 Flubu \u652f\u6301\u5f15\u7528 NuGet \u5305\u3002\u5982\u679c\u4f60\u60f3\u5f15\u7528 NuGet \u5305\uff0c\u4f60\u5fc5\u987b\u5148\u5b89\u88c5 .NET Core SDK \u6216 msbuild\uff0c\u5426\u5219\u5b83\u4eec\uff08NuGet \u5305\uff09\u5c06\u65e0\u6cd5\u8fd8\u539f\uff08restore\uff09\u3002 \u4f60\u5fc5\u987b\u5728\u811a\u672c\u7684\u7c7b\u4e0a\u6dfb\u52a0 NuGetPackage \u7279\u6027\uff1a [NugetPackage(\"Newtonsoftjson\", \"11.0.2\")] public class BuildScript : DefaultBuildScript { public void ReferencedNugetPackage ( ITaskContext context ) { JsonConvert . SerializeObject ( \"Example\" ); } } \u6309\u7a0b\u5e8f\u96c6\u540d\u79f0\u52a0\u8f7d \u00b6 FlubuCore \u53ef\u4ee5\u901a\u8fc7\u5b8c\u5168\u9650\u5b9a\u7a0b\u5e8f\u96c6\u540d\uff08fully qualifed assemlby name\uff09\u7684\u65b9\u5f0f\u52a0\u8f7d\u7cfb\u7edf\u7a0b\u5e8f\u96c6\uff08system assemblies\uff09\u3002 \u9006\u5e8f\u6bd4\u5728\u811a\u672c\u7c7b\u4e0a\u6dfb\u52a0 Reference \u7279\u6027\uff08attribute\uff09\uff1a [Reference(\"System.Xml.XmlDocument, System.Xml, Version=4.0.0.0, Culture=neutral, publicKeyToken=b77a5c561934e089\")] public class BuildScript : DefaultBuildScript { public void ReferencedAssemlby ( ITaskContext context ) { XmlDocument xml = new XmlDocument (); } } \u83b7\u53d6\u5b8c\u5168\u9650\u5b9a\u7a0b\u5e8f\u96c6\u540d\uff08fully qualifed assembly name\uff09\u7684\u4e00\u79cd\u65b9\u5f0f\uff1a 1 var fullQualifedAssemblyName = typeof(XmlDocument).Assembly.FullName; \u4ece\u76ee\u5f55\u4e2d\u52a0\u8f7d\u6240\u6709\u7a0b\u5e8f\u96c6 \u00b6 \u5373\u4fbf\u4f60\u6ca1\u6709\u5c06\u811a\u672c\u4e0e csproj \u4e00\u9053\u4f7f\u7528\uff0cFlubuCore \u4e5f\u53ef\u4ee5\u4ece\u76ee\u5f55\u4e2d\u81ea\u52a8\u52a0\u8f7d\u6240\u6709\u5916\u90e8\u7a0b\u5e8f\u96c6\uff08external assemblies\uff09\uff08\u5b50\u76ee\u5f55\uff08subdirectories\uff09\u4e2d\u7684\u7a0b\u5e8f\u96c6\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e00\u5e76\u88ab\u52a0\u8f7d\uff09\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cFlubuCore \u4f1a\u4ece FlubuLib \u76ee\u5f55\u4e0b\u52a0\u8f7d\u6240\u6709\u7a0b\u5e8f\u96c6\u3002\u53ea\u8981\u5728 flubu runner \u6240\u5728\u7684\u4f4d\u7f6e\u4e0b\u521b\u5efa\u76ee\u5f55\uff0c\u5e76\u5c06\u7a0b\u5e8f\u96c6\u521a\u5728\u8be5\u76ee\u5f55\u4e4b\u4e2d\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728 flubu runner \u4e2d\u6307\u660e\u4ece\u90a3\u4e2a\u76ee\u5f55\u52a0\u8f7d\u7a0b\u5e8f\u96c6\uff1a flubu.exe -ass=somedirectory dotnet flubu -ass=somedirectory \u6216\u8005\u4f60\u53ef\u4ee5\u901a\u8fc7\u7ed9 flubusettings.json \u6587\u4ef6\u7684 ass \u8bbe\u7f6e\u4e00\u4e2a\u503c\uff1a 1 2 3 4 { \"ass\" : \"someDirectory\", \"SomeOtherKey\" : \"SomeOtherValue\" }` \u5c06\u5176\u5b83 .cs \u6587\u4ef6\u52a0\u5230\u811a\u672c\u4e2d \u00b6 \u5176\u5b83 .cs \u6587\u4ef6\u5fc5\u987b\u5148\u6dfb\u52a0\u7279\u6027\uff08attribute\uff09\uff0c\u5b83\u4eec\u4e0d\u4f1a\u88ab\u81ea\u52a8\u5730\u4ece\u6784\u5efa\u811a\u672c\u7684\u9879\u76ee\u6587\u4ef6\u4e2d\u52a0\u8f7d\u3002\u9664\u975e\u5df2\u7ecf\u81ea\u52a8\u52a0\u8f7d\u8fc7\u6784\u5efa\u811a\u672c\u7684\u57fa\u7c7b\u6216\u90e8\u5206\u7c7b\u3002 [Include(@\".\\BuildHelper.cs\")] public class BuildScript : DefaultBuildScript { public void Example ( ITaskContext context ) { BuildHelper . SomeMethod (); } } FlubuCore \u8fd8\u53ef\u4ee5\u4ece\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\u52a0\u8f7d\u6240\u6709\u7684 .cs \u6587\u4ef6\u5230\u811a\u672c\u4e2d\uff08\u4e5f\u53ef\u4ee5\u9009\u62e9\u5c06\u8be5\u76ee\u5f55\u4e0b\u7684\u5b50\u6587\u4ef6\u5939\u4e2d\u7684 .cs \u6587\u4ef6\u4e00\u5e76\u52a0\u8f7d\uff09\u3002 [IncludeFromDirectory(@\".\\Helpers\", true)] public class BuildScript : DefaultBuildScript { }","title":"\u5728\u6784\u5efa\u811a\u672c\u4e2d\u5f15\u7528\u5916\u90e8\u7a0b\u5e8f\u96c6"},{"location":"referencing-external-assemblies/#_1","text":"FlubuCore \u4f1a\u81ea\u52a8\u4ece\u6784\u5efa\u811a\u672c\u7684 csproj \u6587\u4ef6\u4e2d\u52a0\u8f7d\u6240\u6709\u7a0b\u5e8f\u96c6\u5f15\u7528\uff08assemblies references\uff09\u548c nuget \u5305\u3002csproj \u6587\u4ef6\u5fc5\u987b\u4f4d\u4e8e \u6307\u5b9a\u4f4d\u7f6e \u3002\u5982\u679c\u4e0d\u662f\u7a0b\u5e8f\u96c6\u5f15\u7528\u548c nuget \u5f15\u7528\u7684\u8bdd\uff0cFlubuCore \u5c31\u4e0d\u4f1a\u5728\u6267\u884c\u65f6\u81ea\u52a8\u52a0\u8f7d\u5b83\u4eec\u3002 Note \u4f60\u53ef\u4ee5\u5728\u6784\u5efa\u811a\u672c\u4e2d\u901a\u8fc7\u6dfb\u52a0\u7279\u6027\uff08attribute\uff09\u7684\u65b9\u5f0f\u7981\u7528\u5f15\u7528\u7a0b\u5e8f\u96c6\u548c nuget \u5305\u3002 [DisableLoadScriptReferencesAutomatically] public class BuildScript : DefaultBuildScript { } \u6216\u8005\uff0c\u5f53\u4f60\u8fd0\u884c\u65e0 csproj \u7684\u811a\u672c\uff08\u6bd4\u5982\u90e8\u7f72\u811a\u672c\uff09\u65f6\uff0c\u5916\u90e8\u5f15\u7528\uff08external references\uff09\u53ef\u4ee5\u901a\u8fc7\u4e09\u79cd\u65b9\u5f0f\u7528\u6307\u4ee4\u6765\u6dfb\u52a0\uff1a","title":"\u5728\u6784\u5efa\u811a\u672c\u4e2d\u5f15\u7528\u5916\u90e8\u7a0b\u5e8f\u96c6"},{"location":"referencing-external-assemblies/#_2","text":"\u5728\u6784\u5efa\u811a\u672c\u7c7b\u4e0a\uff0c\u4f60\u5f97\u6dfb\u52a0\u7279\u6027\uff08attribute\uff09\uff1a [Assembly(@\".\\packages\\Newtonsoft.Json.9.0.1\\lib\\net45\\Newtonsoft.Json.dll\")] public class BuildScript : DefaultBuildScript { public void ReferencedAssemlby ( ITaskContext context ) { JsonConvert . SerializeObject ( \"Example\" ); } } FlubuCore \u8fd8\u53ef\u4ee5\u4ece\u6307\u5b9a\u7684\u76ee\u5f55\u4ef7\u5728\u6240\u6709\u7a0b\u5e8f\u96c6\uff0c\u4e5f\u53ef\u4ee5\u4ece\u5176\u5b50\u76ee\u5f55\uff08subdirectories\uff09\u4e2d\u52a0\u8f7d [AssemblyFromDirectory(@\".\\Packages\", true)] public class BuildScript : DefaultBuildScript { }","title":"\u901a\u8fc7\u7a0b\u5e8f\u96c6\u7684\u76f8\u5bf9\u8def\u5f84\u6216\u5b8c\u6574\u8def\u5f84"},{"location":"referencing-external-assemblies/#nuget","text":"Flubu \u652f\u6301\u5f15\u7528 NuGet \u5305\u3002\u5982\u679c\u4f60\u60f3\u5f15\u7528 NuGet \u5305\uff0c\u4f60\u5fc5\u987b\u5148\u5b89\u88c5 .NET Core SDK \u6216 msbuild\uff0c\u5426\u5219\u5b83\u4eec\uff08NuGet \u5305\uff09\u5c06\u65e0\u6cd5\u8fd8\u539f\uff08restore\uff09\u3002 \u4f60\u5fc5\u987b\u5728\u811a\u672c\u7684\u7c7b\u4e0a\u6dfb\u52a0 NuGetPackage \u7279\u6027\uff1a [NugetPackage(\"Newtonsoftjson\", \"11.0.2\")] public class BuildScript : DefaultBuildScript { public void ReferencedNugetPackage ( ITaskContext context ) { JsonConvert . SerializeObject ( \"Example\" ); } }","title":"\u5f15\u7528 NuGet \u5305"},{"location":"referencing-external-assemblies/#_3","text":"FlubuCore \u53ef\u4ee5\u901a\u8fc7\u5b8c\u5168\u9650\u5b9a\u7a0b\u5e8f\u96c6\u540d\uff08fully qualifed assemlby name\uff09\u7684\u65b9\u5f0f\u52a0\u8f7d\u7cfb\u7edf\u7a0b\u5e8f\u96c6\uff08system assemblies\uff09\u3002 \u9006\u5e8f\u6bd4\u5728\u811a\u672c\u7c7b\u4e0a\u6dfb\u52a0 Reference \u7279\u6027\uff08attribute\uff09\uff1a [Reference(\"System.Xml.XmlDocument, System.Xml, Version=4.0.0.0, Culture=neutral, publicKeyToken=b77a5c561934e089\")] public class BuildScript : DefaultBuildScript { public void ReferencedAssemlby ( ITaskContext context ) { XmlDocument xml = new XmlDocument (); } } \u83b7\u53d6\u5b8c\u5168\u9650\u5b9a\u7a0b\u5e8f\u96c6\u540d\uff08fully qualifed assembly name\uff09\u7684\u4e00\u79cd\u65b9\u5f0f\uff1a 1 var fullQualifedAssemblyName = typeof(XmlDocument).Assembly.FullName;","title":"\u6309\u7a0b\u5e8f\u96c6\u540d\u79f0\u52a0\u8f7d"},{"location":"referencing-external-assemblies/#_4","text":"\u5373\u4fbf\u4f60\u6ca1\u6709\u5c06\u811a\u672c\u4e0e csproj \u4e00\u9053\u4f7f\u7528\uff0cFlubuCore \u4e5f\u53ef\u4ee5\u4ece\u76ee\u5f55\u4e2d\u81ea\u52a8\u52a0\u8f7d\u6240\u6709\u5916\u90e8\u7a0b\u5e8f\u96c6\uff08external assemblies\uff09\uff08\u5b50\u76ee\u5f55\uff08subdirectories\uff09\u4e2d\u7684\u7a0b\u5e8f\u96c6\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e00\u5e76\u88ab\u52a0\u8f7d\uff09\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cFlubuCore \u4f1a\u4ece FlubuLib \u76ee\u5f55\u4e0b\u52a0\u8f7d\u6240\u6709\u7a0b\u5e8f\u96c6\u3002\u53ea\u8981\u5728 flubu runner \u6240\u5728\u7684\u4f4d\u7f6e\u4e0b\u521b\u5efa\u76ee\u5f55\uff0c\u5e76\u5c06\u7a0b\u5e8f\u96c6\u521a\u5728\u8be5\u76ee\u5f55\u4e4b\u4e2d\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728 flubu runner \u4e2d\u6307\u660e\u4ece\u90a3\u4e2a\u76ee\u5f55\u52a0\u8f7d\u7a0b\u5e8f\u96c6\uff1a flubu.exe -ass=somedirectory dotnet flubu -ass=somedirectory \u6216\u8005\u4f60\u53ef\u4ee5\u901a\u8fc7\u7ed9 flubusettings.json \u6587\u4ef6\u7684 ass \u8bbe\u7f6e\u4e00\u4e2a\u503c\uff1a 1 2 3 4 { \"ass\" : \"someDirectory\", \"SomeOtherKey\" : \"SomeOtherValue\" }`","title":"\u4ece\u76ee\u5f55\u4e2d\u52a0\u8f7d\u6240\u6709\u7a0b\u5e8f\u96c6"},{"location":"referencing-external-assemblies/#cs","text":"\u5176\u5b83 .cs \u6587\u4ef6\u5fc5\u987b\u5148\u6dfb\u52a0\u7279\u6027\uff08attribute\uff09\uff0c\u5b83\u4eec\u4e0d\u4f1a\u88ab\u81ea\u52a8\u5730\u4ece\u6784\u5efa\u811a\u672c\u7684\u9879\u76ee\u6587\u4ef6\u4e2d\u52a0\u8f7d\u3002\u9664\u975e\u5df2\u7ecf\u81ea\u52a8\u52a0\u8f7d\u8fc7\u6784\u5efa\u811a\u672c\u7684\u57fa\u7c7b\u6216\u90e8\u5206\u7c7b\u3002 [Include(@\".\\BuildHelper.cs\")] public class BuildScript : DefaultBuildScript { public void Example ( ITaskContext context ) { BuildHelper . SomeMethod (); } } FlubuCore \u8fd8\u53ef\u4ee5\u4ece\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\u52a0\u8f7d\u6240\u6709\u7684 .cs \u6587\u4ef6\u5230\u811a\u672c\u4e2d\uff08\u4e5f\u53ef\u4ee5\u9009\u62e9\u5c06\u8be5\u76ee\u5f55\u4e0b\u7684\u5b50\u6587\u4ef6\u5939\u4e2d\u7684 .cs \u6587\u4ef6\u4e00\u5e76\u52a0\u8f7d\uff09\u3002 [IncludeFromDirectory(@\".\\Helpers\", true)] public class BuildScript : DefaultBuildScript { }","title":"\u5c06\u5176\u5b83 .cs \u6587\u4ef6\u52a0\u5230\u811a\u672c\u4e2d"},{"location":"tasks/","text":"\u672c\u9875\u9762\u7f57\u5217\u4e86 FlubuCore \u7684\u5185\u7f6e\u4efb\u52a1\u53ca\u5176\u7b80\u5355\u63cf\u8ff0\u3002\u6bcf\u4e2a\u4efb\u52a1\u90fd\u652f\u6301\u6d41\u7545\u63a5\u53e3\uff08fluent interface\uff09\uff0c\u66f4\u8be6\u7ec6\u7684\u4efb\u52a1\u6587\u6863\u8bf7\u67e5\u9605\u4ee3\u7801\u6587\u6863\u3002\u5982\u679c\u4f60\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u52a0\u5165\u6211\u4eec\u7684 gitter\u3002 \u4efb\u52a1 \u00b6 \u540d\u79f0 \u63cf\u8ff0 RunProgramTask \u8fd0\u884c\u6307\u5b9a\u7684\u5916\u90e8\u7a0b\u5e8f CompileSolutionTask \u7f16\u8bd1\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848 PackageTask \u5c06\u6307\u5b9a\u7684\u76ee\u5f55\u548c\u6587\u4ef6\u6253\u5305\uff08package\uff09\u5230\u7279\u5b9a\u7684\u76ee\u5f55\u6216 zip \u6587\u4ef6\u4e2d FetchBuildVersionFromFileTask \u4ece\u6587\u4ef6\u4e2d\u83b7\u53d6\u6784\u5efa\u7248\u672c\uff08build version\uff09 GitVersionTask GitVersion \u5de5\u5177\u53ef\u5e2e\u52a9\u4f60\u5728\u9879\u76ee\u4e2d\u5b9e\u73b0\u8bed\u4e49\u7248\u672c\u63a7\u5236\uff08Semantic Versioning\uff09 \u66f4\u591a... FetchVersionFromExternalSourceTask \u4ece\u5916\u90e8\u6e90\uff08Appveyor\u3001travis\u3001jenkins \u7b49\uff09\u83b7\u53d6\u6784\u5efa\u7248\u672c\uff08build version\uff09 GenerateCommonAssemlbyInfoTask \u4e3a\u89e3\u51b3\u65b9\u6848\u751f\u6210\u901a\u7528\u7a0b\u5e8f\u96c6\u4fe1\u606f\uff08common assembly info\uff09 NUnitTask \u4f7f\u7528 nunit.exe runner \u8fd0\u884c nunit \u6d4b\u8bd5 XunitTask \u4f7f\u7528 xunit.exe runner \u8fd0\u884c xunit \u6d4b\u8bd5 NUnitWithDotCoverTaskTask \u7ed3\u5408 dotCover \u6d4b\u8bd5\u8986\u76d6\u7387\u5206\u6790\uff08test coverage analysis\uff09\u8fd0\u884c nunit \u6d4b\u8bd5 PublishNugetPackageTask \u5c06 nuget \u5305\u53d1\u5e03\u5230\u6307\u5b9a\u7684 nuget \u670d\u52a1\u5668\u4e0a NugetCmdLineTask \u901a\u8fc7 nuget.exe \u64cd\u4f5c nuget UpdateXmlFileTask \u901a\u8fc7\u6307\u5b9a\u7684\u66f4\u65b0\u547d\u4ee4\u66f4\u65b0 XML \u6587\u4ef6 UpdateJsonFileTask \u901a\u8fc7\u6307\u5b9a\u7684\u66f4\u65b0\u547d\u4ee4\u66f4\u65b0 JSON \u6587\u4ef6 CleanoutputTask \u6e05\u7406\u89e3\u51b3\u65b9\u6848\u4e2d\u6240\u6709\u9879\u76ee\u7684\u8f93\u51fa ControlServiceTask \u901a\u8fc7 sc.exe \u547d\u4ee4\u63a7\u5236 Windows \u670d\u52a1 CreateWindowsServiceTask \u901a\u8fc7 sc.exe \u547d\u4ee4\u521b\u5efa Winding \u670d\u52a1 ExecutePowerShellScriptTask \u6267\u884c\u6307\u5b9a\u7684 PowerShell \u811a\u672c SqlCmdTask \u901a\u8fc7 sqlcmd.exe \u6267\u884c\u6307\u5b9a\u7684 SQL \u811a\u672c\u6587\u4ef6 CreateAppPoolTask \u5728 IIS \u4e2d\u521b\u5efa\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u6c60\uff08application pool\uff09 ControlAppPoolTask \u542f\u52a8/\u505c\u6b62\u5e94\u7528\u7a0b\u5e8f\u6c60 DeleteAppPoolTask \u5220\u9664\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u6c60 CreateWebApplicationTask \u5728 IIS \u4e2d\u4e3a\u6307\u5b9a\u7684 Web \u7ad9\u70b9\u521b\u5efa\u65b0 Web \u5e94\u7528\u7a0b\u5e8f\uff08web application\uff09 CreateWebSiteTask \u5728 IIS \u4e2d\u521b\u5efa\u65b0\u7ad9\u70b9\uff08web site\uff09 AddWebSiteBindingTask \u7f16\u8bd1\uff08compile\uff09\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848 GetLocalIisVersionTask \u83b7\u53d6\u672c\u5730\u673a\u5668\u4e0a IIS \u7684\u7248\u672c ReplaceTokenTask \u66ff\u6362\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u6807\u8bb0\uff08token\uff09 ReplaceTextTask \u66ff\u6362\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u6587\u672c\uff08text\uff09 CopyDirectoryStructureTask \u4f7f\u7528\u6307\u5b9a\u7684\u8fc7\u6ee4\u5668\uff08filter\uff09\u5c06\u6587\u4ef6\u4ece\u4e00\u4e2a\u76ee\u5f55\uff08directory\uff09\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55 CopyFileTask \u5c06\u6587\u4ef6\u4ece\u4e00\u4e2a\u76ee\u5f55\uff08directory\uff09\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55 CopyDirectoryStructureTask \u5c06\u76ee\u5f55\u6811\uff08directory tree\uff09\u4ece\u4e00\u5904\u590d\u5236\u5230\u53e6\u4e00\u5904\uff08from the source to the destination) CreateDirectoryTask \u5728\u6307\u5b9a\u8def\u5f84\u4e0b\u521b\u5efa\u76ee\u5f55 DeleteDirectoryTask \u5220\u9664\u6307\u5b9a\u7684\u76ee\u5f55 DeleteFilesTask \u6839\u636e\u6307\u5b9a\u7684\u6a21\u5f0f\uff08pattern\uff09\u5728\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u5220\u9664\u6587\u4ef6 UnzipFileTask \u5c06 zip \u6587\u4ef6\u89e3\u538b\u7f29\u5230\u6307\u5b9a\u7684\u8def\u5f84\u4e0b ZipFileTask \u538b\u7f29\u6307\u5b9a\u7684\u6570\u4e2a\u6587\u4ef6 OpenCoverTask \u8fd0\u884c OpenCover OpenCoverToCoberturaTask \u8fd0\u884c OpenCover \u81f3 Cobertuta CoverageReportTask \u8fd0\u884c\u8986\u76d6\u7387\u62a5\u544a\u751f\u6210\u5668 LoadSolutionTask \u5728 flubu \u4f1a\u8bdd\u4e2d\u52a0\u8f7d\u89e3\u51b3\u65b9\u6848\u4fe1\u606f T4TemplateTask \u4f7f\u7528 TextTransform.exe \u5de5\u5177\u751f\u6210 T4 \u6a21\u677f GitTasks \u56f4\u7ed5 Git \u514b\u9686\u3001\u6dfb\u52a0\u3001\u63d0\u4ea4\u3001\u62c9\u53d6\u3001\u63a8\u9001\u3001\u6807\u7b7e\u548c\u79fb\u9664\u6587\u4ef6\u7684\u4efb\u52a1 DockerTasks \u6784\u5efa\u3001\u8fd0\u884c\u3001\u505c\u6b62\u4e0e\u79fb\u9664\u5bb9\u5668\uff0c\u79fb\u9664\u955c\u50cf\u4ee5\u53ca\u5176\u5b83\u76f8\u5e94\u7684 docker cli \u547d\u4ee4\u3002\u6240\u6709\u4efb\u52a1\u5747\u6765\u81ea docker \u5b98\u65b9\u6587\u6863\u3002 FlubuWebApiTasks \u5404\u79cd flubu web api \u5ba2\u6237\u7aef\u4efb\u52a1 .NET Core \u4efb\u52a1 \u00b6 \u540d\u79f0 \u63cf\u8ff0 ExecuteDotnetTask \u6267\u884c\u6307\u5b9a\u7684 dotnet \u547d\u4ee4 DotnetRestoreTask \u4e3a\u6307\u5b9a\u5e94\u7528\u7a0b\u5e8f\u6216\u9879\u76ee\u6062\u590d\uff08restore\uff09\u4f9d\u8d56\u9879\uff08dependencies\uff09\u548c\u5de5\u5177\uff08tools\uff09 DotnetPublishTask \u7f16\u8bd1\u5e94\u7528\u7a0b\u5e8f\uff0c\u8bfb\u53d6\u9879\u76ee\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u4f9d\u8d56\u9879\uff0c\u5e76\u5c06\u751f\u6210\u7684\u6587\u4ef6\u96c6\uff08set of files\uff09\u53d1\u5e03\u5230\u76ee\u5f55\uff08directory\uff09\u4e2d DotnetBuildTask \u6784\u5efa\uff08build\uff09\u9879\u76ee\u53ca\u5176\u6240\u6709\u4f9d\u8d56\u9879 DotnetPackTask \u901a\u8fc7\u547d\u4ee4\u6784\u5efa\u9879\u76ee\u5e76\u521b\u5efa nuget \u5305\uff0c\u8be5\u547d\u4ee4\u5c06\u751f\u6210\u4e00\u4e2a nuget \u5305 DotnetNugetPushTask \u63a8\u9001 nuget \u5305\u81f3 nuget \u670d\u52a1\u5668 DotnetTestTask \u6839\u636e project.json / csproj \u6240\u914d\u7f6e\u7684 test runner\uff0c\u8fd0\u884c\u6d4b\u8bd5 DotnetCleanTask \u6e05\u7406\u9879\u76ee\u8f93\u51fa DotnetEfTasks \u5305\u542b\u4e86\u591a\u79cd\u5b9e\u4f53\u6846\u67b6\uff08entity framework\uff09\u4efb\u52a1 UpdateNetCoreVersionTask \u5728 csproj / project.json \u6587\u4ef6\u4e2d\u66f4\u65b0\u7248\u672c CoverletTask Coverlet \u662f .NET Cire \u4e0b\u8de8\u5e73\u53f0\u4ee3\u7801\u8986\u76d6\u5e93\uff0c\u652f\u6301\u884c\uff08lines\uff09\u3001\u5206\u652f\uff08branch\uff09\u548c\u65b9\u6cd5\uff08methods\uff09\u8986\u76d6 \u66f4\u591a... SshComandLinuxTask \u5411\u8fdc\u7a0b\u4e3b\u673a\u8fd0\u884c\u6307\u5b9a\u7684\u547d\u4ee4 SshCopyLinuxTask \u5c06\u9879\u76ee\u6216\u6587\u4ef6\u590d\u5236\u5230\u8fdc\u7a0b\u4e3b\u673a SystemCtlLinuxTask \u8fd0\u884c systemctl \u547d\u4ee4","title":"\u4efb\u52a1"},{"location":"tasks/#_1","text":"\u540d\u79f0 \u63cf\u8ff0 RunProgramTask \u8fd0\u884c\u6307\u5b9a\u7684\u5916\u90e8\u7a0b\u5e8f CompileSolutionTask \u7f16\u8bd1\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848 PackageTask \u5c06\u6307\u5b9a\u7684\u76ee\u5f55\u548c\u6587\u4ef6\u6253\u5305\uff08package\uff09\u5230\u7279\u5b9a\u7684\u76ee\u5f55\u6216 zip \u6587\u4ef6\u4e2d FetchBuildVersionFromFileTask \u4ece\u6587\u4ef6\u4e2d\u83b7\u53d6\u6784\u5efa\u7248\u672c\uff08build version\uff09 GitVersionTask GitVersion \u5de5\u5177\u53ef\u5e2e\u52a9\u4f60\u5728\u9879\u76ee\u4e2d\u5b9e\u73b0\u8bed\u4e49\u7248\u672c\u63a7\u5236\uff08Semantic Versioning\uff09 \u66f4\u591a... FetchVersionFromExternalSourceTask \u4ece\u5916\u90e8\u6e90\uff08Appveyor\u3001travis\u3001jenkins \u7b49\uff09\u83b7\u53d6\u6784\u5efa\u7248\u672c\uff08build version\uff09 GenerateCommonAssemlbyInfoTask \u4e3a\u89e3\u51b3\u65b9\u6848\u751f\u6210\u901a\u7528\u7a0b\u5e8f\u96c6\u4fe1\u606f\uff08common assembly info\uff09 NUnitTask \u4f7f\u7528 nunit.exe runner \u8fd0\u884c nunit \u6d4b\u8bd5 XunitTask \u4f7f\u7528 xunit.exe runner \u8fd0\u884c xunit \u6d4b\u8bd5 NUnitWithDotCoverTaskTask \u7ed3\u5408 dotCover \u6d4b\u8bd5\u8986\u76d6\u7387\u5206\u6790\uff08test coverage analysis\uff09\u8fd0\u884c nunit \u6d4b\u8bd5 PublishNugetPackageTask \u5c06 nuget \u5305\u53d1\u5e03\u5230\u6307\u5b9a\u7684 nuget \u670d\u52a1\u5668\u4e0a NugetCmdLineTask \u901a\u8fc7 nuget.exe \u64cd\u4f5c nuget UpdateXmlFileTask \u901a\u8fc7\u6307\u5b9a\u7684\u66f4\u65b0\u547d\u4ee4\u66f4\u65b0 XML \u6587\u4ef6 UpdateJsonFileTask \u901a\u8fc7\u6307\u5b9a\u7684\u66f4\u65b0\u547d\u4ee4\u66f4\u65b0 JSON \u6587\u4ef6 CleanoutputTask \u6e05\u7406\u89e3\u51b3\u65b9\u6848\u4e2d\u6240\u6709\u9879\u76ee\u7684\u8f93\u51fa ControlServiceTask \u901a\u8fc7 sc.exe \u547d\u4ee4\u63a7\u5236 Windows \u670d\u52a1 CreateWindowsServiceTask \u901a\u8fc7 sc.exe \u547d\u4ee4\u521b\u5efa Winding \u670d\u52a1 ExecutePowerShellScriptTask \u6267\u884c\u6307\u5b9a\u7684 PowerShell \u811a\u672c SqlCmdTask \u901a\u8fc7 sqlcmd.exe \u6267\u884c\u6307\u5b9a\u7684 SQL \u811a\u672c\u6587\u4ef6 CreateAppPoolTask \u5728 IIS \u4e2d\u521b\u5efa\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u6c60\uff08application pool\uff09 ControlAppPoolTask \u542f\u52a8/\u505c\u6b62\u5e94\u7528\u7a0b\u5e8f\u6c60 DeleteAppPoolTask \u5220\u9664\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u6c60 CreateWebApplicationTask \u5728 IIS \u4e2d\u4e3a\u6307\u5b9a\u7684 Web \u7ad9\u70b9\u521b\u5efa\u65b0 Web \u5e94\u7528\u7a0b\u5e8f\uff08web application\uff09 CreateWebSiteTask \u5728 IIS \u4e2d\u521b\u5efa\u65b0\u7ad9\u70b9\uff08web site\uff09 AddWebSiteBindingTask \u7f16\u8bd1\uff08compile\uff09\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848 GetLocalIisVersionTask \u83b7\u53d6\u672c\u5730\u673a\u5668\u4e0a IIS \u7684\u7248\u672c ReplaceTokenTask \u66ff\u6362\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u6807\u8bb0\uff08token\uff09 ReplaceTextTask \u66ff\u6362\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u6587\u672c\uff08text\uff09 CopyDirectoryStructureTask \u4f7f\u7528\u6307\u5b9a\u7684\u8fc7\u6ee4\u5668\uff08filter\uff09\u5c06\u6587\u4ef6\u4ece\u4e00\u4e2a\u76ee\u5f55\uff08directory\uff09\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55 CopyFileTask \u5c06\u6587\u4ef6\u4ece\u4e00\u4e2a\u76ee\u5f55\uff08directory\uff09\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55 CopyDirectoryStructureTask \u5c06\u76ee\u5f55\u6811\uff08directory tree\uff09\u4ece\u4e00\u5904\u590d\u5236\u5230\u53e6\u4e00\u5904\uff08from the source to the destination) CreateDirectoryTask \u5728\u6307\u5b9a\u8def\u5f84\u4e0b\u521b\u5efa\u76ee\u5f55 DeleteDirectoryTask \u5220\u9664\u6307\u5b9a\u7684\u76ee\u5f55 DeleteFilesTask \u6839\u636e\u6307\u5b9a\u7684\u6a21\u5f0f\uff08pattern\uff09\u5728\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u5220\u9664\u6587\u4ef6 UnzipFileTask \u5c06 zip \u6587\u4ef6\u89e3\u538b\u7f29\u5230\u6307\u5b9a\u7684\u8def\u5f84\u4e0b ZipFileTask \u538b\u7f29\u6307\u5b9a\u7684\u6570\u4e2a\u6587\u4ef6 OpenCoverTask \u8fd0\u884c OpenCover OpenCoverToCoberturaTask \u8fd0\u884c OpenCover \u81f3 Cobertuta CoverageReportTask \u8fd0\u884c\u8986\u76d6\u7387\u62a5\u544a\u751f\u6210\u5668 LoadSolutionTask \u5728 flubu \u4f1a\u8bdd\u4e2d\u52a0\u8f7d\u89e3\u51b3\u65b9\u6848\u4fe1\u606f T4TemplateTask \u4f7f\u7528 TextTransform.exe \u5de5\u5177\u751f\u6210 T4 \u6a21\u677f GitTasks \u56f4\u7ed5 Git \u514b\u9686\u3001\u6dfb\u52a0\u3001\u63d0\u4ea4\u3001\u62c9\u53d6\u3001\u63a8\u9001\u3001\u6807\u7b7e\u548c\u79fb\u9664\u6587\u4ef6\u7684\u4efb\u52a1 DockerTasks \u6784\u5efa\u3001\u8fd0\u884c\u3001\u505c\u6b62\u4e0e\u79fb\u9664\u5bb9\u5668\uff0c\u79fb\u9664\u955c\u50cf\u4ee5\u53ca\u5176\u5b83\u76f8\u5e94\u7684 docker cli \u547d\u4ee4\u3002\u6240\u6709\u4efb\u52a1\u5747\u6765\u81ea docker \u5b98\u65b9\u6587\u6863\u3002 FlubuWebApiTasks \u5404\u79cd flubu web api \u5ba2\u6237\u7aef\u4efb\u52a1","title":"\u4efb\u52a1"},{"location":"tasks/#net-core","text":"\u540d\u79f0 \u63cf\u8ff0 ExecuteDotnetTask \u6267\u884c\u6307\u5b9a\u7684 dotnet \u547d\u4ee4 DotnetRestoreTask \u4e3a\u6307\u5b9a\u5e94\u7528\u7a0b\u5e8f\u6216\u9879\u76ee\u6062\u590d\uff08restore\uff09\u4f9d\u8d56\u9879\uff08dependencies\uff09\u548c\u5de5\u5177\uff08tools\uff09 DotnetPublishTask \u7f16\u8bd1\u5e94\u7528\u7a0b\u5e8f\uff0c\u8bfb\u53d6\u9879\u76ee\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u4f9d\u8d56\u9879\uff0c\u5e76\u5c06\u751f\u6210\u7684\u6587\u4ef6\u96c6\uff08set of files\uff09\u53d1\u5e03\u5230\u76ee\u5f55\uff08directory\uff09\u4e2d DotnetBuildTask \u6784\u5efa\uff08build\uff09\u9879\u76ee\u53ca\u5176\u6240\u6709\u4f9d\u8d56\u9879 DotnetPackTask \u901a\u8fc7\u547d\u4ee4\u6784\u5efa\u9879\u76ee\u5e76\u521b\u5efa nuget \u5305\uff0c\u8be5\u547d\u4ee4\u5c06\u751f\u6210\u4e00\u4e2a nuget \u5305 DotnetNugetPushTask \u63a8\u9001 nuget \u5305\u81f3 nuget \u670d\u52a1\u5668 DotnetTestTask \u6839\u636e project.json / csproj \u6240\u914d\u7f6e\u7684 test runner\uff0c\u8fd0\u884c\u6d4b\u8bd5 DotnetCleanTask \u6e05\u7406\u9879\u76ee\u8f93\u51fa DotnetEfTasks \u5305\u542b\u4e86\u591a\u79cd\u5b9e\u4f53\u6846\u67b6\uff08entity framework\uff09\u4efb\u52a1 UpdateNetCoreVersionTask \u5728 csproj / project.json \u6587\u4ef6\u4e2d\u66f4\u65b0\u7248\u672c CoverletTask Coverlet \u662f .NET Cire \u4e0b\u8de8\u5e73\u53f0\u4ee3\u7801\u8986\u76d6\u5e93\uff0c\u652f\u6301\u884c\uff08lines\uff09\u3001\u5206\u652f\uff08branch\uff09\u548c\u65b9\u6cd5\uff08methods\uff09\u8986\u76d6 \u66f4\u591a... SshComandLinuxTask \u5411\u8fdc\u7a0b\u4e3b\u673a\u8fd0\u884c\u6307\u5b9a\u7684\u547d\u4ee4 SshCopyLinuxTask \u5c06\u9879\u76ee\u6216\u6587\u4ef6\u590d\u5236\u5230\u8fdc\u7a0b\u4e3b\u673a SystemCtlLinuxTask \u8fd0\u884c systemctl \u547d\u4ee4","title":".NET Core \u4efb\u52a1"},{"location":"write-plugins/","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199\u81ea\u5df1\u7684 flubu \u4efb\u52a1\u6765\u6269\u5c55 flubu \u7684\u6d41\u7545\u63a5\u53e3\uff08fluent interface\uff09\u3002 \u5f53\u4f60\u901a\u8fc7\u81ea\u5b9a\u4e49\u4efb\u52a1\u6269\u5c55 FlubuCore \u65f6\uff0c\u53ea\u9700\u8981\u5c06\u5176\u6dfb\u52a0\u5230\u76ee\u6807\uff08target\uff09\u6216\u901a\u8fc7 Do \u6765\u8c03\u7528\u5b83\u5373\u53ef\uff0c\u4ee5\u4e0b\u662f\u4f8b\u5b50\uff1a public class BuildScript : DefaultBuildScript { protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"FlubuPlugin.Example\" ) . SetAsDefault () . Do ( DoPluginExample ); context . CreateTarget ( \"FlubuPlugin.Example2\" ) . AddTask ( x => x . ExampleFlubuPluginTask ()); } private void DoPluginExample ( ITaskContext context ) { context . Tasks (). ExampleFlubuPluginTask () . Message ( \"some example message from plugin\" ). Execute ( context ); } } \u5982\u4f55\u521b\u5efa\u4efb\u52a1\u63d2\u4ef6 \u00b6 \u5728 VS \u4e2d\u521b\u5efa\u65b0\u9879\u76ee\uff0c\u9879\u76ee\u540d FlubuCore.{PluginName} \u5728\u9879\u76ee\u4e2d\u5f15\u5165 FlubuCore nuget \u5305 \u6dfb\u52a0\u4efb\u52a1\u5e76\u5b9e\u73b0\u4e4b\u3002\u4ee5\u4e0b\u4ee3\u7801\u6f14\u793a\u4e86\u793a\u4f8b\u63d2\u4ef6\u4efb\u52a1\u7684\u5b9e\u73b0\uff1a public class ExampleFlubuPluginTask : TaskBase < int , ExampleFlubuPluginTask > { private string _message ; protected override string Description { get ; set ; } public ExampleFlubuPluginTask Message ( string message ) { _message = message ; return this ; } protected override int DoExecute ( ITaskContextInternal context ) { //// write task logic here. context . LogInfo (! string . IsNullOrEmpty ( _message ) ? _message : \"Just some dummy code\" ); return 0 ; } } \u7136\u540e\uff0c\u4f60\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u6269\u5c55\u65b9\u6cd5\u5c06\u4efb\u52a1\u6dfb\u52a0\u5bf9 flubu \u6d41\u7545\u63a5\u53e3\u7684\u652f\u6301\u3002\u5728\u672c\u4f8b\u4e2d\u6211\u4eec\u7684\u6269\u5c55\u65b9\u6cd5\u5982\u4e0b\uff1a using FlubuCore.PluginExample ; namespace FlubuCore.Context.FluentInterface.Interfaces { public static class TaskFluentInterfaceExtension { public static ExampleFlubuPluginTask ExampleFlubuPluginTask ( this ITaskFluentInterface flubu ) { return new ExampleFlubuPluginTask (); } } } \u5efa\u8bae\u4f60\u5c06\u4efb\u52a1\u6dfb\u52a0\u5230\u5bf9 ICoreTaskFluentInterface \u6216 ITaskFluentInterface \u7684\u6269\u5c55\u652f\u6301\u3002 \u5982\u679c\u4f60\u5c06\u63d2\u4ef6\u6dfb\u52a0\u5230 nuget \u4ed3\u5e93\u4e2d\u4e3a\u4f73\u3002\u5982\u679c\u63d2\u4ef6\u540d\u4ee5 FlubuCore \u5f00\u5934\u5219\u66f4\u4f73\uff0c\u56e0\u4e3a\u8fd9\u6837\u5927\u5bb6\u90fd\u80fd\u5f88\u5bb9\u6613\u627e\u5230\u8fd9\u4e2a\u63d2\u4ef6\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u793a\u4f8b\u63d2\u4ef6\u7684\u5b8c\u6574\u4ee3\u7801\u3002","title":"\u7f16\u5199\u4e0e\u4f7f\u7528\u63d2\u4ef6"},{"location":"write-plugins/#_1","text":"\u5728 VS \u4e2d\u521b\u5efa\u65b0\u9879\u76ee\uff0c\u9879\u76ee\u540d FlubuCore.{PluginName} \u5728\u9879\u76ee\u4e2d\u5f15\u5165 FlubuCore nuget \u5305 \u6dfb\u52a0\u4efb\u52a1\u5e76\u5b9e\u73b0\u4e4b\u3002\u4ee5\u4e0b\u4ee3\u7801\u6f14\u793a\u4e86\u793a\u4f8b\u63d2\u4ef6\u4efb\u52a1\u7684\u5b9e\u73b0\uff1a public class ExampleFlubuPluginTask : TaskBase < int , ExampleFlubuPluginTask > { private string _message ; protected override string Description { get ; set ; } public ExampleFlubuPluginTask Message ( string message ) { _message = message ; return this ; } protected override int DoExecute ( ITaskContextInternal context ) { //// write task logic here. context . LogInfo (! string . IsNullOrEmpty ( _message ) ? _message : \"Just some dummy code\" ); return 0 ; } } \u7136\u540e\uff0c\u4f60\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u6269\u5c55\u65b9\u6cd5\u5c06\u4efb\u52a1\u6dfb\u52a0\u5bf9 flubu \u6d41\u7545\u63a5\u53e3\u7684\u652f\u6301\u3002\u5728\u672c\u4f8b\u4e2d\u6211\u4eec\u7684\u6269\u5c55\u65b9\u6cd5\u5982\u4e0b\uff1a using FlubuCore.PluginExample ; namespace FlubuCore.Context.FluentInterface.Interfaces { public static class TaskFluentInterfaceExtension { public static ExampleFlubuPluginTask ExampleFlubuPluginTask ( this ITaskFluentInterface flubu ) { return new ExampleFlubuPluginTask (); } } } \u5efa\u8bae\u4f60\u5c06\u4efb\u52a1\u6dfb\u52a0\u5230\u5bf9 ICoreTaskFluentInterface \u6216 ITaskFluentInterface \u7684\u6269\u5c55\u652f\u6301\u3002 \u5982\u679c\u4f60\u5c06\u63d2\u4ef6\u6dfb\u52a0\u5230 nuget \u4ed3\u5e93\u4e2d\u4e3a\u4f73\u3002\u5982\u679c\u63d2\u4ef6\u540d\u4ee5 FlubuCore \u5f00\u5934\u5219\u66f4\u4f73\uff0c\u56e0\u4e3a\u8fd9\u6837\u5927\u5bb6\u90fd\u80fd\u5f88\u5bb9\u6613\u627e\u5230\u8fd9\u4e2a\u63d2\u4ef6\u3002 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u793a\u4f8b\u63d2\u4ef6\u7684\u5b8c\u6574\u4ee3\u7801\u3002","title":"\u5982\u4f55\u521b\u5efa\u4efb\u52a1\u63d2\u4ef6"},{"location":"AwesomePlugins/awesome-plugins/","text":"FlubuCore.CakePlugin - Cake \u6709\u5f88\u591a\u5b9e\u7528\u63d2\u4ef6\uff08addins\uff09\u3002CakePlugin \u63d2\u4ef6\u5141\u8bb8\u4f60\u5728 FlubuCore \u4e2d\u4f7f\u7528\u4efb\u4f55 Cake \u63d2\u4ef6\uff08addins\uff09\u3002 FlubuCore.Azure - \u672c\u63d2\u4ef6\u4e3a Azure CLI \u589e\u52a0\u4e86\u8d85\u8fc7 2000 \u4e2a\u751f\u6210\u7684\u4efb\u52a1\uff0c\u4efb\u52a1\u90fd\u662f\u4ece\u5b98\u65b9\u6587\u6863\u751f\u6210\u7684\u3002 FlubuCore.Diff - \u672c\u63d2\u4ef6\u5c06 Diff \u4efb\u52a1\u6dfb\u52a0\u5230 FlubuCore \u6d41\u7545\u63a5\u53e3\uff08fluent interface\uff09\u5185\u3002Diff \u4efb\u52a1\u4f1a\u6bd4\u8f83\u4e24\u4e2a\u6307\u5b9a\u6587\u4ef6\uff0c\u5e76\u751f\u6210 HTML \u683c\u5f0f\u7684\u5dee\u5f02\u62a5\u544a\u3002 FlubuCore.Gitter - \u672c\u63d2\u4ef6\u7528\u4e8e\u5728\u6307\u5b9a\u7684 Gitter room \u5185\u53d1\u9001\u6d88\u606f\u3002 FlubuCore.Kubernetes - \u672a\u88ab\u5b9e\u73b0\u3002\u8bf7\u7ed3\u5408 FlubuCore \u4f7f\u7528 Kurernetes client \u3002 FlubuCore.Npm - \u672c\u63d2\u4ef6\u4e3a npm CLI \u547d\u4ee4\u6dfb\u52a0\u4e86\u5927\u91cf\u4efb\u52a1\u3002 FlubuCore.Octopus - \u672c\u63d2\u4ef6\u4e3a octopus CLI \u547d\u4ee4\u6dfb\u52a0\u4e86\u5927\u91cf\u4efb\u52a1\u3002 FlubuCore.Slack - \u672c\u63d2\u4ef6\u7528\u4e8e\u5411 slack \u9891\u9053\uff08channels\uff09\u53d1\u9001\u6d88\u606f\u3002 FlubuCore.Chocolatey - Plugin adds tasks for numerous Chocolatey CLI commands. Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. It focuses on simplicity, security, and scalability. You write a software deployment in PowerShell once for any software (not just installers), then you can deploy it everywhere you have Windows with any solution that can manage systems (configuration management, endpoint management, etc) and track and manage updates of that software over time.","title":"\u63d2\u4ef6"},{"location":"FAQ/faq/","text":"Why FlubuCore? Native access to the whole .NET ecosystem and full IDE support inside of your scripts. With flubu you can execute your script anywhere it doesn't need to be in a project. This is important for deployment scripts or if you want to write some other scripts that are not releated to build scirpts or deploy scripts Flubu allows multiple tasks in target. Easy access to tasks through fluent interface Context.AddTask() or Context.Tasks() Each Flubu built in task derives from base class task meaning each built in task have retry, OnError, Finally, When, Interactive and some others mechanisms Pass command line arguments, settings from json configuration file or environment variables to your Properties in script. Allows you to reuse set of tasks. See Sample flubu supports parallel / async execution of target's, target dependencies and tasks to each task that execute external program or command you can add custom arguments with .WithArguments() method or even decide not to use fluent interface (good example: https://github.com/azabluda/InfoCarrier.Core/blob/develop/BuildScript/BuildScript.cs ) Alternative target definitions with attributes Flubu web api allows you to execute scripts remotely (usefull for deployments but not limited to) Override existing options or add additional options to tasks through console. https://flubucore.dotnetcore.xyz/override-add-options/ Flubu have really nice interactive mode https://flubucore.dotnetcore.xyz/build-script-runner-interactive/ Flubu Supports .net 461+ and .net core 1.0 Should I call Execute method when executing flubu built in task? if you are adding task to target through AddTask method Flubu calls Execute method when executing that target so in this scenario you should not call Execute on the task context . CreateTarget ( \"Build\" ) . AddCoreTask ( x => x . build ()); In the sample above BuildTask is added to the target. When target is executed Flubu executes all tasks that were added to target by calling task Execute method. in this case it executes BuildTask context . CreateTarget ( \"LoginEcr\" ) . Do ( c => { c . Tasks () . RunProgram ( \"aws\" ) . WithArguments ( \"ecr\" , \"get-login\" , \"--region\" , \"eu-central-1\" , \"--no-include-email\" )) . Execute ( context ); } In this sample Do actually adds DoTask to the target. When target is executed Flubu executes DoTask . DoTask in above example invokes Anonymous method which was assigned to the Action delegate (first parameter in Do Method). Flubu can not execute by itself tasks in the anonymous method you have to call Execute() method manually. Can I get output of the program, process or command that I am executing with Flubu? Yes you can with CaptureOutput method in RunProgramTask public class MyScript : DefaultBuildScript { protected override void ConfigureTargets ( ITaskContext context ) { context . CreateTarget ( \"Example\" ) . Do ( RunProgramOrCommandExample ); } public void RunProgramOrCommandExample ( ITaskContext context ) { var task = context . Tasks (). RunProgramTask ( \"EnterPathToProgramOrCommand\" ) . WithArguments ( \"Add arguments if needed\" ) . CaptureOutput (); task . Execute ( context ); var output = task . GetOutput (); } } Can I access Properties or flubu BuildProperties in ConfigureTargets method? In most cases you can as long as they are not set in a Do method or in a task. public BuildVersion BuildVersion { get ; set ; } = null ; public int SimpleSample { get ; set ; } = 0 ; protected override void ConfigureTargets ( ITaskContext context ) { var fetchBuildVersion context . CreateTarget ( \"fetch.buildVersion\" ). Do ( FetchBuildVersion ); context . CreateTarget ( \"Build\" ) . DependsOn ( fetchBuildVersion ) . AddCoreTask ( x => x . Build () . Version ( BuildVersion . BuildVersionWithQuality ())); /// BuildVersion is null here. context . LogInfo ( $ \"sample value: '{SimpleSample}'\" ); /// logs 0 and not 5. Explained below why is it so. } private void FetchBuildVersion ( ITaskContext context ) { BuildVersion = context . Tasks (). FetchBuildVersionFromFileTask () . ProjectVersionFileName ( \"project_version.txt\" ) . Execute ( context ); SimpleSample = 5 ; } In sample above you could think that when property SimpleSample is accessed in ConfigureTargets it would not be 0 but it is becuase ConfigureTargets method is always executed before all targets that are executed with flubu ConfigureTargets is also executed before all target dependecnies and tasks that were added to target","title":"Faq"},{"location":"WebApi/getting-started/","text":"\u5173\u4e8e \u00b6 \u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 FlubuCore Web Api \u8fdc\u7a0b\u6267\u884c FlubuCore \u811a\u672c\u3002\u8fd9\u4e3b\u8981\u662f\u4e3a\u4e86\u8ba9 .NET \u6216 .NET Core \u5e94\u7528\u7a0b\u5e8f\u4ece\u6784\u5efa\u670d\u52a1\u5668\uff08build server\uff09\u90e8\u7f72\u5230\u4e0d\u540c\u73af\u5883\u7684\u81ea\u52a8\u5316\u90e8\u7f72\u53ef\u4ee5\u901a\u8fc7\u4efb\u610f FLubuCore \u811a\u672c\u6765\u6267\u884c\u3002 Web Api \u652f\u6301\uff1a \u5728\u90e8\u7f72\u6709 FlubuCore Web Api \u7684\u670d\u52a1\u5668\u4e0a\u6267\u884c flubu \u811a\u672c\uff1b \u5728\u90e8\u7f72\u6709 FlubuCore Web Api \u7684\u670d\u52a1\u5668\u4e0a\u4e0a\u4f20\uff08\u53d1\u5e03\u6216\u5176\u5b83\u64cd\u4f5c\uff09\u5305\uff08package\uff09\uff1b \u5728\u90e8\u7f72\u6709 FlubuCore Web Api \u7684\u670d\u52a1\u5668\u4e0a\u5220\u9664\u5305\uff1b \u5411\u5ba2\u6237\u7aef\u53d1\u9001\u62a5\u544a\uff1b \u5728\u90e8\u7f72\u6709 FlubuCore Web Api \u7684\u670d\u52a1\u5668\u4e0a\u4e0a\u4f20 FlubuCore \u811a\u672c\uff1b \u81ea\u52a8\u66f4\u65b0\uff1b \u901a\u8fc7 FlubuCore Web App\uff08\u4e0e Web Api \u4e00\u540c\u90e8\u7f72\uff09\u624b\u52a8\u6267\u884c\u76ee\u6807\uff08target\uff09\u3002 \u672c\u6307\u5357\u5c06\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a \u5c06 FlubuCore Web Api \u90e8\u7f72\u5230\u670d\u52a1\u5668 \u7f16\u5199\u7528\u4e8e\u90e8\u7f72 MVC \u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\u4e8e\u670d\u52a1\u5668\u7684 .NET \u90e8\u7f72\u811a\u672c\u3002\u5982\u679c\u4f60\u60f3\u901a\u8fc7 FlubuCore.WebApi \u90e8\u7f72 .NET Core \u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u5e94\u5f53\u9605\u8bfb\u4e00\u4e0b\u672c\u6307\u5357\u3002\u4f7f\u7528 FlubuCore.WebApi \u90e8\u7f72 .NET Core \u6216 .NET \u5e94\u7528\u7a0b\u5e8f\u662f\u6ca1\u4ec0\u4e48\u5f88\u5927\u7684\u5dee\u522b\u7684\uff0c\u6240\u6709\u5dee\u5f02\u90fd\u4f1a\u5199\u5728\u672c\u6307\u5357\u4e2d\u3002 \u7f16\u5199\u6784\u5efa\u811a\u672c\uff0c\u5c06\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u5305\uff08deployment package\uff09\u4e0a\u4f20\u5230\u670d\u52a1\u5668\uff0c\u5e76\u6267\u884c\u6211\u4eec\u7f16\u5199\u7684\u90e8\u7f72\u811a\u672c\u3002 \u901a\u8fc7\u6784\u5efa\u811a\u672c\uff08build script\uff09\u8fdc\u7a0b\u8fd0\u884c\u90e8\u7f72\u811a\u672c\uff08deployment script\uff09\u3002 \u8981\u6c42 \u00b6 .NET \u8fd0\u884c\u65f6 4.6.2 \u6216\u66f4\u9ad8\uff0c\u6216\u5728\u670d\u52a1\u5668\u4e0a\u5b89\u88c5 .NET Core Runtime\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u6253\u7b97\u4f7f\u7528\u7684 FlubuCore.WebApi \u6784\u5efa\u54ea\u4e00\u79cd\u5e94\u7528\u3002 Web Api \u5f00\u53d1 \u00b6 \u4ece https://github.com/dotnetcore/FlubuCore/releases \u83b7\u53d6\u9002\u5f53\u7684 Web Api \u90e8\u7f72\u5305\uff1b \u5c06 Web Api \u90e8\u7f72\u5305\u590d\u5236\u5230\u9700\u8981\u6267\u884c flubu \u811a\u672c\u7684\u670d\u52a1\u5668\u4e0a\uff1b \u89e3\u538b\u7f29\u5305\uff1b \u5728\u89e3\u538b\u7f29\u7684 DeploymentConfig.json \u6587\u4ef6\u4e2d\u8bbe\u7f6e Web Api \u90e8\u7f72\u914d\u7f6e\u8bbe\u7f6e\u3002\u6709\u5173\u7279\u5b9a\u90e8\u7f72\u8bbe\u7f6e\u7684\u66f4\u591a\u4fe1\u606f\u53ef\u89c1\u914d\u7f6e\u6587\u4ef6\uff1b \u5728 Windows \u670d\u52a1\u5668\u4e0a\u8fd0\u884c deploy.bat \u90e8\u7f72 Web Api\uff1b \u5728 Linux/macOS \u670d\u52a1\u5668\u4e0a\u4f9d\u6b21\u8fd0\u884c dotnet restore \u3001 dotnet flubu -s=deploymentscript.cs \u5728\u90e8\u7f72\u4f4d\u7f6e\u8fd0\u884c dotnet FlubuCore.WebApi.dll \uff0c\u542f\u52a8\u81ea\u6258\u7ba1\uff08selfhost\uff09\u7684 Web Api\u3002\u4f60\u5f53\u7136\u4e5f\u53ef\u4ee5\u5728 IIS \u4e0a\u6258\u7ba1\u5b83\u2026\u2026 IIS \u5f00\u53d1 \u00b6 \u5982\u4f55\u90e8\u7f72 ASP.NET Core \u5e94\u7528\u7a0b\u5e8f\uff0c\u8bf7\u67e5\u9605\uff1a https://docs.microsoft.com/en-us/aspnet/core/publishing/iis?tabs=aspnetcore2x \u67d0\u4e9b\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\uff08administration rights\uff09\uff0c\u6bd4\u5982\u542f\u52a8/\u505c\u6b62\u5e94\u7528\u7a0b\u5e8f\u6c60\uff08application pool\uff09\u3002\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f60\u5fc5\u987b\u5728\u6258\u7ba1 Web Api \u7684\u5e94\u7528\u7a0b\u5e8f\u6c60\u4e2d\u4fee\u6539\u8eab\u4efd\u3002\u5207\u6362\u5230\u300c\u5e94\u7528\u7a0b\u5e8f\u6c60\u300d\u2192\u300cWeb Api \u5e94\u7528\u7a0b\u5e8f\u6c60\u300d\u2192\u300c\u9ad8\u7ea7\u8bbe\u7f6e...\u300d\u2192\u300c\u8fdb\u7a0b\u6a21\u578b\u300d\u2192\u300c\u6807\u8bc6\u300d\uff0c\u5e76\u66f4\u6539\u4e3a\u5177\u6709\u7ba1\u7406\u5458\u6743\u9650\u7684\u8d26\u6237\u3002 \u7f16\u5199\u90e8\u7f72\u811a\u672c \u00b6 \u7528\u4e8e\u793a\u4f8b\u7684 .NET \u90e8\u7f72\u811a\u672c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u3002\u5982\u679c\u4f60\u60f3\u5c1d\u8bd5\u8be5\u793a\u4f8b\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u662f\u590d\u5236 flubu core \u7684\u76ee\u5f55\u3002.NET Core \u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u811a\u672c\u4f1a\u7565\u6709\u4e0d\u540c\u3002 .NET \u5e94\u7528\u7a0b\u5e8f\u7684\u793a\u4f8b\u90e8\u7f72\u811a\u672c\u5c06\uff1a \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u521b\u5efa IIS \u5e94\u7528\u7a0b\u5e8f\u6c60\uff1b \u505c\u6b62\u5e94\u7528\u7a0b\u5e8f\u6c60\uff1b \u4ece /packages \u76ee\u5f55\u4e0b\u89e3\u538b\u7f29\u5305\uff08\u5c06\u4f7f\u7528\u6784\u5efa\u811a\u672c\u4e0a\u4f20\u5230 Web Api\uff09\uff1b \u590d\u5236\u89e3\u538b\u7f29\u7684\u5e94\u7528\u7a0b\u5e8f\u5230\u6258\u7ba1\u5b83\u7684\u65b0\u6587\u4ef6\u5939\uff1b \u5728 IIS \u4e0a\u521b\u5efa\u7ad9\u70b9\uff0c\u5982 Web \u5e94\u7528\u7a0b\u5e8f\uff1b \u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\u6c60\u3002 \u5b8c\u6210\u90e8\u7f72\u811a\u672c\u7684\u7f16\u5199\u4e4b\u540e\uff0c\u624b\u52a8\u5c06\u5176\u590d\u5236\u5230 Web Api \u90e8\u7f72\u4f4d\u7f6e\u7684 /scripts \u6587\u4ef6\u5939\u4e0b\u3002Web Api \u4e5f\u53ef\u4ee5\u4e0a\u4f20\u811a\u672c\uff0c\u4f46\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u8fd9\u4e2a\u529f\u80fd\u9ed8\u8ba4\u662f\u7981\u7528\u7684\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5e94\u4fdd\u6301\u7981\u7528\u72b6\u6001\u3002 \u5982\u679c\u9700\u8981\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u60c5\u51b5\u4fee\u6539\u793a\u4f8b DeployScript\u3002 \u7f16\u5199\u6784\u5efa\u811a\u672c \u00b6 \u7528\u4e8e\u793a\u4f8b\u7684 .NET \u6784\u5efa\u811a\u672c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u3002 .NET \u793a\u4f8b\u6784\u5efa\u811a\u672c\u5c06\uff1a \u83b7\u53d6\u8eab\u4efd\u9a8c\u8bc1\u4ee4\u724c\uff08authentication token\uff09 \u5728 Web Api \u4e0a\u5220\u9664 /packages \u76ee\u5f55\u4e0b\u7684\u65e7\u7684\u5305 \u4e0a\u4f20\u5305\uff08package\uff09\u5230 Web Api \u7684 /packages \u6587\u4ef6\u5939\u4e0b \u6267\u884c /scripts \u6587\u4ef6\u5939\u4e0b\u6211\u4eec\u624b\u52a8\u4e0a\u4f20\u7684\u90e8\u7f72\u811a\u672c \u5982\u679c\u9700\u8981\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u60c5\u51b5\u4fee\u6539\u793a\u4f8b BuildScript\u3002 \u8fd0\u884c\u90e8\u7f72\u811a\u672c \u00b6 \u5982\u679c\u4f60\u514b\u9686\uff08clone\uff09\u4e86\u793a\u4f8b\u4ee3\u7801\u4ed3\u5e93\uff0c\u53ea\u9700\u8981\u5728\u6839\u76ee\u5f55\uff08DeployScriptExample folder\uff09\u4e0b\u6267\u884c\uff1a dotnet restore buildscript.csproj \uff0c\u4ee5\u53ca dotnet flubu deploy -s=buildscript\\buildscript.cs \u5b9e\u9645\u4e0a\u4f60\u53ef\u80fd\u5728\u6210\u529f\u6784\u5efa\u4e4b\u540e\u4ece\u6784\u5efa\u670d\u52a1\u5668\u90e8\u7f72\u3002\u5728\u5408\u5e76\u5230\u53d1\u5e03\u5206\u652f\u4e4b\u540e\uff0c\u5728\u6784\u5efa\u670d\u52a1\u5668\u4e0a\u624b\u52a8\u6267\u884c\u4f5c\u4e1a\uff08job\uff09\u2026\u2026 \u5b89\u5168 \u00b6 \u5982\u679c\u653b\u51fb\u8005\u80fd\u83b7\u53d6 Web Api \u7684\u8bbf\u95ee\u6743\u9650\uff0c\u90a3\u4e48\u4ed6\u53ef\u80fd\u4f1a\u8fdb\u884c\u5927\u91cf\u7834\u574f\uff08do alot of damage\uff09\u3002\u5982\u6709\u53ef\u80fd\uff0c\u5e94\u5b9e\u65bd\u4ee5\u4e0b\u5b89\u5168\u4e3e\u63aa\uff08security measures\uff09\uff1a \u5982\u6709\u53ef\u80fd\uff0cFLubu Web Api \u4e0d\u5e94\u5177\u6709\u5bf9\u5916\u516c\u5f00\u8bbf\u95ee\u7684\u6743\u9650\uff1b \u59cb\u7ec8\u901a\u8fc7 https \u6258\u7ba1 Web Api\uff1b \u901a\u8fc7 ip\uff08\u901a\u8fc7\u914d\u7f6e\uff09\u9650\u5236\u8bbf\u95ee\uff1b \u901a\u8fc7\u65f6\u95f4\u8303\u56f4\uff08\u901a\u8fc7\u914d\u7f6e\uff09\u9650\u5236\u8bbf\u95ee\u3002\u5982\u679c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u5728\u56fa\u5b9a\u65f6\u95f4\uff08\u5982\u665a\u4e0a 11 \u70b9\uff09\u90e8\u7f72\u5219\u5e94\u91c7\u7528\u672c\u5b89\u5168\u7b56\u7565\uff0c\u7136\u540e\u8bbe\u7f6e\u6587\u6863 api \u7684\u65f6\u95f4\u8303\u56f4\uff08\u5982\u665a\u4e0a 11 \u65f6\u81f3 11 \u65f6 15 \u5206\uff09\uff1b \u4f7f\u7528\u5f3a\u5bc6\u7801\uff08Web Api \u7528\u6237\u521b\u5efa\uff09 \u4e0d\u8981\u7981\u7528\u300c\u5728\u767b\u5f55\u5931\u8d25\u65f6\u9650\u5236\u8bbf\u95ee\u300d\u7684\u529f\u80fd\uff08\u901a\u8fc7\u914d\u7f6e\uff09\uff1b \u5728 api \u4e0a\u6267\u884c GetToken/Script \u65f6\u542f\u7528\u7535\u5b50\u90ae\u4ef6\u901a\u77e5\uff08\u901a\u8fc7\u914d\u7f6e\uff09\u3002 \u5173\u4e8e\u5b89\u5168\u8bbe\u7f6e\uff08security settings\uff09\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605 Web Api \u7684 appsettings.json \u6587\u4ef6\u3002 \u81ea\u52a8\u66f4\u65b0 \u00b6 \u5982\u679c\u5b58\u5728\u53ef\u7528\u7684\u65b0\u7248\u672c\uff0c\u4f60\u53ef\u4ee5\u81ea\u52a8\u66f4\u65b0 FlubuCore Web Api\u3002\u53ea\u9700\u8981\u5bfc\u822a\u5230 /UpdateCenter\uff08\u4e0d\u662f /api/UpdateCenter\uff09 \u901a\u8fc7 FlubuCore Web App \u8fdc\u7a0b\u624b\u52a8\u6267\u884c\u76ee\u6807 \u00b6 \u4f60\u53ef\u4ee5\u901a\u8fc7 FlubuCore Web App \u624b\u5de5\u6267\u884c\u76ee\u6807\uff08target\uff09\uff0c\u53ea\u9700\u8981\u5bfc\u822a\u5230 /Script","title":"\u5165\u95e8"},{"location":"WebApi/getting-started/#_1","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 FlubuCore Web Api \u8fdc\u7a0b\u6267\u884c FlubuCore \u811a\u672c\u3002\u8fd9\u4e3b\u8981\u662f\u4e3a\u4e86\u8ba9 .NET \u6216 .NET Core \u5e94\u7528\u7a0b\u5e8f\u4ece\u6784\u5efa\u670d\u52a1\u5668\uff08build server\uff09\u90e8\u7f72\u5230\u4e0d\u540c\u73af\u5883\u7684\u81ea\u52a8\u5316\u90e8\u7f72\u53ef\u4ee5\u901a\u8fc7\u4efb\u610f FLubuCore \u811a\u672c\u6765\u6267\u884c\u3002 Web Api \u652f\u6301\uff1a \u5728\u90e8\u7f72\u6709 FlubuCore Web Api \u7684\u670d\u52a1\u5668\u4e0a\u6267\u884c flubu \u811a\u672c\uff1b \u5728\u90e8\u7f72\u6709 FlubuCore Web Api \u7684\u670d\u52a1\u5668\u4e0a\u4e0a\u4f20\uff08\u53d1\u5e03\u6216\u5176\u5b83\u64cd\u4f5c\uff09\u5305\uff08package\uff09\uff1b \u5728\u90e8\u7f72\u6709 FlubuCore Web Api \u7684\u670d\u52a1\u5668\u4e0a\u5220\u9664\u5305\uff1b \u5411\u5ba2\u6237\u7aef\u53d1\u9001\u62a5\u544a\uff1b \u5728\u90e8\u7f72\u6709 FlubuCore Web Api \u7684\u670d\u52a1\u5668\u4e0a\u4e0a\u4f20 FlubuCore \u811a\u672c\uff1b \u81ea\u52a8\u66f4\u65b0\uff1b \u901a\u8fc7 FlubuCore Web App\uff08\u4e0e Web Api \u4e00\u540c\u90e8\u7f72\uff09\u624b\u52a8\u6267\u884c\u76ee\u6807\uff08target\uff09\u3002 \u672c\u6307\u5357\u5c06\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a \u5c06 FlubuCore Web Api \u90e8\u7f72\u5230\u670d\u52a1\u5668 \u7f16\u5199\u7528\u4e8e\u90e8\u7f72 MVC \u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\u4e8e\u670d\u52a1\u5668\u7684 .NET \u90e8\u7f72\u811a\u672c\u3002\u5982\u679c\u4f60\u60f3\u901a\u8fc7 FlubuCore.WebApi \u90e8\u7f72 .NET Core \u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u5e94\u5f53\u9605\u8bfb\u4e00\u4e0b\u672c\u6307\u5357\u3002\u4f7f\u7528 FlubuCore.WebApi \u90e8\u7f72 .NET Core \u6216 .NET \u5e94\u7528\u7a0b\u5e8f\u662f\u6ca1\u4ec0\u4e48\u5f88\u5927\u7684\u5dee\u522b\u7684\uff0c\u6240\u6709\u5dee\u5f02\u90fd\u4f1a\u5199\u5728\u672c\u6307\u5357\u4e2d\u3002 \u7f16\u5199\u6784\u5efa\u811a\u672c\uff0c\u5c06\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u5305\uff08deployment package\uff09\u4e0a\u4f20\u5230\u670d\u52a1\u5668\uff0c\u5e76\u6267\u884c\u6211\u4eec\u7f16\u5199\u7684\u90e8\u7f72\u811a\u672c\u3002 \u901a\u8fc7\u6784\u5efa\u811a\u672c\uff08build script\uff09\u8fdc\u7a0b\u8fd0\u884c\u90e8\u7f72\u811a\u672c\uff08deployment script\uff09\u3002","title":"\u5173\u4e8e"},{"location":"WebApi/getting-started/#_2","text":".NET \u8fd0\u884c\u65f6 4.6.2 \u6216\u66f4\u9ad8\uff0c\u6216\u5728\u670d\u52a1\u5668\u4e0a\u5b89\u88c5 .NET Core Runtime\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u6253\u7b97\u4f7f\u7528\u7684 FlubuCore.WebApi \u6784\u5efa\u54ea\u4e00\u79cd\u5e94\u7528\u3002","title":"\u8981\u6c42"},{"location":"WebApi/getting-started/#web-api","text":"\u4ece https://github.com/dotnetcore/FlubuCore/releases \u83b7\u53d6\u9002\u5f53\u7684 Web Api \u90e8\u7f72\u5305\uff1b \u5c06 Web Api \u90e8\u7f72\u5305\u590d\u5236\u5230\u9700\u8981\u6267\u884c flubu \u811a\u672c\u7684\u670d\u52a1\u5668\u4e0a\uff1b \u89e3\u538b\u7f29\u5305\uff1b \u5728\u89e3\u538b\u7f29\u7684 DeploymentConfig.json \u6587\u4ef6\u4e2d\u8bbe\u7f6e Web Api \u90e8\u7f72\u914d\u7f6e\u8bbe\u7f6e\u3002\u6709\u5173\u7279\u5b9a\u90e8\u7f72\u8bbe\u7f6e\u7684\u66f4\u591a\u4fe1\u606f\u53ef\u89c1\u914d\u7f6e\u6587\u4ef6\uff1b \u5728 Windows \u670d\u52a1\u5668\u4e0a\u8fd0\u884c deploy.bat \u90e8\u7f72 Web Api\uff1b \u5728 Linux/macOS \u670d\u52a1\u5668\u4e0a\u4f9d\u6b21\u8fd0\u884c dotnet restore \u3001 dotnet flubu -s=deploymentscript.cs \u5728\u90e8\u7f72\u4f4d\u7f6e\u8fd0\u884c dotnet FlubuCore.WebApi.dll \uff0c\u542f\u52a8\u81ea\u6258\u7ba1\uff08selfhost\uff09\u7684 Web Api\u3002\u4f60\u5f53\u7136\u4e5f\u53ef\u4ee5\u5728 IIS \u4e0a\u6258\u7ba1\u5b83\u2026\u2026","title":"Web Api \u5f00\u53d1"},{"location":"WebApi/getting-started/#iis","text":"\u5982\u4f55\u90e8\u7f72 ASP.NET Core \u5e94\u7528\u7a0b\u5e8f\uff0c\u8bf7\u67e5\u9605\uff1a https://docs.microsoft.com/en-us/aspnet/core/publishing/iis?tabs=aspnetcore2x \u67d0\u4e9b\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\uff08administration rights\uff09\uff0c\u6bd4\u5982\u542f\u52a8/\u505c\u6b62\u5e94\u7528\u7a0b\u5e8f\u6c60\uff08application pool\uff09\u3002\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f60\u5fc5\u987b\u5728\u6258\u7ba1 Web Api \u7684\u5e94\u7528\u7a0b\u5e8f\u6c60\u4e2d\u4fee\u6539\u8eab\u4efd\u3002\u5207\u6362\u5230\u300c\u5e94\u7528\u7a0b\u5e8f\u6c60\u300d\u2192\u300cWeb Api \u5e94\u7528\u7a0b\u5e8f\u6c60\u300d\u2192\u300c\u9ad8\u7ea7\u8bbe\u7f6e...\u300d\u2192\u300c\u8fdb\u7a0b\u6a21\u578b\u300d\u2192\u300c\u6807\u8bc6\u300d\uff0c\u5e76\u66f4\u6539\u4e3a\u5177\u6709\u7ba1\u7406\u5458\u6743\u9650\u7684\u8d26\u6237\u3002","title":"IIS \u5f00\u53d1"},{"location":"WebApi/getting-started/#_3","text":"\u7528\u4e8e\u793a\u4f8b\u7684 .NET \u90e8\u7f72\u811a\u672c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u3002\u5982\u679c\u4f60\u60f3\u5c1d\u8bd5\u8be5\u793a\u4f8b\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u662f\u590d\u5236 flubu core \u7684\u76ee\u5f55\u3002.NET Core \u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u811a\u672c\u4f1a\u7565\u6709\u4e0d\u540c\u3002 .NET \u5e94\u7528\u7a0b\u5e8f\u7684\u793a\u4f8b\u90e8\u7f72\u811a\u672c\u5c06\uff1a \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u521b\u5efa IIS \u5e94\u7528\u7a0b\u5e8f\u6c60\uff1b \u505c\u6b62\u5e94\u7528\u7a0b\u5e8f\u6c60\uff1b \u4ece /packages \u76ee\u5f55\u4e0b\u89e3\u538b\u7f29\u5305\uff08\u5c06\u4f7f\u7528\u6784\u5efa\u811a\u672c\u4e0a\u4f20\u5230 Web Api\uff09\uff1b \u590d\u5236\u89e3\u538b\u7f29\u7684\u5e94\u7528\u7a0b\u5e8f\u5230\u6258\u7ba1\u5b83\u7684\u65b0\u6587\u4ef6\u5939\uff1b \u5728 IIS \u4e0a\u521b\u5efa\u7ad9\u70b9\uff0c\u5982 Web \u5e94\u7528\u7a0b\u5e8f\uff1b \u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\u6c60\u3002 \u5b8c\u6210\u90e8\u7f72\u811a\u672c\u7684\u7f16\u5199\u4e4b\u540e\uff0c\u624b\u52a8\u5c06\u5176\u590d\u5236\u5230 Web Api \u90e8\u7f72\u4f4d\u7f6e\u7684 /scripts \u6587\u4ef6\u5939\u4e0b\u3002Web Api \u4e5f\u53ef\u4ee5\u4e0a\u4f20\u811a\u672c\uff0c\u4f46\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u8fd9\u4e2a\u529f\u80fd\u9ed8\u8ba4\u662f\u7981\u7528\u7684\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5e94\u4fdd\u6301\u7981\u7528\u72b6\u6001\u3002 \u5982\u679c\u9700\u8981\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u60c5\u51b5\u4fee\u6539\u793a\u4f8b DeployScript\u3002","title":"\u7f16\u5199\u90e8\u7f72\u811a\u672c"},{"location":"WebApi/getting-started/#_4","text":"\u7528\u4e8e\u793a\u4f8b\u7684 .NET \u6784\u5efa\u811a\u672c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u3002 .NET \u793a\u4f8b\u6784\u5efa\u811a\u672c\u5c06\uff1a \u83b7\u53d6\u8eab\u4efd\u9a8c\u8bc1\u4ee4\u724c\uff08authentication token\uff09 \u5728 Web Api \u4e0a\u5220\u9664 /packages \u76ee\u5f55\u4e0b\u7684\u65e7\u7684\u5305 \u4e0a\u4f20\u5305\uff08package\uff09\u5230 Web Api \u7684 /packages \u6587\u4ef6\u5939\u4e0b \u6267\u884c /scripts \u6587\u4ef6\u5939\u4e0b\u6211\u4eec\u624b\u52a8\u4e0a\u4f20\u7684\u90e8\u7f72\u811a\u672c \u5982\u679c\u9700\u8981\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u60c5\u51b5\u4fee\u6539\u793a\u4f8b BuildScript\u3002","title":"\u7f16\u5199\u6784\u5efa\u811a\u672c"},{"location":"WebApi/getting-started/#_5","text":"\u5982\u679c\u4f60\u514b\u9686\uff08clone\uff09\u4e86\u793a\u4f8b\u4ee3\u7801\u4ed3\u5e93\uff0c\u53ea\u9700\u8981\u5728\u6839\u76ee\u5f55\uff08DeployScriptExample folder\uff09\u4e0b\u6267\u884c\uff1a dotnet restore buildscript.csproj \uff0c\u4ee5\u53ca dotnet flubu deploy -s=buildscript\\buildscript.cs \u5b9e\u9645\u4e0a\u4f60\u53ef\u80fd\u5728\u6210\u529f\u6784\u5efa\u4e4b\u540e\u4ece\u6784\u5efa\u670d\u52a1\u5668\u90e8\u7f72\u3002\u5728\u5408\u5e76\u5230\u53d1\u5e03\u5206\u652f\u4e4b\u540e\uff0c\u5728\u6784\u5efa\u670d\u52a1\u5668\u4e0a\u624b\u52a8\u6267\u884c\u4f5c\u4e1a\uff08job\uff09\u2026\u2026","title":"\u8fd0\u884c\u90e8\u7f72\u811a\u672c"},{"location":"WebApi/getting-started/#_6","text":"\u5982\u679c\u653b\u51fb\u8005\u80fd\u83b7\u53d6 Web Api \u7684\u8bbf\u95ee\u6743\u9650\uff0c\u90a3\u4e48\u4ed6\u53ef\u80fd\u4f1a\u8fdb\u884c\u5927\u91cf\u7834\u574f\uff08do alot of damage\uff09\u3002\u5982\u6709\u53ef\u80fd\uff0c\u5e94\u5b9e\u65bd\u4ee5\u4e0b\u5b89\u5168\u4e3e\u63aa\uff08security measures\uff09\uff1a \u5982\u6709\u53ef\u80fd\uff0cFLubu Web Api \u4e0d\u5e94\u5177\u6709\u5bf9\u5916\u516c\u5f00\u8bbf\u95ee\u7684\u6743\u9650\uff1b \u59cb\u7ec8\u901a\u8fc7 https \u6258\u7ba1 Web Api\uff1b \u901a\u8fc7 ip\uff08\u901a\u8fc7\u914d\u7f6e\uff09\u9650\u5236\u8bbf\u95ee\uff1b \u901a\u8fc7\u65f6\u95f4\u8303\u56f4\uff08\u901a\u8fc7\u914d\u7f6e\uff09\u9650\u5236\u8bbf\u95ee\u3002\u5982\u679c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u5728\u56fa\u5b9a\u65f6\u95f4\uff08\u5982\u665a\u4e0a 11 \u70b9\uff09\u90e8\u7f72\u5219\u5e94\u91c7\u7528\u672c\u5b89\u5168\u7b56\u7565\uff0c\u7136\u540e\u8bbe\u7f6e\u6587\u6863 api \u7684\u65f6\u95f4\u8303\u56f4\uff08\u5982\u665a\u4e0a 11 \u65f6\u81f3 11 \u65f6 15 \u5206\uff09\uff1b \u4f7f\u7528\u5f3a\u5bc6\u7801\uff08Web Api \u7528\u6237\u521b\u5efa\uff09 \u4e0d\u8981\u7981\u7528\u300c\u5728\u767b\u5f55\u5931\u8d25\u65f6\u9650\u5236\u8bbf\u95ee\u300d\u7684\u529f\u80fd\uff08\u901a\u8fc7\u914d\u7f6e\uff09\uff1b \u5728 api \u4e0a\u6267\u884c GetToken/Script \u65f6\u542f\u7528\u7535\u5b50\u90ae\u4ef6\u901a\u77e5\uff08\u901a\u8fc7\u914d\u7f6e\uff09\u3002 \u5173\u4e8e\u5b89\u5168\u8bbe\u7f6e\uff08security settings\uff09\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605 Web Api \u7684 appsettings.json \u6587\u4ef6\u3002","title":"\u5b89\u5168"},{"location":"WebApi/getting-started/#_7","text":"\u5982\u679c\u5b58\u5728\u53ef\u7528\u7684\u65b0\u7248\u672c\uff0c\u4f60\u53ef\u4ee5\u81ea\u52a8\u66f4\u65b0 FlubuCore Web Api\u3002\u53ea\u9700\u8981\u5bfc\u822a\u5230 /UpdateCenter\uff08\u4e0d\u662f /api/UpdateCenter\uff09","title":"\u81ea\u52a8\u66f4\u65b0"},{"location":"WebApi/getting-started/#flubucore-web-app","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7 FlubuCore Web App \u624b\u5de5\u6267\u884c\u76ee\u6807\uff08target\uff09\uff0c\u53ea\u9700\u8981\u5bfc\u822a\u5230 /Script","title":"\u901a\u8fc7 FlubuCore Web App \u8fdc\u7a0b\u624b\u52a8\u6267\u884c\u76ee\u6807"}]}